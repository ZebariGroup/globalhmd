{
  "openapi": "3.0.4",
  "info": {
    "title": "Curasev API",
    "description": "Curasev Web Application API",
    "contact": {
      "name": "P4 Technologies Group",
      "url": "https://curasev.com",
      "email": ""
    },
    "license": {
      "name": "Curasev License",
      "url": "https://curasev.com"
    },
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "http://api.curasev.com"
    }
  ],
  "paths": {
    "/api/v1/AbilityCSI/save": {
      "post": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "summary": "save AbilityCSIDetail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/init-save": {
      "post": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "summary": "save AbilityCSIDetail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/get-ability-cmn-details": {
      "post": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/delete-ability-claim/{claimId}": {
      "delete": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/get-ability-claim-history": {
      "post": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/ability-password-change": {
      "post": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AbilityCSI/ability-generate-password": {
      "get": {
        "tags": [
          "AbilityCSIDetail"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn": {
      "get": {
        "tags": [
          "ABNGeneral"
        ],
        "summary": "get abn list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ABNProductIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ABNProductIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ABNStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ABNStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn/{abnId}": {
      "delete": {
        "tags": [
          "ABNGeneral"
        ],
        "summary": "delete ABN by abnId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "abnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn/general/{abnProductId}": {
      "get": {
        "tags": [
          "ABNGeneral"
        ],
        "summary": "get abn genral Info by abnProductId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {abnProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "abnProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn/logabn": {
      "post": {
        "tags": [
          "ABNGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/abn/general/update": {
      "post": {
        "tags": [
          "ABNGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.ABNModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn/ABNPrint": {
      "post": {
        "tags": [
          "ABNGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.PrintABNModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.PrintABNModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.PrintABNModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ABN.Models.PrintABNModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/abn/products/get-abn-products-by-abnId/{abnId}": {
      "get": {
        "tags": [
          "ABNProduct"
        ],
        "summary": "get abn product by abnId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "abnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/abn/products/{abnProductId}": {
      "delete": {
        "tags": [
          "ABNProduct"
        ],
        "summary": "delete ABN Product by abnProductId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "abnProductId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/create-claim": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/get-list/{invoiceBatchId}/{offset}/{limit}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/get/{invoiceBatchId}/{claimID}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/get-claim-change/{invoiceBatchId}/{claimID}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/update": {
      "put": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/delete/{invoiceBatchId}/{claimID}": {
      "delete": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/validate": {
      "put": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ValidateClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ValidateClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ValidateClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ValidateClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/events": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/print-form": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/secondary": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.UpdateClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/update-batch-status": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/batch": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.PostClaimModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/upload-form": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceAbilityModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/batches/summary/{invoiceBatchId}/{abilityBatchId}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "abilityBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/batches/validation/{invoiceBatchId}/{abilityBatchId}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "abilityBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/batches/batchSummary/{startDate}/{endDate}/{offSet}/{limit}": {
      "get": {
        "tags": [
          "AccessClaim"
        ],
        "summary": "Get Batch Summary of Access-Claims.",
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offSet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access-claim/update-event-ack-status": {
      "post": {
        "tags": [
          "AccessClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimEvenetUpdateRquestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimEvenetUpdateRquestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimEvenetUpdateRquestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimEvenetUpdateRquestModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/accounttype/{accountTypeId}": {
      "get": {
        "tags": [
          "AccountType"
        ],
        "summary": "Get AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET accountTypeId\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"1 records found\",\r\n        \"data\": {\r\n           \"accountTypes\": [\r\n        {\r\n        \"accountTypeId\": 2,\r\n        \"code\": \"BLUECROSS\",\r\n        \"notes\": null,\r\n        \"name\": \"Blue Cross\",\r\n           \"noOfDaysAfterToFollowUp\": null,\r\n              \"accountOwnerId\": null\r\n             }\r\n          ]\r\n         }\r\n    }",
        "parameters": [
          {
            "name": "accountTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AccountType"
        ],
        "summary": "Delete AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {accountTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"AccountType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "accountTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/accounttype": {
      "post": {
        "tags": [
          "AccountType"
        ],
        "summary": "Save AccountType in a system",
        "description": "Sample request:\r\n\r\n     {    \r\n         \"accountTypeId\":6,\r\n         \"code\":null,\r\n         \"notes\":\"asdasd\",\r\n         \"name\":\"test account \",\r\n         \"noOfDaysAfterToFollowUp\":null,\r\n         \"accountOwnerId\":null,\r\n         \"isEditing\":false\r\n     }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\":200,\r\n        \"status\":\"Ok\",\r\n        \"message\":\"Account Type successfully saved\",\r\n        \"data\":{\"accountTypeId\":6,\"isSuccess\":true}\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AccountTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AccountTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AccountTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AccountTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/address/add-address": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "add new address .",
        "description": "Sample request:\r\n            \r\n    HttpPOST\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/address/GetAddressByAddressId/{addressId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get address by addressId",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/adjustment-reason/list": {
      "get": {
        "tags": [
          "AdjustmentReason"
        ],
        "summary": "get adjustment reasons",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"AdjustmentReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SecondaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SecondaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TertiaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TertiaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuaternaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuaternaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuinaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuinaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SenaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SenaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/adjustment-reason/getdonothinglist": {
      "get": {
        "tags": [
          "AdjustmentReason"
        ],
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SecondaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SecondaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TertiaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TertiaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuaternaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuaternaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuinaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuinaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SenaryActionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SenaryActionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/adjustment-reason/save-adjustment-reason": {
      "post": {
        "tags": [
          "AdjustmentReason"
        ],
        "summary": "save pay reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PayReason successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/adjustment-reason/save-adjustment-action": {
      "post": {
        "tags": [
          "AdjustmentReason"
        ],
        "summary": "save pay reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PayReason successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AdjustmentReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/adjustment-reason/search-by-key": {
      "get": {
        "tags": [
          "AdjustmentReason"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/appointment-block-type/get-all-appointment-block-type": {
      "post": {
        "tags": [
          "AppointmentBlockType"
        ],
        "summary": "get AppointmentBlockTypeController by appointmentBlockTypeRepository from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment block type Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-block-type/{appointmentBlockTypeId}": {
      "get": {
        "tags": [
          "AppointmentBlockType"
        ],
        "summary": "get AppointmentBlockTypeController by appointmentBlockTypeRepository from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentBlockTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment block type Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentBlockTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AppointmentBlockType"
        ],
        "summary": "delete appointmentBlockTypeRepository from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {appointmentTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Appointment Status successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentBlockTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-block-type": {
      "post": {
        "tags": [
          "AppointmentBlockType"
        ],
        "summary": "save appointmentBlockTypeRepository in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Appointment block type successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentBlockTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentBlockTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentBlockTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentBlockTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-cancellation-reason/get-all-appointment-cancellation-reason": {
      "post": {
        "tags": [
          "AppointmentCancellationReason"
        ],
        "summary": "get appointmentCancellationService by appointmentCancellationService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentCancellationServiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Cancellation Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-cancellation-reason/{appointmentCancellationServiceId}": {
      "get": {
        "tags": [
          "AppointmentCancellationReason"
        ],
        "summary": "get appointmentCancellationService by appointmentCancellationService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentCancellationServiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Cancellation Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentCancellationServiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-cancellation-reason": {
      "post": {
        "tags": [
          "AppointmentCancellationReason"
        ],
        "summary": "save AppointmentCancellationService in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Appointment Cancellation Service successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentCancellationReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentCancellationReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentCancellationReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentCancellationReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-cancellation-reason/{appointmentCancellationReasonId}": {
      "delete": {
        "tags": [
          "AppointmentCancellationReason"
        ],
        "summary": "delete Appointment Cancellation Reason by facilityGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {appointmentCancellationReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Appointment Cancellation Reason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentCancellationReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-status/get-all-appointment-status": {
      "post": {
        "tags": [
          "AppointmentStatus"
        ],
        "summary": "get appointmentStatusService by appointmentStatusService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentStatusServiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Status Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-status/{appointmentStatusId}": {
      "get": {
        "tags": [
          "AppointmentStatus"
        ],
        "summary": "get appointmentStatusService by appointmentStatusService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentStatusServiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Status Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentStatusId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AppointmentStatus"
        ],
        "summary": "delete Appointment Status from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {appointmentStatusId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Appointment Status successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentStatusId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-status": {
      "post": {
        "tags": [
          "AppointmentStatus"
        ],
        "summary": "save appointmentStatusService in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Appointment Status successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-type/get-all-appointment-type": {
      "post": {
        "tags": [
          "AppointmentType"
        ],
        "summary": "get AppointmentTypeController by appointmentStatusService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentStatusTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Status Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-type/{appointmentTypeId}": {
      "get": {
        "tags": [
          "AppointmentType"
        ],
        "summary": "get AppointmentTypeController by appointmentTypeService from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {appointmentTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Type Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "AppointmentType"
        ],
        "summary": "delete appointmentTypeService from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {appointmentTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Appointment Status successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "appointmentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/appointment-type": {
      "post": {
        "tags": [
          "AppointmentType"
        ],
        "summary": "save appointmentTypeService in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Appointment Type successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.AppointmentTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/aws/get-s3presigned-url": {
      "get": {
        "tags": [
          "Aws"
        ],
        "summary": "Get S3 presigned url.",
        "description": "Sample request:\r\n            \r\n    GET /aws/get-presigned-url/fileName\r\n            \r\nSample response:\r\n\r\n    {\r\n        \"code\":200,\r\n        \"status\":\"Success\",\r\n        \"message\":\"Successful\",\r\n        \"data\":{presignedUrl}\r\n    }",
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/batch/batch-list": {
      "get": {
        "tags": [
          "Batch"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "DateOfServiceFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateOfServiceTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ServiceStartDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ServiceStartDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InsuranceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceGroupId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorLevelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InvoiceIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BatchStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DayDifference",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BatchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsApproved",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AcceptsElectronicClaims",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AcceptsPaperClaims",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClaimFormId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasServiceEndDateFilter",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BatchIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BatchIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionMethodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionMethodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimSubmitterExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimSubmitterValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerLevelExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerLevelValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumberOfClaimsExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumberOfClaimsValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsDeletedRejected",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsJopariClaimSubmitter",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDuplicate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batch/get-claims": {
      "post": {
        "tags": [
          "Batch"
        ],
        "summary": "save batchs in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/batch/send-837-to-submitter/{invoiceBatchId}": {
      "get": {
        "tags": [
          "Batch"
        ],
        "parameters": [
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/batch/batch-re-login-claim-submitter/{claimSubmitterId}/{invoiceBatchId}": {
      "get": {
        "tags": [
          "Batch"
        ],
        "parameters": [
          {
            "name": "claimSubmitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "invoiceBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/branch/branch-list": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get full list from branch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "BranchNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NPIExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NPIValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchPhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchPhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchFaxExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchFaxValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If successfull",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "No records found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/distribution-branch-list": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get distribution branch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "If successfull",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "No records found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/{branchId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "summary": "Delete branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Branch successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/save": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Save branch detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/search-by-key": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch detail by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \" records found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/search-by-name-address": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/branch-timing/{branchId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/creditCard-data/{branchId}/{clientId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/update-branch-from-distribution": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "update branch from distribution",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.UpdateBranchDetailModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.UpdateBranchDetailModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.UpdateBranchDetailModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.UpdateBranchDetailModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/update-timing": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Save branch detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchTimingModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchTimingModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchTimingModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchTimingModel"
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/update-creditcard": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Save branch detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchCreditCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchCreditCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchCreditCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchCreditCardModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/save-user-default-branch-setting": {
      "post": {
        "tags": [
          "Branch"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/get-branch-all-routes-list": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get full list from branch routes.",
        "description": "Sample request:\r\n            \r\n     HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch Routes list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If successfull",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "No records found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/branch-list-simple-with-filter": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "BranchNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedRouteExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedRouteValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchStatus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchGroupId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/contact/get-contact/{branchId}": {
      "get": {
        "tags": [
          "BranchContact"
        ],
        "summary": "Get branch contact by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch Contact found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch/contact/save-contact": {
      "post": {
        "tags": [
          "BranchContact"
        ],
        "summary": "save branch contact in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/branch/contact/delete-contact/{branchId}/{contactPersonId}": {
      "get": {
        "tags": [
          "BranchContact"
        ],
        "summary": "Delete branch contact by branchId and contactPersonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {branchId}{contactPersonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Branch successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contactPersonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-eclaim-carrier/{branchId}": {
      "get": {
        "tags": [
          "BranchEclaimCarrier"
        ],
        "summary": "Get brancdhEclaim Carrier by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-eclaim-carrier/save": {
      "post": {
        "tags": [
          "BranchEclaimCarrier"
        ],
        "summary": "Save brancdhEclaim Carrier in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEclaimCarrierModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEclaimCarrierModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEclaimCarrierModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEclaimCarrierModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-employee/save": {
      "post": {
        "tags": [
          "BranchEmployee"
        ],
        "summary": "save branch user in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEmployeeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEmployeeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEmployeeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchEmployeeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Branch User entered successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entry for entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Exception occured",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-employee/{branchId}": {
      "get": {
        "tags": [
          "BranchEmployee"
        ],
        "summary": "get branch employee by branchId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-finance/{branchId}": {
      "get": {
        "tags": [
          "BranchFinance"
        ],
        "summary": "Get Branch Finances from a system.",
        "description": "Sample request:\r\n\r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-finance/save": {
      "post": {
        "tags": [
          "BranchFinance"
        ],
        "summary": "Save Branch Finance in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFinanceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFinanceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFinanceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFinanceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-finance/{financeId}": {
      "delete": {
        "tags": [
          "BranchFinance"
        ],
        "summary": "Delete Branch Finance by financeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {financeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"HoldBranch Finance successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "financeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-form/{branchId}": {
      "get": {
        "tags": [
          "BranchForm"
        ],
        "summary": "Get Branch Form by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-form/MRNotification/{branchId}/{patinetId}": {
      "get": {
        "tags": [
          "BranchForm"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "patinetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/branch-form/save": {
      "post": {
        "tags": [
          "BranchForm"
        ],
        "summary": "Save Branch Form in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-form/upload-branch-logo": {
      "post": {
        "tags": [
          "BranchForm"
        ],
        "summary": "Upload Branch logo of branch in a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "BranchId",
            "in": "query",
            "description": "BranchId\r\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchKey",
            "in": "query",
            "description": "BranchKey\r\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchLogoPath",
            "in": "query",
            "description": "BranchLogoPath\r\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Image",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "description": "File\r\n",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-form/remove-mrnotification": {
      "post": {
        "tags": [
          "BranchForm"
        ],
        "summary": "Save Branch Form in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.RemoveMrNotificationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.RemoveMrNotificationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.RemoveMrNotificationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.RemoveMrNotificationModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-group/branch-group-list": {
      "get": {
        "tags": [
          "BranchGroup"
        ],
        "summary": "Get full list of Branch Group from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-group/{branchGroupId}": {
      "get": {
        "tags": [
          "BranchGroup"
        ],
        "summary": "Get full list of Branch Group by branchGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BranchGroup"
        ],
        "summary": "Delete branch group detail by branchGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {branchGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"Branch successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-group/save": {
      "post": {
        "tags": [
          "BranchGroup"
        ],
        "summary": "Save branch group in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchGroupModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchGroupModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-pos-poa/{branchId}": {
      "get": {
        "tags": [
          "BranchPos"
        ],
        "summary": "Get branch pos detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-pos-poa/save": {
      "post": {
        "tags": [
          "BranchPos"
        ],
        "summary": "Save branch detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-system/{branchId}": {
      "get": {
        "tags": [
          "BranchSystem"
        ],
        "summary": "Get Branch System by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/branch-system/save": {
      "post": {
        "tags": [
          "BranchSystem"
        ],
        "summary": "Save Branch-System in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/bundle": {
      "get": {
        "tags": [
          "Bundle"
        ],
        "summary": "Get Full list of bundle from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Bundle found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BundleNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BundleNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductCountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductCountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchesExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchesValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundle"
        ],
        "summary": "Save bundle detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Bundle successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.BundleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.BundleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.BundleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.BundleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/bundle/{bundleId}": {
      "get": {
        "tags": [
          "Bundle"
        ],
        "summary": "Get bundle detail by bundleId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {bundleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Bundle found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "bundleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Bundle"
        ],
        "summary": "Delete bundle detail by bundleId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {bundleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Bundle successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "bundleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/caller-notes/list": {
      "post": {
        "tags": [
          "CallerNotes"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CallerNotesModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CallerNotesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CallerNotesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CallerNotesModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/caller-notes/save-caller-note": {
      "post": {
        "tags": [
          "CallerNotes"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.AddCallerNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.AddCallerNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.AddCallerNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.AddCallerNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/caller-notes/get-caller-note-by-planBranchId": {
      "post": {
        "tags": [
          "CallerNotes"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.GetCallerNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.GetCallerNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.GetCallerNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.GetCallerNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/caller-notes/get-caller-note-by-callerNoteId/{callerNoteId}": {
      "get": {
        "tags": [
          "CallerNotes"
        ],
        "parameters": [
          {
            "name": "callerNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/caller-notes/mark-caller-note-as-completed": {
      "post": {
        "tags": [
          "CallerNotes"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CompleteCallerNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CompleteCallerNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CompleteCallerNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CallerNotes.Models.CompleteCallerNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/claim-management/dashboard-data": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/get-batch": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get claim to create a batch",
        "description": "Sample request:\r\n            \r\n     claim-submission/get-claims\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/create-batch": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.BatchModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/create-batch837": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.CareteBatch837"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.CareteBatch837"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.CareteBatch837"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.CareteBatch837"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/charge-review-create-batch": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.ChargeReviewCreateBatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.ChargeReviewCreateBatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.ChargeReviewCreateBatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Batch.Models.ChargeReviewCreateBatchModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/get-claims-v3": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ChargeReviewClaimsGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ChargeReviewClaimsGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ChargeReviewClaimsGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ChargeReviewClaimsGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/get-claims-v2": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/get-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/approve-unapprove-all-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Approve Unapprove-all-claims by InvoiceGetModel from a system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {InvoiceGetModel}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/approve-unapprove-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/{batchId}": {
      "delete": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "delete payment by paymentId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/{invoiceId}": {
      "get": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get invoice by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/update-claim": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/get-rejected-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.RejectedClaimsGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.RejectedClaimsGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.RejectedClaimsGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.RejectedClaimsGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/charge-review/hold-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get list of claims on hold by InvoiceId from the system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/delete-claim-from-batch": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Remove claim request by InvoiceId from the system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-tracker/rejected-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get list of rejected claim requests by InvoiceId from the system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/dashboard-data/data-grid": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Get dashboard for claim requests by InvoiceId from the system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/get-invoice-followups": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "summary": "Fetch list of follow up claims by InvoiceId from the system.",
        "description": "Sample request:\r\n            \r\n     HttpPost {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.FollowUpGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.FollowUpGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.FollowUpGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.FollowUpGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/resubmitclaim": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/updateresubmitclaim": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.AccessClaim.Models.ClaimInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/delete-invoice-line-item/{invoicelineitemId}": {
      "delete": {
        "tags": [
          "ClaimManagement"
        ],
        "parameters": [
          {
            "name": "invoicelineitemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claim-management/claim-submission/get-claims": {
      "post": {
        "tags": [
          "ClaimManagement"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ClaimSubmissionInvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ClaimSubmissionInvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ClaimSubmissionInvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.ClaimSubmissionInvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-submitter/claim-submitter-list/{claimSubmitterId}": {
      "get": {
        "tags": [
          "ClaimSubmitter"
        ],
        "summary": "Get Claim Submitters by claimSubmitterId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {claimSubmitterId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"CarrierType found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "claimSubmitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-submitter/save-claim-submitter": {
      "post": {
        "tags": [
          "ClaimSubmitter"
        ],
        "summary": "Save Claim Submitters in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"CarrierType successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ClaimSubmitterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ClaimSubmitterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ClaimSubmitterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ClaimSubmitterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-submitter/carrier-type-setting/{claimSubmitterId}": {
      "get": {
        "tags": [
          "ClaimSubmitter"
        ],
        "summary": "Get CarrierType Setting by claimSubmitterId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"CarrierType found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "claimSubmitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-submitter/save-carrier-type-setting": {
      "post": {
        "tags": [
          "ClaimSubmitter"
        ],
        "summary": "Save CarrierType Setting in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"CarrierType successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CarrierTypeSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CarrierTypeSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CarrierTypeSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CarrierTypeSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-submitter/{claimSubmitterId}": {
      "delete": {
        "tags": [
          "ClaimSubmitter"
        ],
        "summary": "Delete CarrierType Setting by claimSubmitterId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {claimSubmitterId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"CarrierType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "claimSubmitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn": {
      "get": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "get cmn list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "CMNIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/general/{cmnId}": {
      "get": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "get cmn general by cmnId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {cmnId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/general/save": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/{cmnId}": {
      "delete": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "delete CMN by cmnId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/logcmn": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/update-Rev-Rec": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/CMNPrint": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.PrintCMNModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.PrintCMNModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.PrintCMNModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.PrintCMNModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/ProperFitDiabeticShoes/{cmnId}": {
      "get": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId,patientId,branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/SimplyDMEFormPrint": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "print dme form cmn id",
        "description": "Sample request:\r\n            \r\n    HttpPost {cmnId,salesOrderId,formType}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.SimplyDMEModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.SimplyDMEModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.SimplyDMEModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.SimplyDMEModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/dashboard-data": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "get dashboard Data from delivery.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/general/manually/save": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/manually/{cmnId}/{salesOrderId}": {
      "delete": {
        "tags": [
          "CMNGeneral"
        ],
        "summary": "delete CMN by cmnId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "salesOrderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/question-list": {
      "get": {
        "tags": [
          "CMNGeneral"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TableName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/question-answer/save": {
      "post": {
        "tags": [
          "CMNGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestion"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestion"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestion"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/general/getcmnForms/{invoiceId}": {
      "get": {
        "tags": [
          "CMNGeneral"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/products/get-products/{cmnId}": {
      "get": {
        "tags": [
          "CMNProduct"
        ],
        "summary": "get cmn product by cmnId.",
        "description": "Sample request:\r\n            \r\n    HttpGet get-products/{cmnId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/products/{cmnProductId}": {
      "get": {
        "tags": [
          "CMNProduct"
        ],
        "summary": "get cmn products by cmnId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {cmnId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMNProduct"
        ],
        "summary": "delete CMN Product by cmnProductId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {cmnProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"CMN Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/products/save": {
      "post": {
        "tags": [
          "CMNProduct"
        ],
        "summary": "save CMN product in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNProductsInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNProductsInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNProductsInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNProductsInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/products/get-proc-code/{productItemId}": {
      "get": {
        "tags": [
          "CMNProduct"
        ],
        "summary": "get cmn products by cmnId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {cmnId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/task/GetCMNTasks/{cmnId}": {
      "get": {
        "tags": [
          "CMNTask"
        ],
        "summary": "get CMN tasks by cmnId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {cmnId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/task/GetCMNTaskById/{cmnTaskId}": {
      "get": {
        "tags": [
          "CMNTask"
        ],
        "summary": "get CMN tasks by cmnTaskId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {cmnTaskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/task/save-task": {
      "post": {
        "tags": [
          "CMNTask"
        ],
        "summary": "save CMN task in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/task/save-comment": {
      "post": {
        "tags": [
          "CMNTask"
        ],
        "summary": "save task comment in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskCommentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskCommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskCommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNTaskCommentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/cmn/task/delete-task/{cmnTaskId}": {
      "delete": {
        "tags": [
          "CMNTask"
        ],
        "summary": "delete task by cmntaskId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {cmntaskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cmn/task/delete-comment/{cmnTaskCommentId}": {
      "delete": {
        "tags": [
          "CMNTask"
        ],
        "summary": "delete task comment by cmnTaskCommentId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {cmnTaskCommentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "cmnTaskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/color": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET accountTypeId\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"1 records found\",\r\n        \"data\": {\r\n           \"GetColors\": [\r\n        {\r\n        \"colorId\": 1,\r\n        \"Color\": \"RED\",\r\n        \"notes\": null,\r\n             }\r\n          ]\r\n         }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Color"
        ],
        "summary": "Save AccountType in a system",
        "description": "Sample request:\r\n\r\n     {    \r\n         \"accountTypeId\":6,\r\n         \"code\":null,\r\n         \"notes\":\"asdasd\",\r\n         \"name\":\"test account \",\r\n         \"noOfDaysAfterToFollowUp\":null,\r\n         \"accountOwnerId\":null,\r\n         \"isEditing\":false\r\n     }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\":200,\r\n        \"status\":\"Ok\",\r\n        \"message\":\"Account Type successfully saved\",\r\n        \"data\":{\"accountTypeId\":6,\"isSuccess\":true}\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ColorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ColorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ColorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ColorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/color/{colorId}": {
      "delete": {
        "tags": [
          "Color"
        ],
        "summary": "Delete AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {accountTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"AccountType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "colorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/color/get-color-byId/{colorId}": {
      "get": {
        "tags": [
          "Color"
        ],
        "parameters": [
          {
            "name": "colorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/commercial-payer": {
      "post": {
        "tags": [
          "CommercialPayer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CommercialPayerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CommercialPayerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CommercialPayerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CommercialPayerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/competition": {
      "get": {
        "tags": [
          "Competition"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Competition"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CompetitionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CompetitionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CompetitionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.CompetitionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/competition/{competitionId}": {
      "delete": {
        "tags": [
          "Competition"
        ],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/configurations/get-permissions": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get AllowedPage Features by featurename from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {featurename}\r\n    \r\nSample response:\r\n\r\n{\r\n    \"code\": \"200\",\r\n    \"status\": \"Success\",\r\n    \"message\": \"Successful.\",\r\n    \"data\": {\r\n    }\r\n}",
        "parameters": [
          {
            "name": "featurename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurations/get-allowed-page-features": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get allowed page features.",
        "description": "Sample request:\r\n            \r\n    HTTPGET \r\n    \r\nSample response:\r\n\r\n{\r\n    \"code\": \"200\",\r\n    \"status\": \"Success\",\r\n    \"message\": \"Successful.\",\r\n    \"data\": {\r\n        \"allowedFeatures\": [\r\n            {\r\n                \"permissionCode\": \"VWUSER\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWROLE\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWPERMISSION\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWDASHBOARD\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWEMPLOYEETYPE\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            }\r\n        ]\r\n    }\r\n}",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurations/get-allowed-page-featuresV2": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get allowed page features.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n{\r\n    \"code\": \"200\",\r\n    \"status\": \"Success\",\r\n    \"message\": \"Successful.\",\r\n    \"data\": {\r\n        \"allowedFeatures\": [\r\n            {\r\n                \"permissionCode\": \"VWUSER\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWROLE\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWPERMISSION\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWDASHBOARD\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            },\r\n            {\r\n                \"permissionCode\": \"VWEMPLOYEETYPE\",\r\n                \"featureCode\": \"SORTABLE\"\r\n            }\r\n        ]\r\n    }\r\n}",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/configurations/save-page-feature-configurations": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Save Role permission in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPut /api/v1/configurations/save-page-feature-configurations\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Configurations Successfully Updated.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.PageFeaturePermissionToggleModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.PageFeaturePermissionToggleModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.PageFeaturePermissionToggleModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.PageFeaturePermissionToggleModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contacts List",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"1 records found\",\r\n        \"data\": {\r\n           \"GetColors\": [\r\n        {\r\n        \"colorId\": 1,\r\n        \"Color\": \"RED\",\r\n        \"notes\": null,\r\n             }\r\n          ]\r\n         }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/courier/track-all-shipment": {
      "get": {
        "tags": [
          "Courier"
        ],
        "summary": "This will fetch the shipment details with tracking number and other details.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/courier/track-shipment": {
      "post": {
        "tags": [
          "Courier"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/courier/save-track-shipment": {
      "post": {
        "tags": [
          "Courier"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.SaveShipmentrequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.SaveShipmentrequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.SaveShipmentrequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.SaveShipmentrequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/courier/proof-of-delivery": {
      "post": {
        "tags": [
          "Courier"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Courier.Models.CommonTrackShipmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/dashboard/open-tasks": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "get open tasks for a user from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.DashboardGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.DashboardGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.DashboardGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.DashboardGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/delete-metrics-dashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.MetricsDashboardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.MetricsDashboardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.MetricsDashboardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Dashboard.Models.MetricsDashboardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ddp-medical/auth-login": {
      "post": {
        "tags": [
          "DDPMedical"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System.Net.Http.HttpResponseMessage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Net.Http.HttpResponseMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Net.Http.HttpResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ddp-medical/patient-location/{patientId}": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/Create-patient-location/{patientId}": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/update-patient-location/{patientId}": {
      "post": {
        "tags": [
          "DDPMedical"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.UpdateAddressModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.UpdateAddressModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.UpdateAddressModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.UpdateAddressModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/Create-patient-salesorder": {
      "post": {
        "tags": [
          "DDPMedical"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.CreateLocationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.CreateLocationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.CreateLocationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.CreateLocationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/search-shipment": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/track-shipment": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/invoice-get": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ddp-medical/resupply-reminder": {
      "get": {
        "tags": [
          "DDPMedical"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/delivery-cancel-reason": {
      "get": {
        "tags": [
          "DeliveryCancelReason"
        ],
        "summary": "Get Delivery reasons from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "DeliveryCancelReason"
        ],
        "summary": "Save delivery Cancel reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DeliveryCancelReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DeliveryCancelReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DeliveryCancelReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DeliveryCancelReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/delivery-cancel-reason/{deliveryCancelReasonId}": {
      "delete": {
        "tags": [
          "DeliveryCancelReason"
        ],
        "summary": "Delete Delivery Cancel Reason reason by deliveryCancelReasonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {deliveryCancelReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Delivery Cancel Reason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "deliveryCancelReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/delivery-order/list": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get Deliveryorder from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-driver-schedules": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get Delivery schedules from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-assign-list": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get Assign delivery-orders from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-by-id/{orderId}": {
      "get": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get delivery-orders by deliveryOrderId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {deliveryOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "deliveryOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/save": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Save delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/bulk-update": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Update list of delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUpdateModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUpdateModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUpdateModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUpdateModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/bulk-order-unschedule": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Unschedules list of delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUnscheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUnscheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUnscheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUnscheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/bulk-driver-order-unschedule": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Unschedules list of driver's delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkDriverOrderUnscheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkDriverOrderUnscheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkDriverOrderUnscheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkDriverOrderUnscheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/switch-driver": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Switch driver of a delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderSwitchDriverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderSwitchDriverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderSwitchDriverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderSwitchDriverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/reverse-orders": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "reverse order of delivery-orders in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderReverseOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderReverseOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderReverseOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderReverseOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/lock-driver": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Lock driver in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderLockDriverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderLockDriverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderLockDriverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderLockDriverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/jump-to-date": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "move an order to specific date in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderJumpToDateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderJumpToDateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderJumpToDateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderJumpToDateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/assign-orders": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "assigned an order to specific driver in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkAssignModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkAssignModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkAssignModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkAssignModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/notify-driver": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Notify a driver.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderNotifyDriverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderNotifyDriverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderNotifyDriverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderNotifyDriverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-route-detail": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get route detail of driver from a system.",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-completed-route-detail": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "Get completed route detail of driver from a system.",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/dashboard-data": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "get dashboard Data from delivery.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/dashboard-data/data-grid": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/get-unscheduled-orders": {
      "post": {
        "tags": [
          "DeliveryOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderUnscheduledModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderUnscheduledModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderUnscheduledModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderUnscheduledModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery-order/notify-patient-for-delivery-schedule/{orderId}": {
      "get": {
        "tags": [
          "DeliveryOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetDeliveryOrders": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get Deliveryorder from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetEFilesBySalesOrder": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get Deliveryorder from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.EFilesGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.EFilesGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.EFilesGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryManagement.Models.EFilesGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetDeliveryOrderById/{deliveryOrderId}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get Deliveryorder by deliveryOrderId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {deliveryOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "deliveryOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetUnderMaintenanceInventoryByPatientId/{patientId}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get Under Maintenance Inventory By PatientId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {PatientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetUnderMaintenanceInventoryBySalesOrder": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get Under Maintenance Inventory By Facility from a system.",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.UnderMaintenanceInventoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.UnderMaintenanceInventoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.UnderMaintenanceInventoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.UnderMaintenanceInventoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/StartService": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Start the service.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryStartServiceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryStartServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryStartServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryStartServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/CompleteService": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Complete the service.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryCompleteServiceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryCompleteServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryCompleteServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryCompleteServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/TestImageUpload/{salesOrderId}/{patientId}/{clientKey}/{branchid}/{email}/{documentTypeId}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get driver's duty status from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeZone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/Notifications": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get notification and count.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/UpdateNotification": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Update notification in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/ClearNotification": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Update notification in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/SaveDriverWork": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "save driver's worked in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/send-order-notifications": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Send driver notification.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/getdriverlivelocation": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/getFirebaseData": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/removeFirebaseData": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetDriverDutyStatus/{sourceApp}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get driver's duty status from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "sourceApp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "CURAPRO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/GetAssessmentQuestion/{patientId}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Get driver's duty status from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/Save/AssessmentQuestion": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Update notification in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/DeliveryDocumentUpload": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Upload Delivery Document",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryDocumentUploadModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryDocumentUploadModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryDocumentUploadModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryDocumentUploadModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/PatientHistoryAndAssessment/{patientId}/{salesOrderId}/{emailId}/{documentId}": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId,patientId,branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/SendSMSForDeliveryOnRoute": {
      "post": {
        "tags": [
          "DeliveryOrderM"
        ],
        "summary": "Send SMS For Delivery On Route",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/DeliveryOrder/ConfirmSalesOrderAsync": {
      "get": {
        "tags": [
          "DeliveryOrderM"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/deposit": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "get deposit from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deposit/{depositId}": {
      "delete": {
        "tags": [
          "Deposit"
        ],
        "summary": "delete payment by paymentId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "depositId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deposit/remove-payment-from-deposit": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "delete payment by paymentId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deposit/depositTicket": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PrintDepositTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PrintDepositTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PrintDepositTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PrintDepositTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/deposit/dashboard-data": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "get dashboard Data from delivery.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deposit-general/save": {
      "post": {
        "tags": [
          "DepositGeneral"
        ],
        "summary": "save deposits in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.DepositGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/deposit-general/{depositId}": {
      "get": {
        "tags": [
          "DepositGeneral"
        ],
        "summary": "get deposit general by depositId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {depositId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "depositId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/diagnosis": {
      "get": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "Get Diagnosis from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Diagnosis list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "DiagnosisIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DiagnosisIdValue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NotesExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NotesValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DiagCategoryExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DiagCategoryValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "save Diagnosis in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Diagnosis successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DiagnosisModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DiagnosisModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DiagnosisModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DiagnosisModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/diagnosis/{diagnosisId}": {
      "get": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "Get Diagnosis by diagnosisId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet{diagnosisId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Diagnosis found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "diagnosisId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "delete Diagnosis by diagnosisId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {diagnosisId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Diagnosis successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "diagnosisId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/diagnosis/multiple": {
      "post": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "save Multiple Diagnosis in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Diagnosis successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MultipleDiagnosisMode"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MultipleDiagnosisMode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MultipleDiagnosisMode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MultipleDiagnosisMode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/diagnosis/search-by-key": {
      "get": {
        "tags": [
          "Diagnosis"
        ],
        "summary": "serach Diagnosis by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/distribution/get-routes": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Routes using the given search criteria in the routeSearchParameters",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeSearchParameters}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteSearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteSearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-route-by-id/{routeId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a route with the give routeId",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/save-route": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Saves a Route.  This will create a new route if the route doesn't exist.  It will update a route if it already exists.",
        "description": "Sample request:\r\n            \r\n    HttpPost {route}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Route"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Route"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Route"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Route"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/clone-route": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Clones a route with the given routeId",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "routeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "routeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-route/{routeId}": {
      "delete": {
        "tags": [
          "Distribution"
        ],
        "summary": "Deletes a route with the given routeId",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/add-stop-to-route": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Adds a Stop (Clinic) along a Route",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-stop-from-route": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Deletes a Stop (Clinic) from a Distribution Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeStop}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-stop-from-route/{routeId, clinicId}": {
      "delete": {
        "tags": [
          "Distribution"
        ],
        "summary": "Deletes a Stop (Clinic) along a route with the given clinicId and routeId",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeId, clinicId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "clinicId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "routeId, clinicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-route-history/{planId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets the history of distribution visits made to all the Clinics in this route",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-feedback": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Feedbacklist",
        "description": "Sample request:\r\n            \r\n     HttpPost{planSearchParameters} \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plans": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Plans based on the given criteria in the PlanSearchParameters",
        "description": "Sample request:\r\n            \r\n     HttpPost{planSearchParameters} \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plans-for-offline": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Plans  and plan detail(branch) based on the given criteria in the PlanSearchParameters",
        "description": "Sample request:\r\n            \r\n     HttpPost{planSearchParameters} \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plan-dates": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of DISTINCT Plans's date based on the given criteria in the PlanDateParameters",
        "description": "Sample request:\r\n            \r\n     HttpPost{PlanDateParameters} \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanDateParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanDateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanDateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanDateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plan-by-id/{planId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a Plan with the given planId",
        "description": "Sample request:\r\n            \r\n     HttpGet {planId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/save-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Saves a Plan.  This will create a new plan if the plan doesn't exist.  It will update a plan if it already exists.",
        "description": "Sample request:\r\n            \r\n    HttpPost {plan}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/complete-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Saves a Plan.  This will create a new plan if the plan doesn't exist.  It will update a plan if it already exists.",
        "description": "Sample request:\r\n            \r\n    HttpPost {plan}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Plan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/clone-plan/{planId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Clones a Plan with the given planId",
        "description": "Sample request:\r\n            \r\n     HttpGet {planId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-plan/{planId}": {
      "delete": {
        "tags": [
          "Distribution"
        ],
        "summary": "Deletes a Plan with the given planId",
        "description": "Sample request:\r\n            \r\n     HttpGet {planId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/add-stop-to-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Adds a Stop (Clinic) along a Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-stop-from-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Deletes a Stop (Clinic) from a Distribution Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {planStop}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-stops-by-plan-id/{planId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Stops in a Plan",
        "description": "Sample request:\r\n            \r\n     HttpGet {planId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-clinic-visits/{clinicId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets the list of visits to a clinic based on Plans that have this Branch (Clinic) assigned",
        "description": "Sample request:\r\n            \r\n     HttpGet {clinicId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "clinicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-clinic-training/{branchTrainingId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets the list of training history by branchTrainingId",
        "description": "Sample request:\r\n            \r\n     HttpGet {branchTrainingId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchTrainingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/save-clinic-training": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Saves the information of training done by branchId",
        "description": "Sample request:\r\n            \r\n     HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.ClinicTrainingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.ClinicTrainingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.ClinicTrainingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.ClinicTrainingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-maintainmodel-by-branch-id/{branchId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Get the maintainModel for branch using branchId",
        "description": "Sample request:\r\n            \r\n     HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-competition-by-branch-id/{branchId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Get the competition for branch using branchId",
        "description": "Sample request:\r\n            \r\n     HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-distribution-guidance/{clinicId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets the distribution guidance info for this Branch (Clinic)",
        "description": "Sample request:\r\n            \r\n     HttpGet {clinicId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "clinicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/update-distribution-guidance": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Saves Distribution Guidance info",
        "description": "Sample request:\r\n            \r\n    HttpPost {clinicId, distributionGuidance}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "clinicId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.DistributionGuidance"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.DistributionGuidance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.DistributionGuidance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.DistributionGuidance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/add-multiple-stop-to-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Adds a Stop (Clinic) along a Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-multiple-stop-from-plan": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Delete a Stop (Clinic) along a Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-route-stops-by-route-id/{routeId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Stops in a Route",
        "description": "Sample request:\r\n            \r\n     HttpGet {routeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/delete-multiple-stop-from-route": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Delete multiple Stops (Clinic) along a Plan",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plans-history": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-plans-history/{planId}": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/update_departuredate": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/update-plan-branch-driver-stop-number": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Update plan branches driver stop numbers if the driver would have used optimize stops functionality from mobile app.",
        "description": "Sample request:\r\n            \r\n    HttpPost {plan}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesUpdateDriverStopNumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesUpdateDriverStopNumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesUpdateDriverStopNumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.PlanBranchesUpdateDriverStopNumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/check-branch-assigned-to-route-or-not": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchCheck"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchCheck"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchCheck"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/get-all-route-branches": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets a list of Routes Branches using the given search criteria in the routeBranchesSearchParameters",
        "description": "Sample request:\r\n            \r\n     HttpPost {routeBranchesSearchParameters}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchesSearchParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchesSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchesSearchParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.RouteBranchesSearchParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/save-failed-api-synclog": {
      "post": {
        "tags": [
          "Distribution"
        ],
        "summary": "save failed api sync log",
        "description": "Sample request:\r\n            \r\n     HttpPost {FailedApiSyncLog}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distribution/getdriverlivelocation": {
      "get": {
        "tags": [
          "Distribution"
        ],
        "summary": "Gets live location of curaways driver",
        "description": "Sample request:\r\n            \r\n     HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/doctor/doctor-list": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "Get doctor list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Doctor list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "DoctorIdNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorIdNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NpiExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NpiValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmailExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmailValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SpecialtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SpecialtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExcludeFromEFaxExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExcludeFromEFaxValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PECOSNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PECOSNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxPhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxPhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LicenceNoExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LicenceNoValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PecosCertified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MarketingRepUserNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepUserNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AlsoKnownAsExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/{doctorId}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "Get doctor list by doctorId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {doctorId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Doctor info found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Doctor"
        ],
        "summary": "Delete doctor by doctorId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {doctorId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Doctor successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/get-doctors/{doctorIds}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "parameters": [
          {
            "name": "doctorIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/get-contact/{doctorId}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "Get doctor contact by doctorId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {doctorId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Doctor found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/save-general": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "summary": "save doctor general in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Doctor successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorGeneralInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorGeneralInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorGeneralInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorGeneralInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/doctor/save-contact": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "summary": "save doctor contact in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Doctor successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/doctor/delete-contact/{doctorId}/{contactPersonId}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "Delete doctor contact by doctorId and contactPersonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {doctorId}{contactPersonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Doctor successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contactPersonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/search-doctor": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "get doctor list by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Doctor found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/doctor/get-doctors-by-facilityId/{facilityId}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "summary": "Get Doctors by Facility Id.",
        "description": "Sample request:\r\n            \r\n    HttpGet {facilityId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Doctors Found Successfully by FacilityID.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/doctor-group/{doctorGroupId}": {
      "get": {
        "tags": [
          "DoctorGroup"
        ],
        "summary": "get DoctorGroup by DoctorGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {DoctorGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"DoctorGroup found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "DoctorGroup"
        ],
        "summary": "delete DoctorGroup by DoctorGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {DoctorGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"DoctorGroup successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "doctorGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/doctor-group": {
      "post": {
        "tags": [
          "DoctorGroup"
        ],
        "summary": "save DoctorGroup in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"DoctorGroup successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorGroupModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/document-type": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "summary": "get pickup reason from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "DocumentType"
        ],
        "summary": "save pickup reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DocumentTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DocumentTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DocumentTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DocumentTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/document-type/{documentTypeId}": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "summary": "delete pickup reason by documentTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {documentTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"DocumentType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "documentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newDocumentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/employee/employee-list": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "get employee list from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "EmployeeNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmployeeNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmployeeTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmployeeTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SpecialtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SpecialtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmailExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmailValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UsernameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UsernameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsUser",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ZenSync",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "get employee by employeeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {employeeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "delete employee by employeeId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {employeeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/save": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "save employee in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/employee/search-employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "search employee by key in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/check-email-existance/{personId}/{email}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "check employee email exist by personId and email in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet check-email-existance?emailAddress=abc@example.com\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Existance info found.\",\r\n        \"data\": {\r\n            \"isExists\": true\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/employee/check-username-existance/{personId}/{username}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "check employee username exist by personId and username in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet check-username-existance?username=abcxyz\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Existance info found.\",\r\n        \"data\": {\r\n            \"isExists\": true\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/employee/get-by-role/{roleCode}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "get employee by roleCode from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet  \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "roleCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/get-by-role-branchWise": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeBranchWiseModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeBranchWiseModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeBranchWiseModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeBranchWiseModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/find-by-name": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "searchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/list": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "selectedEmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/check-employee-assigned-to/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/get-by-role-name/{roleName}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "get employee by roleName from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet  \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/employee-type/GetEmployeeTypes/{employeeTypeId}": {
      "get": {
        "tags": [
          "EmployeeType"
        ],
        "summary": "get employeetype by employeeTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {employeeTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"EmployeeType found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "employeeTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/employee-type/Save": {
      "post": {
        "tags": [
          "EmployeeType"
        ],
        "summary": "save employeetype in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"EmployeeType successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/employee-type/{employeeTypeId}": {
      "delete": {
        "tags": [
          "EmployeeType"
        ],
        "summary": "delete employeetype by employeeTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {employeeTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"EmployeeType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "employeeTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/list": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/{eobFileId}": {
      "delete": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "delete ERA by eobFileId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "eobFileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/eobFile/list": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/adjustment/{eobClaimId}": {
      "get": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "eobClaimId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/denied/list": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.DeniedClaimsGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.DeniedClaimsGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.DeniedClaimsGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.DeniedClaimsGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/adjustment/save": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.SaveAdjustmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.SaveAdjustmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.SaveAdjustmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.SaveAdjustmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/adjustment/post": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.AdjustmentPostModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.AdjustmentPostModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.AdjustmentPostModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.AdjustmentPostModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/update-claim": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.ClaimUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.ClaimUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.ClaimUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.ClaimUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/deleteEobClaim/{eobFileId}/{eobClaimId}": {
      "delete": {
        "tags": [
          "EOBClaim"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "eobFileId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eobClaimId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/summary": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBClaimView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/insuranceupdate": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eob-claim/repostera": {
      "post": {
        "tags": [
          "EOBClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.EOBFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ERA/Parse835": {
      "post": {
        "tags": [
          "ERA"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ERA/saveEOBCLaimsAsync": {
      "post": {
        "tags": [
          "ERA"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ERA/AutoPostPayment": {
      "post": {
        "tags": [
          "ERA"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetailAutoPostPayment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetailAutoPostPayment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetailAutoPostPayment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERADetailAutoPostPayment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ERA/MarkAsDenied": {
      "post": {
        "tags": [
          "ERA"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.EobMarkAsDenialModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.EobMarkAsDenialModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.EobMarkAsDenialModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.EobMarkAsDenialModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ERA/update-era-status": {
      "post": {
        "tags": [
          "ERA"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERAStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERAStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERAStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.ERAStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/facility": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "get facilities from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Facility found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "FacilityIdNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityIdNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkPhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkPhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxPhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxPhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepUserNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepUserNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "safe facility in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Facility successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/facility/{facilityId}": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "get facilities by facilityId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {facilityId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Facility found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Facility"
        ],
        "summary": "delete facility by facilityId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {facilityId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Facility successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/facility/search-by-key": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "get facility by key in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/facility-group/{facilityGroupId}": {
      "get": {
        "tags": [
          "FacilityGroup"
        ],
        "summary": "get facilitygroup by facilityGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {facilityGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"FacilityGroup found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "facilityGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "FacilityGroup"
        ],
        "summary": "delete facilitygroup by facilityGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {facilityGroupId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"FacilityGroup successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "facilityGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/facility-group": {
      "post": {
        "tags": [
          "FacilityGroup"
        ],
        "summary": "save facilitygroup in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"FacilityGroup successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityGroupModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityGroupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityGroupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FacilityGroupModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax/{branchId}": {
      "get": {
        "tags": [
          "Fax"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax": {
      "get": {
        "tags": [
          "Fax"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PageNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateToShowExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateToShowValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FFIFaxExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FFIFaxValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FTIFaxExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FTIFaxValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FaxStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax/getById/{outGoingFaxId}": {
      "get": {
        "tags": [
          "Fax"
        ],
        "summary": "Get branch detail by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "outGoingFaxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax/preview-send-fax": {
      "post": {
        "tags": [
          "Fax"
        ],
        "summary": "Get preview fax details by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \" records found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax/send-fax": {
      "post": {
        "tags": [
          "Fax"
        ],
        "summary": "Get fax details by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \" records found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax/get-fax-status/{outGoingFaxId}/{mrnNumber}/{branchId}": {
      "get": {
        "tags": [
          "Fax"
        ],
        "summary": "Get fax status details by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \" records found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "outGoingFaxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "mrnNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax/sNotifyURL": {
      "post": {
        "tags": [
          "Fax"
        ],
        "summary": "Get fax status details by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \" records found\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "FaxDetailsID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SentStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateQueued",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateSent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ToFaxNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Pages",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Duration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RemoteID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ErrorCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax/get-fax-forward-detail/{outGoingFaxId}/{mrnNumber}/{branchId}/{fileId}": {
      "get": {
        "tags": [
          "Fax"
        ],
        "parameters": [
          {
            "name": "outGoingFaxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "mrnNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax/forward-fax": {
      "post": {
        "tags": [
          "Fax"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxCoverModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fax-ai": {
      "get": {
        "tags": [
          "FaxAI"
        ],
        "parameters": [
          {
            "name": "fileUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax-ai/add-update-mapping": {
      "post": {
        "tags": [
          "FaxAI"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.InsuranceMapping"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.InsuranceMapping"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.InsuranceMapping"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.InsuranceMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fax-ai/get-mapping": {
      "post": {
        "tags": [
          "FaxAI"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.GetMappingLabelModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.GetMappingLabelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.GetMappingLabelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.GetMappingLabelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fedex/verify-address": {
      "post": {
        "tags": [
          "Fedex"
        ],
        "summary": "This will validate that address with FedEx they are providing service at that address or not",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AddressVerifyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AddressVerifyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AddressVerifyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AddressVerifyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fedex/get-rates": {
      "post": {
        "tags": [
          "Fedex"
        ],
        "summary": "This will return quotes according to request",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexRateOptionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexRateOptionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexRateOptionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexRateOptionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fedex/create-shipments": {
      "post": {
        "tags": [
          "Fedex"
        ],
        "summary": "This will create shipment on fedex and update details in DB",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexShipmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexShipmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexShipmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.FedexShipmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/fedex/cancel-shipment": {
      "post": {
        "tags": [
          "Fedex"
        ],
        "summary": "This will cancel shipment which is created",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.CancelShipmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.CancelShipmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.CancelShipmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.CancelShipmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass/{feeclassId}": {
      "get": {
        "tags": [
          "FeeClass"
        ],
        "summary": "get feeclass by feeclassId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeclassId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"FeeClass found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeclassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FeeClass"
        ],
        "summary": "delete feeclass by feeclassId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {feeclassId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"FeeClass successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeclassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass/save": {
      "post": {
        "tags": [
          "FeeClass"
        ],
        "summary": "save feeclass in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"FeeClass successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass/copy": {
      "post": {
        "tags": [
          "FeeClass"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.CopyFeeClassInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.CopyFeeClassInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.CopyFeeClassInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.CopyFeeClassInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass/bulk-update": {
      "post": {
        "tags": [
          "FeeClass"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.PriceTableBulkUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.PriceTableBulkUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.PriceTableBulkUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.PriceTableBulkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass/ProductByProcedureCode": {
      "get": {
        "tags": [
          "FeeClass"
        ],
        "parameters": [
          {
            "name": "ProcedureCodeDMECategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PriceTableList",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mod1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Mod2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Mod3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Mod4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RentalMod1",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RentalMod2",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RentalMod3",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RentalMod4",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RentAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "PurchaseAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "RentAllowAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "PurchaseAllowAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FromPeriod",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ToPeriod",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass-schedule/get-feeclass-schedule-history/{feeClassId}": {
      "get": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "Get FeeClass Schedule History by feeclassId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeClassId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeClassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass-schedule/{feeClassScheduleId}": {
      "get": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "Get FeeClass Schedule by feeClassScheduleId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeClassScheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"FeeClass found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeClassScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "delete FeeClass Schedule by feeClassScheduleId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {feeClassScheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"FeeClass successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeClassScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass-schedule/get-expired-fee-class-schedules": {
      "get": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "Get expired FeeClass Schedules",
        "description": "Sample request:\r\n            \r\n    HttpGet {}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Expired FeeClass Schedule Info found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass-schedule/save-schedule": {
      "post": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "save FeeClass Schedule in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"FeeClass successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/feeclass-schedule/get-fee-price-history/{feeClassSchedule_FeeId}": {
      "get": {
        "tags": [
          "FeeClassSchedule"
        ],
        "summary": "get Feeprice history by feeClassSchedule_FeeId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeClassSchedule_FeeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeClassSchedule_FeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/fee-schedule/{feeScheduleId}": {
      "get": {
        "tags": [
          "FeeSchedule"
        ],
        "summary": "Get procedure pricings by feeScheduleId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeScheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"FeeClass found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FeeSchedule"
        ],
        "summary": "delete Fee Schedule by feeScheduleId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {feeScheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Record successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricetable/fee-schedule/save-procedure": {
      "post": {
        "tags": [
          "FeeSchedule"
        ],
        "summary": "save Fee Schedule procedure in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleProcedureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleProcedureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleProcedureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleProcedureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pricetable/fee-schedule/save-pricing": {
      "post": {
        "tags": [
          "FeeSchedule"
        ],
        "summary": "save Fee Schedule in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeScheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup": {
      "get": {
        "tags": [
          "FollowUp"
        ],
        "parameters": [
          {
            "name": "followUpId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.FollowUpModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup/get-for-invoice": {
      "get": {
        "tags": [
          "FollowUp"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isComplete",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup/count": {
      "get": {
        "tags": [
          "FollowUp"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup/add-for-invoices": {
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.AddFollowUpsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.AddFollowUpsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.AddFollowUpsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.AddFollowUpsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup/{followUpId}": {
      "delete": {
        "tags": [
          "FollowUp"
        ],
        "parameters": [
          {
            "name": "followUpId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/followup/status-update-invoice-followups": {
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/followup/delete-multiple-invoice-followup": {
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/followup/get-employee-list-for-followup": {
      "get": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/followup/update-assignto-for-followups": {
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/followup/update-due-date-followups": {
      "post": {
        "tags": [
          "FollowUp"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/followup-reason": {
      "get": {
        "tags": [
          "FollowUpReason"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "FollowUpReason"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "FollowUpReason"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FollowUpReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/followup-reason/list": {
      "get": {
        "tags": [
          "FollowUpReason"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/followup-reason/{id}": {
      "delete": {
        "tags": [
          "FollowUpReason"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/followup-task/list": {
      "get": {
        "tags": [
          "FollowUpTask"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/functional-ability": {
      "get": {
        "tags": [
          "FunctionalAbility"
        ],
        "summary": "Get functional abilities from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "FunctionalAbility"
        ],
        "summary": "Save functional ability in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FunctionalAbilityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FunctionalAbilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FunctionalAbilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FunctionalAbilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/functional-ability/{functionalAbilityId}": {
      "delete": {
        "tags": [
          "FunctionalAbility"
        ],
        "summary": "Delete functional ability by functionalAbilityId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {functionalAbilityId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"FunctionalAbility successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "functionalAbilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/generic/get-key-value-list": {
      "post": {
        "tags": [
          "Generic"
        ],
        "summary": "Get key-value list of given masterdata key.",
        "description": "Sample request:\r\n            \r\n    GET /generic/getdropdownlist/country\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"countrylist\": [\r\n          {\r\n            \"id\": 16,\r\n            \"name\": \"Full Time\"\r\n          },\r\n          {\r\n            \"id\": 17,\r\n            \"name\": \"Part Time\"\r\n          },\r\n          {\r\n            \"id\": 18,\r\n            \"name\": \"Unemployed\"\r\n          },\r\n          {\r\n            \"id\": 19,\r\n            \"name\": \"Retired\"\r\n          },\r\n          {\r\n            \"id\": 20,\r\n            \"name\": \"UnKnown\"\r\n          }\r\n        ]\r\n      }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-resource-ref": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get all the in use references of specified resource.",
        "description": "Sample request:\r\n            \r\n    GET /generic/getdropdownlist/country\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"countrylist\": [\r\n          {\r\n            \"id\": 16,\r\n            \"name\": \"Full Time\"\r\n          },\r\n          {\r\n            \"id\": 17,\r\n            \"name\": \"Part Time\"\r\n          },\r\n          {\r\n            \"id\": 18,\r\n            \"name\": \"Unemployed\"\r\n          },\r\n          {\r\n            \"id\": 19,\r\n            \"name\": \"Retired\"\r\n          },\r\n          {\r\n            \"id\": 20,\r\n            \"name\": \"UnKnown\"\r\n          }\r\n        ]\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-default-settings": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get all the default settings for specified page.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "parameters": [
          {
            "name": "groupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-shortcut-keys": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get all the shortcut keys for specified group.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "parameters": [
          {
            "name": "groupName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-version": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get current version number.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/track-settings/save": {
      "post": {
        "tags": [
          "Generic"
        ],
        "summary": "Get current version number.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.TrackSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.TrackSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.TrackSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.TrackSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get/track-settings": {
      "get": {
        "tags": [
          "Generic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/getS3BucketUsage": {
      "post": {
        "tags": [
          "Generic"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/generic/get-client-setting/{clientkey}": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get all the default settings for specified page.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "parameters": [
          {
            "name": "clientkey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-partner-setting/{partnerName}": {
      "get": {
        "tags": [
          "Generic"
        ],
        "summary": "Get all the default settings for specified page.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "parameters": [
          {
            "name": "partnerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-userwise-settings": {
      "post": {
        "tags": [
          "Generic"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/set-userwise-settings": {
      "post": {
        "tags": [
          "Generic"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-settings": {
      "post": {
        "tags": [
          "Generic"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Setting"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Setting"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Setting"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Setting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/get-userwise-filter-settings": {
      "post": {
        "tags": [
          "Generic"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generic/set-userwise-filter-settings": {
      "post": {
        "tags": [
          "Generic"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UserFilterSettingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/hold-reason": {
      "get": {
        "tags": [
          "HoldReason"
        ],
        "summary": "Get hold reasons from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "HoldReason"
        ],
        "summary": "Save hold reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.HoldReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.HoldReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.HoldReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.HoldReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/hold-reason/{holdReasonId}": {
      "delete": {
        "tags": [
          "HoldReason"
        ],
        "summary": "Delete hold reason by holdReasonid from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {holdReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"HoldReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "holdReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Home/index": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/insurance-list": {
      "get": {
        "tags": [
          "Insurance"
        ],
        "summary": "get insurance list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "InsuranceIdNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceIdNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTableExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTableValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SubmissionMethodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionMethodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayPercentExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayPercentValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayerCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayerCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayorIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayorIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFilingIndicatorCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFilingIndicatorCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceTypeCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceTypeCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShowParentInsurance",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/{insuranceId}": {
      "delete": {
        "tags": [
          "Insurance"
        ],
        "summary": "delete insurance list by insuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {insuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Insurance successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/search-by-key": {
      "get": {
        "tags": [
          "Insurance"
        ],
        "summary": "get insurance by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HideParentInsurance",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/eligibility-payer/search-by-key": {
      "get": {
        "tags": [
          "Insurance"
        ],
        "summary": "get Eligibility Payer by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/commercial-payer/search-by-key": {
      "get": {
        "tags": [
          "Insurance"
        ],
        "summary": "get commercial Payer by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isJopariPayer",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/master-insurance-list": {
      "get": {
        "tags": [
          "Insurance"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "InsuranceIdNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceIdNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTableExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTableValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SubmissionMethodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmissionMethodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayPercentExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayPercentValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFormValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayerCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayerCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayorIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EligibilityPayorIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFilingIndicatorCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimFilingIndicatorCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceTypeCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceTypeCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShowParentInsurance",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/save-master-insurance": {
      "post": {
        "tags": [
          "Insurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/branch/get-branch-list/{insuranceId}": {
      "get": {
        "tags": [
          "InsuranceBranch"
        ],
        "summary": "get insurance branch list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/branch/{overriddenBranchId}": {
      "get": {
        "tags": [
          "InsuranceBranch"
        ],
        "summary": "get insurance branch by overriddenBranchId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {overriddenBranchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "overriddenBranchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/branch/save": {
      "post": {
        "tags": [
          "InsuranceBranch"
        ],
        "summary": "save insurance branch in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/claim-setting/save": {
      "post": {
        "tags": [
          "InsuranceClaimSetting"
        ],
        "summary": "save insurance claim setting in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/claim-setting/{insuranceId}": {
      "get": {
        "tags": [
          "InsuranceClaimSetting"
        ],
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/insurance-company": {
      "get": {
        "tags": [
          "InsuranceCompany"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "InsuranceCompany"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InsuranceCompanyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InsuranceCompanyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InsuranceCompanyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InsuranceCompanyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/insurance-company/{productCategoryId}": {
      "delete": {
        "tags": [
          "InsuranceCompany"
        ],
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/general/{insuranceId}": {
      "get": {
        "tags": [
          "InsuranceGeneral"
        ],
        "summary": "get insurance general by insuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {insuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/general/save": {
      "post": {
        "tags": [
          "InsuranceGeneral"
        ],
        "summary": "save insurance general in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/general/get-contact/{insuranceId}": {
      "get": {
        "tags": [
          "InsuranceGeneral"
        ],
        "summary": "Get insurance contact by insuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {insuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Insurance Contact found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/general/save-contact": {
      "post": {
        "tags": [
          "InsuranceGeneral"
        ],
        "summary": "save insurance contact in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Insurance successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/general/delete-contact/{insuranceId}/{contactPersonId}": {
      "get": {
        "tags": [
          "InsuranceGeneral"
        ],
        "summary": "Delete insurance contact by insuranceId and contactPersonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {insuranceId}{contactPersonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Insurance successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contactPersonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/paper-claim/Generate1500": {
      "post": {
        "tags": [
          "InsurancePaperClaim"
        ],
        "summary": "Will generate 1500 claim form and return back s3 presigned URL in response.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/paper-claim/GenerateClaim": {
      "post": {
        "tags": [
          "InsurancePaperClaim"
        ],
        "summary": "Will generate paper claim form and return back s3 presigned URL in response.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/paper-claim/CheckPaperClaimReportExist": {
      "get": {
        "tags": [
          "InsurancePaperClaim"
        ],
        "summary": "check paper claim report exist by clientName,Salesorderid and invoiceId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {ClientName}{SalesOrderId}{InvoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ClientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/paper-claim/GetPaperClaimReport": {
      "get": {
        "tags": [
          "InsurancePaperClaim"
        ],
        "summary": "get paper claim report by clientName,Salesorderid and invoiceId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {ClientName}{SalesOrderId}{InvoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ClientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paddingLeft",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "paddingRight",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "paddingTop",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "paddingBottom",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/span-date/{insuranceId}": {
      "get": {
        "tags": [
          "InsuranceSpanDate"
        ],
        "summary": "get insurance span date by insuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {insuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/insurance/span-date/save-insurance-procedure": {
      "post": {
        "tags": [
          "InsuranceSpanDate"
        ],
        "summary": "save insurance procedure in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceProcedureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceProcedureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceProcedureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceProcedureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/span-date/save-insurance-claim-date": {
      "post": {
        "tags": [
          "InsuranceSpanDate"
        ],
        "summary": "save insurance claim date in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimDateInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimDateInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimDateInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimDateInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/insurance/span-date/{insuranceFeeId}": {
      "delete": {
        "tags": [
          "InsuranceSpanDate"
        ],
        "summary": "delete insurance procedure by insuranceFeeId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {insuranceFeeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Branch successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "insuranceFeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/work-list": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "get fax scan worklist from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/upload-fax": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "upload fax scan in a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "IsLeadtoolEnable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsPatientOCREnable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PatientOCRTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/get-fax-information/{faxScanId}": {
      "get": {
        "tags": [
          "Intake"
        ],
        "summary": "get faxscan info by faxScanId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {faxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/get-s3url/{faxScanId}": {
      "get": {
        "tags": [
          "Intake"
        ],
        "summary": "get faxscan s3 url by faxScanId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {faxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/save-fax-info": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "save faxsacn info a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxExtractedInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxExtractedInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxExtractedInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxExtractedInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/save-fax-scan": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "save faxscan a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/bulk-operation": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "assign fax scan list in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/get-faxScanIdList": {
      "get": {
        "tags": [
          "Intake"
        ],
        "summary": "get faxscan Ids from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isHavingAdminRole",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/mark-as-completed/{faxScanId}": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "update faxscan as completed in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost {faxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/{faxScanId}": {
      "delete": {
        "tags": [
          "Intake"
        ],
        "summary": "delete faxscan by faxScanId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {faxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/intake-branch-change": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBranchChangeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBranchChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBranchChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBranchChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/get-patient-ocr-information/{faxScanId}": {
      "get": {
        "tags": [
          "Intake"
        ],
        "summary": "get-patient-ocr-information by faxScanId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {faxScanId}\r\n    \r\nSample response:\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/delete-patient-ocr/{faxScanId}": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "delete-patient-ocr by faxScanId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {faxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/save-fax-info-by-patient-ocr": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "save-fax-info-by-patient-ocr a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.OcrFaxSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.OcrFaxSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.OcrFaxSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.OcrFaxSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/update-intake-status": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeStatusUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeStatusUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeStatusUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/pre-intake-list": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/delete-pre-fax-scan/{preFaxScanId}": {
      "post": {
        "tags": [
          "Intake"
        ],
        "parameters": [
          {
            "name": "preFaxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/save-pre-fax-scan": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "save PreFaxScan a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/get-pre-fax-information/{prefaxScanId}": {
      "get": {
        "tags": [
          "Intake"
        ],
        "summary": "get pre-fax info by preFaxScanId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {prefaxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "prefaxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/get-prefaxScanIdList": {
      "get": {
        "tags": [
          "Intake"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "currentPreFaxScanId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/pre-faxscan-mark-as-completed/{preFaxScanId}": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "update pre-faxscan as completed in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost {preFaxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "preFaxScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/save-fax-scan-product": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "add new product to fax scan.",
        "description": "Sample request:\r\n            \r\n    HttpPost {preFaxScanId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxScanProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxScanProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxScanProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxScanProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/intake/delete-fax-scan-product/{faxScanProductId}": {
      "delete": {
        "tags": [
          "Intake"
        ],
        "summary": "Delete FaxScanProduct by faxScanProductId from the system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete delete-fax-scan-product/{faxScanProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Fax Scan Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "faxScanProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/pre-fax-scan-bulk-operation": {
      "post": {
        "tags": [
          "Intake"
        ],
        "summary": "assign fax scan list in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeBulkOperationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeBulkOperationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeBulkOperationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeBulkOperationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/mark-pre-fax-scan-as-incomplete": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeStatusUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeStatusUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeStatusUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/fax-scan-csr-assign-bulk-operation": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationAssignCSRModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationAssignCSRModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationAssignCSRModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeBulkOperationAssignCSRModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/update-fax-wrangler-csr-for-intake": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeFaxWranglerCSRAssignModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeFaxWranglerCSRAssignModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeFaxWranglerCSRAssignModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeFaxWranglerCSRAssignModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/update-intake-incomplete-status-reason": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeIncompleteReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeIncompleteReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeIncompleteReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeIncompleteReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/intake/save-ocr-pre-intake-info": {
      "post": {
        "tags": [
          "Intake"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeOCRPreInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeOCRPreInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeOCRPreInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeOCRPreInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/intake-category": {
      "get": {
        "tags": [
          "IntakeCategory"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "IntakeCategory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.IntakeCategoryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.IntakeCategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.IntakeCategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.IntakeCategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/intake-category/{intakeCategoryId}": {
      "delete": {
        "tags": [
          "IntakeCategory"
        ],
        "parameters": [
          {
            "name": "intakeCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/intake-category/get-intake-category-byId/{intakeCategoryId}": {
      "get": {
        "tags": [
          "IntakeCategory"
        ],
        "parameters": [
          {
            "name": "intakeCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/save-receive-inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "save par task in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/update-receive-inventory-transaction-branchId": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UpdateyReceiveInventoryTransactionBranchIdModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UpdateyReceiveInventoryTransactionBranchIdModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UpdateyReceiveInventoryTransactionBranchIdModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UpdateyReceiveInventoryTransactionBranchIdModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/save-receive-inventory-with-serialnumber": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "save-receive-inventory-with-serialnumber.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryReceiveWithSerialnumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryReceiveWithSerialnumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryReceiveWithSerialnumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryReceiveWithSerialnumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/save-transfer-inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "get Inventory Transaction product by productItemId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {productItemId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/save-adjustment-inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "get Inventory Transaction product by productItemId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {productItemId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/search-product-inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ExcludeSpecificProductType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasProcedureSchedule",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsResupply",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/all-location-product-get": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductLocationsGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductLocationsGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductLocationsGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductLocationsGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/get-product-inventory/{productItemId}/{branchId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-inventory-serialnumber/{inventoryTransactionId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "inventoryTransactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/search-product-inventory-by-serialnumber": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssetNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssetNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberFilterExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberFilterValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsOnHandOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsOnHandValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsIntakeCommitted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActiveValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsResupply",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-inventory-serialnumber-by-multiple-inventory-transactionId": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransaction"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransaction"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransaction"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransaction"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-clinic-inventory-allocation/{branchId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Gets overall on hand, rent , available qunaty by clinic",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-clinic-product-list/{branchId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Returns a list of products at the clinic",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-inventory-transaction-history/{branchId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "This will get all in transactions  for all products by branchId",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/get-inventory-under-maintenance/{inventoryTransactionId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "parameters": [
          {
            "name": "inventoryTransactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/inventory-transactions/{inventoryTransactionId}": {
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "delete inventory transaction by inventoryTransactionId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {inventoryTransactionId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Inventory Transaction successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "inventoryTransactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/search-product-inventory-without-specific-product-type": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "get all product lists from a system without serialized product or specific product type.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Product list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ExcludeSpecificProductType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasProcedureSchedule",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsResupply",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory/inventory-transactions-details/{inventroyTransactionId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "parameters": [
          {
            "name": "inventroyTransactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/inventory-adjustment-reasons": {
      "get": {
        "tags": [
          "InventoryAdjustmentReason"
        ],
        "summary": "get Inventory Adjustment reasons from the system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "InventoryAdjustmentReason"
        ],
        "summary": "Save Inventory Adjustment reasons in the system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryAdjustmentReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryAdjustmentReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryAdjustmentReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryAdjustmentReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/inventory-adjustment-reasons/{InventoryAdjustmentReasonId}": {
      "delete": {
        "tags": [
          "InventoryAdjustmentReason"
        ],
        "summary": "delete Inventory Adjustment reasons by InventoryAdjustmentReasonId from the system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {InventoryAdjustmentReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"InventoryAdjustmentReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "InventoryAdjustmentReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/search-product": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchBySerialNumberOrAssestNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UPC",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowBelowReorderOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TypeFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/Get-Inventory-BelowReorder": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "get all product under reorder",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Inventory list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/search-mproduct": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "get all product lists from a system with serial number.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Product list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchBySerialNumberOrAssestNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UPC",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowBelowReorderOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TypeFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/save-receive-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "save-receive-inventory in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/save-adjustment-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "get Inventory adjustment product by productItemId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {productItemId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory-management/save-transfer-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "get Inventory Transaction product by productItemId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {productItemId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventoryTransferModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/search-under-maintenance-product": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "parameters": [
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchBySerialNumberOrAssestNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UPC",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowBelowReorderOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TypeFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/under-maintenance-product": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "parameters": [
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchBySerialNumberOrAssestNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UPC",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowBelowReorderOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TypeFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/update-under-maintenance-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UnderMaintenanceInventory"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UnderMaintenanceInventory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UnderMaintenanceInventory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.UnderMaintenanceInventory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/search-all-branch-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory-management/update-replenishment-setting": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "update replenishment setting by branch.",
        "description": "Sample request:\r\n            \r\n    HttpPost {}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.ReplenishmentSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.ReplenishmentSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.ReplenishmentSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.ReplenishmentSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/get-branch-inventory": {
      "get": {
        "tags": [
          "InventoryManagement"
        ],
        "parameters": [
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchBySerialNumberOrAssestNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReplenishmentQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReorderPointValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SupplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedQtyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceStatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustmentReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UPC",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowBelowReorderOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TypeFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RouteNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AdjustedStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/inventory-management/search-all-route-inventory": {
      "post": {
        "tags": [
          "InventoryManagement"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/inventory-transfer-reasons": {
      "get": {
        "tags": [
          "InventoryTransferReason"
        ],
        "summary": "get Inventory Transfer reasons from the system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "InventoryTransferReason"
        ],
        "summary": "Save Inventory Transfer reasons in the system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryTransferReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryTransferReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryTransferReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.InventoryTransferReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/inventory-transfer-reasons/{InventoryTransferReasonId}": {
      "delete": {
        "tags": [
          "InventoryTransferReason"
        ],
        "summary": "delete Inventory Transfer reasons by InventoryTransferReasonId from the system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {InventoryTransferReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"InventoryTransferReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "InventoryTransferReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/invoice/invoice-list": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorLevelExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorLevelValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfServiceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfServiceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChargesExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChargesValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContractAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContractAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BalanceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BalanceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isApprovedValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isBatchCreatedValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClaimPriorAuthorizationNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClaimPriorAuthorizationNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InvoiceGroupKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceSplitType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HideZeroAmountClaim",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasMissingClaim",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsBox11PayerNameReplaced",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InvoiceTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HideBatchedInvoice",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MktRepExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MktRepValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoidSalesOrderNotAllow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/get-batch-invoices/{batchId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "GetInvoices",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/get-invoice-accountgroup-count/{batchId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "GetInvoices",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/Get837pHealthCareClaimByBatch": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get837pHealthCareClaimByBatch",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "batchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/create-invoice-from-sales-order": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Generate invoice from the sales order",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/create-batch": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Generate invoice from the sales order",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceBatchCreateViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceBatchCreateViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceBatchCreateViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceBatchCreateViewModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/claimFormPrint": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintClaimFormModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintClaimFormModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintClaimFormModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintClaimFormModel"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/create-manual-invoice-from-sales-order": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/create-missing-claims": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ResubmitClaimModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ResubmitClaimModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ResubmitClaimModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ResubmitClaimModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/remove-batch/{invoiceId}": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "parameters": [
          {
            "name": "InvoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/printPatientInvoiceSummaryReport": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintPatientInvoiceSummaryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintPatientInvoiceSummaryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintPatientInvoiceSummaryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PrintPatientInvoiceSummaryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/invoice/update-claim-payerSubmissionType": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ClaimPayerSubmissionType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ClaimPayerSubmissionType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ClaimPayerSubmissionType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.ClaimPayerSubmissionType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/eclaim-835/{invoiceId}": {
      "get": {
        "tags": [
          "InvoiceEclaim"
        ],
        "summary": "Get 835 data by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/eclaim-999/{invoiceId}": {
      "get": {
        "tags": [
          "InvoiceEclaim"
        ],
        "summary": "Get 999 data by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/eclaim-277/{invoiceId}": {
      "get": {
        "tags": [
          "InvoiceEclaim"
        ],
        "summary": "Get 277 data by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/general/{invoiceId}": {
      "get": {
        "tags": [
          "InvoiceGeneral"
        ],
        "summary": "Get invoice by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/general/save": {
      "post": {
        "tags": [
          "InvoiceGeneral"
        ],
        "summary": "save Invoice general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/invoice/product/{invoiceId}": {
      "get": {
        "tags": [
          "InvoiceProduct"
        ],
        "summary": "Get product by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoice/product/update-tpa": {
      "post": {
        "tags": [
          "InvoiceProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceLineItemTPA"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceLineItemTPA"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceLineItemTPA"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.InvoiceLineItemTPA"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/lot-number": {
      "get": {
        "tags": [
          "LotNumber"
        ],
        "summary": "get lot number by branchId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Inventory Information  found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "LotNumber"
        ],
        "summary": "Update LotInformationModel in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"updated\",\r\n        \"message\": \"Inventory info successfully updated\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.UpdateLotInformationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.UpdateLotInformationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.UpdateLotInformationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.UpdateLotInformationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/maintainModal": {
      "get": {
        "tags": [
          "MaintainModal"
        ],
        "summary": "Get maintain modal from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "MaintainModal"
        ],
        "summary": "Save maintain modal in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MaintainModal"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MaintainModal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MaintainModal"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MaintainModal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/maintainModal/{maintainModalId}": {
      "delete": {
        "tags": [
          "MaintainModal"
        ],
        "summary": "Delete maintain modal by maintainModalId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {maintainModalId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Maintain Modal successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "maintainModalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/manufacturer": {
      "get": {
        "tags": [
          "Manufacture"
        ],
        "summary": "get manufacture list from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Manufacture found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Manufacture"
        ],
        "summary": "save manufacture in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Manufacture successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ManufactureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ManufactureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ManufactureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ManufactureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/manufacturer/{manufacturerId}": {
      "get": {
        "tags": [
          "Manufacture"
        ],
        "summary": "get manufacture by manufacturerId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {manufacturerId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Manufacture found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Manufacture"
        ],
        "summary": "delete manufacture by manufacturerId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {manufacturerId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Manufacture successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/mass-payment/get-invoice": {
      "get": {
        "tags": [
          "MassPayment"
        ],
        "summary": "get Payment posting invoces",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "Patient",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Insurance",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceStatusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BalanceFrom",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BalanceTo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OpenedDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OpenedDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateOfServiceFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateOfServiceTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IncludeNegativeBalanceInvoices",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mass-payment/save": {
      "post": {
        "tags": [
          "MassPayment"
        ],
        "summary": "save Payment detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MassPaymentDetailViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MassPaymentDetailViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MassPaymentDetailViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MassPaymentDetailViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/list": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "get message list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filterUnread",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/read-message": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "get message list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "messageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isAll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/{messageId}/{isAll}": {
      "delete": {
        "tags": [
          "Message"
        ],
        "summary": "delete message.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isAll",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/send-message": {
      "post": {
        "tags": [
          "Message"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Notification_message.Model.MessageModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Notification_message.Model.MessageModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Notification_message.Model.MessageModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Notification_message.Model.MessageModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/search/{searchKey}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "get member by key.",
        "description": "Sample request:\r\n            \r\n    HttpGet {routineId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "searchKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/my-profile": {
      "get": {
        "tags": [
          "MyProfile"
        ],
        "summary": "get profile info.",
        "description": "Sample request:\r\n            \r\n    HttpGet api/v1/myprofile/get-profile-info\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Profile Info found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/my-profile/save-profile": {
      "put": {
        "tags": [
          "MyProfile"
        ],
        "summary": "save profile info in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPut api/v1/myprofile/saveprofile\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Profile Successfully Updated.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.SaveProfileReq"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.SaveProfileReq"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.SaveProfileReq"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.SaveProfileReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/note-reason": {
      "get": {
        "tags": [
          "NoteReason"
        ],
        "summary": "get note reasons from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"NoteReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "NoteReason"
        ],
        "summary": "save note reasons in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"NoteReason successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.NoteReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.NoteReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.NoteReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.NoteReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/note-reason/{noteReasonId}": {
      "get": {
        "tags": [
          "NoteReason"
        ],
        "summary": "get note reasons by noteReasonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost {noteReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"NoteReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "noteReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "NoteReason"
        ],
        "summary": "dlete note reasons by noteReasonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {noteReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"NoteReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "noteReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/notification/list": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "get notification list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filterUnread",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notification/read-notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "get notification list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "notificationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isAll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notification/{notificationId}/{isAll}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "delete notification.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isAll",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notification/schedule-notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "get member by key.",
        "description": "Sample request:\r\n            \r\n    HttpGet {}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/npi/{npi}": {
      "get": {
        "tags": [
          "Npi"
        ],
        "summary": "get NPI by npi from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {npi}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"NoteReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "npi",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/npi/get-pecos/{npi}": {
      "get": {
        "tags": [
          "Npi"
        ],
        "summary": "get pecos by npi from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {get-pecos/{npi}}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"NoteReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "npi",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/npi": {
      "get": {
        "tags": [
          "Npi"
        ],
        "summary": "To find provider info by First name and last name.",
        "description": "Sample request:\r\n            \r\n    HttpGet {firstname}{lastname}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Provider Info Found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "firstname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/npi/search-by-providerName": {
      "get": {
        "tags": [
          "Npi"
        ],
        "summary": "To find doctor and facilty combined records with providerName. This is useful when you don't know that you are looking for what, doctor or facility?",
        "description": "Sample request:\r\n            \r\n    HttpGet {providerName}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Doctor found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "providerName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/onboarding/get-task": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/onboarding/update-task-status": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.TaskModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.TaskModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.TaskModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.TaskModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/onboarding/get-business-questionnaire": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/onboarding/save-business-questionnaire": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.BusinessQuestionnaireModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.BusinessQuestionnaireModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.BusinessQuestionnaireModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Onboarding.Models.BusinessQuestionnaireModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR": {
      "get": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "get PAR list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PARIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderDetailId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ParExpiryStatusFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR/general/{parId}": {
      "get": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "get PAR general by parId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {parId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR/general/save": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/PAR/{parId}": {
      "delete": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "delete PAR by parId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR/reset/{parId}": {
      "get": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "delete PAR by parId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR/logpar": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/PAR/update-renewal": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/PAR/PARTicket": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PrintPARModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PrintPARModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PrintPARModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PrintPARModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/PAR/dashboard-data": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "get dashboard Data from delivery.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PAR/dashboard-data/data-grid": {
      "post": {
        "tags": [
          "PARGeneral"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/products/get-products/{parId}": {
      "get": {
        "tags": [
          "PARProduct"
        ],
        "summary": "get par product by parId.",
        "description": "Sample request:\r\n            \r\n    HttpGet get-products/{parId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/products/{parProductId}": {
      "get": {
        "tags": [
          "PARProduct"
        ],
        "summary": "get par products by parId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {parId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PARProduct"
        ],
        "summary": "delete PAR Product by parProductId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {parProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PAR Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/par/products/save": {
      "post": {
        "tags": [
          "PARProduct"
        ],
        "summary": "save PAR product in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARProductsInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARProductsInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARProductsInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARProductsInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/par/products/get-proc-code/{productItemId}": {
      "get": {
        "tags": [
          "PARProduct"
        ],
        "summary": "get par products by parId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {parId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/products/get-salesOrder-par-product": {
      "post": {
        "tags": [
          "PARProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.SalesOrderPARProductGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.SalesOrderPARProductGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.SalesOrderPARProductGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.SalesOrderPARProductGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/task/GetPARTasks/{parId}": {
      "get": {
        "tags": [
          "PARTask"
        ],
        "summary": "get par tasks by parId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {parId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/task/GetPARTaskById/{parTaskId}": {
      "get": {
        "tags": [
          "PARTask"
        ],
        "summary": "get par tasks by parTaskId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {parTaskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/task/save-task": {
      "post": {
        "tags": [
          "PARTask"
        ],
        "summary": "save par task in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/par/task/save-comment": {
      "post": {
        "tags": [
          "PARTask"
        ],
        "summary": "save task comment in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskCommentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskCommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskCommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARTaskCommentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/par/task/delete-task/{parTaskId}": {
      "delete": {
        "tags": [
          "PARTask"
        ],
        "summary": "delete task by partaskId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {partaskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/par/task/delete-comment/{parTaskCommentId}": {
      "delete": {
        "tags": [
          "PARTask"
        ],
        "summary": "delete task comment by parTaskCommentId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {parTaskCommentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "parTaskCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/get-dmeConfig-by-clientId/{clientId}": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/save-dme-client-config": {
      "post": {
        "tags": [
          "PartnerSetting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DmeConfigSetting"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DmeConfigSetting"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DmeConfigSetting"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DmeConfigSetting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/get-all-partner-client-setting-by-clientId/{clientId}": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/save-partner-client-setting": {
      "post": {
        "tags": [
          "PartnerSetting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerClientSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerClientSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerClientSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerClientSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/get-partner-settings": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/messages": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "parameters": [
          {
            "name": "SubjectExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubjectValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BodyExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BodyValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserAcknowledgementRequired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/message/{messageId}": {
      "delete": {
        "tags": [
          "PartnerSetting"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/partner-setting/clients": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/send-message-to-client": {
      "post": {
        "tags": [
          "PartnerSetting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MessageSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MessageSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MessageSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.MessageSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/printTicketTemplateGet": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/partner-setting/get-partner-client-setting-with-partner-name-client-id/{partnerName}/{clientId}": {
      "get": {
        "tags": [
          "PartnerSetting"
        ],
        "parameters": [
          {
            "name": "partnerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/patient-list": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get efiles list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedCSRId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assignedCSRExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedCSRValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SelectedPatientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsRentalPickupOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasReturnOrExchange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcedureDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/GetReminders/{patientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get efiles list by patientId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/orders/{patientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get efiles sales order by patientId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/documents": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get efiles documents by patientId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {PatientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasSalesOrder",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/all-documents": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get efiles documents by patientId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {PatientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DocumentTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DocumentTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDateTimeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDateTimeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/{patientId}": {
      "delete": {
        "tags": [
          "Patient"
        ],
        "summary": "delete patient by patientId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/search-by-key": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get efiles by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/search-primary": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "patient search prime from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Birthdate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/cpt": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get cpt code by key from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/cmn-list": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get invoice list from a system by PatientId.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "CMNIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CMNStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/CARDONFILE/{PatientId}/{ClientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get Billing Plan list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/ListBillingPlans/{PatientId}/{ClientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get billing plan list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ClientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/CancelBillingPlan": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/CancelCard": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CancelCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CancelCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CancelCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CancelCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/SaveCard": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SaveCardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SaveCardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SaveCardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SaveCardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/par-list": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get PAR list.",
        "description": "Sample request:\r\n            \r\n    HttpGet\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PARIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InitialDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpirationDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoggedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ParExpiryStatusFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/pickup-ticket-list": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "get all pickup tickets from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PickupTicketIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupTicketIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pickupTicketOrderTypeIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pickupReasonNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pickupReasonNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finalBillingDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finalBillingDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/pre-confirm/{patientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/find-by-name": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Find efiles by name",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "searchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/PatientCreditCardProfile": {
      "post": {
        "tags": [
          "Patient"
        ],
        "summary": "save patient credit card profile in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.CardConnect.CardconnectProfileRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.CardConnect.CardconnectProfileRequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.CardConnect.CardconnectProfileRequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.CardConnect.CardconnectProfileRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/PatientDeleteCreditCardProfile/{profileId}/{acctId}/{ClientId}/{PatientId}": {
      "delete": {
        "tags": [
          "Patient"
        ],
        "summary": "save patient credit card profile in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acctId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PatientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/move-patient-file": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/edit-documentType-patient-file": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/delete-patient-file": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/rename-patient-file": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/move-patient-file-to-salesorder": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/move-patient-file-to-all": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/get-patient-digital-signature/{patientId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get patient digital signature by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/patient-insurance-list": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/SaveDigitalSignature": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDigitalSignatureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDigitalSignatureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDigitalSignatureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDigitalSignatureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/patient-intake-list": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get patient intake list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedCSRId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assignedCSRExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedCSRValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SelectedPatientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsRentalPickupOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasReturnOrExchange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcedureDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/forms-list": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/patient-form-get": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FormGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/save-patient-form-question-answer": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFormQuestionAnswer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFormQuestionAnswer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFormQuestionAnswer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientFormQuestionAnswer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/print-patient-form": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientForm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientForm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/patientimportsave": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientImportModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientImportModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientImportModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientImportModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/move-intake-document-to-patient-efiles": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.MoveIntakeDocumentToPatientEFiles"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.MoveIntakeDocumentToPatientEFiles"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.MoveIntakeDocumentToPatientEFiles"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.MoveIntakeDocumentToPatientEFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/copy-patient-tab-wise": {
      "post": {
        "tags": [
          "Patient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyPatientModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyPatientModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyPatientModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyPatientModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/sales-order-get-by-patient-insurance/{patientInsuranceId}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "parameters": [
          {
            "name": "patientInsuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/global-search": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Global Search For Sales order,Patient,Invoice.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/patient-access": {
      "get": {
        "tags": [
          "PatientAccess"
        ],
        "summary": "Get patient Access from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"PatientAccess found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PatientAccess"
        ],
        "summary": "save patient Access in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PatientAccess successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientAccessModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientAccessModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientAccessModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientAccessModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/patient-access/{patientAccessId}": {
      "delete": {
        "tags": [
          "PatientAccess"
        ],
        "summary": "delete patient Access by patientAccessId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientAccessId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PatientAccess successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientAccessId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/clinical/{patientId}": {
      "get": {
        "tags": [
          "PatientClinical"
        ],
        "summary": "Get patient clinical by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/clinical/save": {
      "post": {
        "tags": [
          "PatientClinical"
        ],
        "summary": "save patient clinical in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/contact/{patientId}": {
      "get": {
        "tags": [
          "PatientContact"
        ],
        "summary": "Get patient contact by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/contact/save": {
      "post": {
        "tags": [
          "PatientContact"
        ],
        "summary": "save patient contact in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientContactModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientContactModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientContactModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientContactModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/contact/{personContactId}": {
      "delete": {
        "tags": [
          "PatientContact"
        ],
        "summary": "delete person contact by personContactId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {personContactId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "personContactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-files/get-file-list/{patientId}": {
      "get": {
        "tags": [
          "PatientFiles"
        ],
        "summary": "Get key-value list of given masterdata key.",
        "description": "Sample request:\r\n            \r\n    GET /generic/getdropdownlist/country\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"countrylist\": [\r\n          {\r\n            \"id\": 16,\r\n            \"name\": \"Full Time\"\r\n          },\r\n          {\r\n            \"id\": 17,\r\n            \"name\": \"Part Time\"\r\n          },\r\n          {\r\n            \"id\": 18,\r\n            \"name\": \"Unemployed\"\r\n          },\r\n          {\r\n            \"id\": 19,\r\n            \"name\": \"Retired\"\r\n          },\r\n          {\r\n            \"id\": 20,\r\n            \"name\": \"UnKnown\"\r\n          }\r\n        ]\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-files/get-s3presigned-url/{fileId}": {
      "get": {
        "tags": [
          "PatientFiles"
        ],
        "summary": "Get key-value list of given masterdata key.",
        "description": "Sample request:\r\n            \r\n    GET /generic/getdropdownlist/country\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"countrylist\": [\r\n          {\r\n            \"id\": 16,\r\n            \"name\": \"Full Time\"\r\n          },\r\n          {\r\n            \"id\": 17,\r\n            \"name\": \"Part Time\"\r\n          },\r\n          {\r\n            \"id\": 18,\r\n            \"name\": \"Unemployed\"\r\n          },\r\n          {\r\n            \"id\": 19,\r\n            \"name\": \"Retired\"\r\n          },\r\n          {\r\n            \"id\": 20,\r\n            \"name\": \"UnKnown\"\r\n          }\r\n        ]\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient-files/upload-file": {
      "post": {
        "tags": [
          "PatientFiles"
        ],
        "summary": "upload fax scan in a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "DocumentTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FileExt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OriginalFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DisplayFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileInByte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "ClientKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileSizeInKB",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient-files/ph-order-file-upload": {
      "post": {
        "tags": [
          "PatientFiles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.FileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient-files/EmailPatientEFiles": {
      "post": {
        "tags": [
          "PatientFiles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.EmailPatientEFilesModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.EmailPatientEFilesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.EmailPatientEFilesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.EmailPatientEFilesModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/general/{patientId}": {
      "get": {
        "tags": [
          "PatientGeneral"
        ],
        "summary": "Get patient general by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/general/save": {
      "post": {
        "tags": [
          "PatientGeneral"
        ],
        "summary": "save patient general in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientGeneralInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientGeneralInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientGeneralInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientGeneralInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/general/copy-address-to-insured": {
      "post": {
        "tags": [
          "PatientGeneral"
        ],
        "summary": "copy address to insurance.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyAddressToInsured"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyAddressToInsured"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyAddressToInsured"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CopyAddressToInsured"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/general/update-is-payment-on-file": {
      "post": {
        "tags": [
          "PatientGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.IsPaymentOnFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.IsPaymentOnFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.IsPaymentOnFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.IsPaymentOnFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/general/saveextendedinfohistory": {
      "post": {
        "tags": [
          "PatientGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientExtendedInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientExtendedInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientExtendedInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientExtendedInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/general/patientextendedinfohistory/{patientId}": {
      "get": {
        "tags": [
          "PatientGeneral"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/general/validateNumber": {
      "get": {
        "tags": [
          "PatientGeneral"
        ],
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/get-patient-insurance-list/{patientId}": {
      "get": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "Get patient insurance list by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/insurance/get-patient-insurance/{patientInsuranceId}/{showActiveInsurance}": {
      "get": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "Get patient insurance policy list by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientInsuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientInsuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "showActiveInsurance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/insurance/get-patient-insurance-expired": {
      "get": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "Get all expired patient insurances",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientInsuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/insurance/save-policy": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "save patient insurance policy in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/save-settings": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "save patient settings policy in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/{patientInsuranceId}": {
      "delete": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "delete patient insurance by patientInsuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientInsuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientInsuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/insurance/verify-eligibility": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "verify patient insurance policy eligibilty.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/get-eligibility-check-records": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "get patient insurance policy eligibilty cheks record.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/get-eligibility-check-response-records": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/delete-eligibility": {
      "delete": {
        "tags": [
          "PatientInsurance"
        ],
        "summary": "delete patient insurance by patientInsuranceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientInsuranceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "eligibilityCheckId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/insurance/add-adjustor-for-patient-insurance": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/delete-adjustor-for-patient-insurance": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/insurance/activate-insurance/{patientInsuranceId}": {
      "post": {
        "tags": [
          "PatientInsurance"
        ],
        "parameters": [
          {
            "name": "patientInsuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/notes/GetPatientNotes/{patientId}/{type}": {
      "get": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "get patient notes by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/notes/GetPatientNoteById/{patientNoteId}": {
      "get": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "get patient notes by patientNoteId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientNoteId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/notes/save-note": {
      "post": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "save patient note in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/notes/save-delivery-note": {
      "post": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "save delivery note in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDeliveryNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDeliveryNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDeliveryNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientDeliveryNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/notes/save-comment": {
      "post": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "save note comment in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteCommentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteCommentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteCommentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientNoteCommentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/notes/delete-note/{patientNoteId}": {
      "delete": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "delete note by patientNoteId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientNoteId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/notes/delete-comment/{patientNoteCommentId}": {
      "delete": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "delete patient comment by patientNoteCommentId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patientNoteCommentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientNoteCommentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/notes/PrintNote": {
      "post": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "get print note by patientid,patientNoteId,Type.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientNoteModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientNoteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientNoteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PrintPatientNoteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/patient/notes/get-patient-notes": {
      "get": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "get patient notes by masterPatientNoteModel.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNoteIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNoteIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubjectExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubjectValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NoteStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SeverityValueExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SeverityValueValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedToExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedToValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsLockedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsLockedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateFilterStartDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateFilterEndDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient/notes/note-mass-update": {
      "post": {
        "tags": [
          "PatientNotes"
        ],
        "summary": "get patient notes by masterPatientNoteModel.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.NoteMassUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.NoteMassUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.NoteMassUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.NoteMassUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/generate": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.OCRDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.OCRDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.OCRDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.OCRDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/get-patient-ocr-template-list": {
      "get": {
        "tags": [
          "PatientOCR"
        ],
        "parameters": [
          {
            "name": "OcrTemplateTypeIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OcrTemplateTypeIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/delete-patient-ocr-template/{ocrTemplateTypeId}": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "parameters": [
          {
            "name": "ocrTemplateTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/general/{ocrTemplateTypeId}": {
      "get": {
        "tags": [
          "PatientOCR"
        ],
        "parameters": [
          {
            "name": "ocrTemplateTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/save-patient-ocr-template": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/get-patient-ocr-template-duplicate-faxNumber": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/delete-patient-ocr-template-fax-number/{OcrTemplateFaxNumberId}": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "parameters": [
          {
            "name": "OcrTemplateFaxNumberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/get-patient-ocr-template-label/{ocrTemplateTypeId}": {
      "get": {
        "tags": [
          "PatientOCR"
        ],
        "parameters": [
          {
            "name": "ocrTemplateTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patient-ocr/save-patient-ocr-template-label": {
      "post": {
        "tags": [
          "PatientOCR"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateLabelSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateLabelSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateLabelSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.PatientOcrTemplateLabelSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/patient-type/{patientTypeId}": {
      "get": {
        "tags": [
          "PatientType"
        ],
        "summary": "get patient types by patientTypeId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patienttypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"PatientType found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/patient-type": {
      "post": {
        "tags": [
          "PatientType"
        ],
        "summary": "save patient type in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PatientType successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientTypeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PatientTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/patient-type/{patienttypeId}": {
      "delete": {
        "tags": [
          "PatientType"
        ],
        "summary": "delete patientType from patientTypeId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {patienttypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PatientType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/save": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "save deposits in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentGeneralInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentGeneralInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentGeneralInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentGeneralInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/payment/GetBillingPlanById/{planId}/{clientId}/{patientId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "get Billing Plan by planId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {planId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/GetPatientById/{patientId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "get patient by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/{paymentId}/{depositId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "get payment by paymentId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {paymentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "depositId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/{paymentId}": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "delete payment by paymentId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-master": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "get payment by paymentId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {paymentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentMasterGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentMasterGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentMasterGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentMasterGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/payment/payment-list": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentListGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentListGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentListGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentListGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/insurance-patient-search": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "get payment by paymentId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {paymentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.InsurancePatientSearchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.InsurancePatientSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.InsurancePatientSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.InsurancePatientSearchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/dashboard-data": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "get dashboard Data from delivery.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/IsAcceptPayment/{clientKey}/{branchId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get all the default settings for specified page.",
        "description": "Sample request:\r\n            \r\n    GET \r\n    \r\nSample response:",
        "parameters": [
          {
            "name": "clientKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-refund": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "get payment by paymentId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {paymentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RefundPaymentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RefundPaymentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RefundPaymentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RefundPaymentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/RecurringBillingPlan": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RecurringBillingCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RecurringBillingCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RecurringBillingCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.RecurringBillingCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/ListBillingPlans/{clientId}/{merchantId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/CancelBillingPlan": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/MarkAsPaidPlan": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MarkAsPaidModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MarkAsPaidModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MarkAsPaidModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.MarkAsPaidModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/cancelBillingPlanSchedulePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanSchedulePaymentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanSchedulePaymentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanSchedulePaymentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.CancelBillingPlanSchedulePaymentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/get-transaction-token": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentTransactionTokenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentTransactionTokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentTransactionTokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentTransactionTokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/make-transaction": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/log-transaction": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Log or save the transaction detail in system to track history of payments performed by patient.",
        "description": "Sample request:\r\n            \r\n    POST /payment/log-transaction\r\n    {\r\n        \"PatientId\": 1001,\r\n        \"InvoiceNumber\": 30506,\r\n        \"Amount\": \"70.00\",\r\n        \"NameonCard\": \"Todd Moto\",\r\n        \"CardNumber\": \"9416285736761111\",\r\n        \"ConfigRefNumber\": 1001,\r\n        \"RequestData\": {\r\n            \"authorization\": \"Basic dGVzdGluZzp0ZXN0aW5nMTIz\",\r\n            \"merchid\": \"800000000134\",\r\n            \"accttype\": \"VISA\",\r\n            \"orderid\": null,\r\n            \"account\": \"9416285736761111\",\r\n            \"expiry\": \"0420\",\r\n            \"amount\": \"7000\",\r\n            \"currency\": \"USD\",\r\n            \"name\": \"Todd Moto\",\r\n            \"address\": null,\r\n            \"city\": null,\r\n            \"region\": null,\r\n            \"country\": null,\r\n            \"postal\": null,\r\n            \"profile\": \"N\",\r\n            \"cvv2\": \"120\",\r\n            \"capture\": \"Y\"\r\n        },\r\n        \"ResponseData\": {\r\n            \"amount\": \"70.00\",\r\n            \"resptext\": \"Approval\",\r\n            \"cvvresp\": \"\",\r\n            \"batchid\": \"153\",\r\n            \"avsresp\": \"\",\r\n            \"respcode\": \"000\",\r\n            \"merchid\": \"800000000134\",\r\n            \"token\": \"9416285736761111\",\r\n            \"authcode\": \"PPS694\",\r\n            \"respproc\": \"RPCT\",\r\n            \"retref\": \"093902132179\",\r\n            \"respstat\": \"A\",\r\n            \"account\": \"9416285736761111\"\r\n        },\r\n        \"ResponseStatus\": \"Approval\",\r\n        \"RetRef\": \"093902132179\",\r\n        \"CardType\": \"VISA\",\r\n        \"AuthCode\": \"PPS694\",\r\n        \"PendingSelectedAppointments\": [\r\n            {\r\n                \"appointmentId\": 30506,\r\n                \"clientId\": 2,\r\n                \"facilityId\": 105,\r\n                \"facilityName\": \"Cadila 2 Clinic\",\r\n                \"feesCharge\": 70,\r\n                \"appointmentStartTime\": \"2018-04-25T18:30:00\",\r\n                \"appointmentEndTime\": \"2018-04-25T18:30:00\",\r\n                \"appointmentStatus\": \"Open\",\r\n                \"isSelected\": true,\r\n                \"patientId\": 1001\r\n            }\r\n        ]\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Transaction successfully logged!\",\r\n        \"data\": {\r\n            \"isInserted\": true,\r\n            \"paymentId\": 9302\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.TransactionResponse"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.TransactionResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.TransactionResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.TransactionResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/delete-payment-document": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/upload-eob-to-patient-efiles/{paymentId}": {
      "post": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/CCTransactionStatus_Get": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentInquiryModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentInquiryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentInquiryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentInquiryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-batch-save": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/get-payment-batch-by-id/{paymentBatchId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "paymentBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-batch-post": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-batch": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentBatchGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentBatchGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentBatchGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentBatchGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/payment/delete-paymentbatch/{paymentBatchId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "paymentBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/payment-allocate-by-invoiceId": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentAllocateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentAllocateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentAllocateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.PaymentAllocateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/delete-paymentBatch-document": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchDocumentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchDocumentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchDocumentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchDocumentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.OkResult"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/reset-paymentbatch/{paymentBatchId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "paymentBatchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment/balance-transfer-by-invoiceId": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.BalanceTransferModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.BalanceTransferModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.BalanceTransferModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Payment.Models.BalanceTransferModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/get-Payment-Posting-Invoices": {
      "post": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "get Payment posting invoces",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentPostingInvoiceGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentPostingInvoiceGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentPostingInvoiceGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentPostingInvoiceGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/save": {
      "post": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "save Payment detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/update": {
      "post": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "save Payment detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/invoice-detail/{invoiceId}/{paymentId}/{isPaymentBatch}": {
      "get": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "Get invoice by invoiceId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {invoiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "isPaymentBatch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/{paymentDetailId}/{invoiceId}/{isAppliedPaymentMode}": {
      "get": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "get paymentDetail by paymentDetailId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {paymentDetailId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "paymentDetailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isAppliedPaymentMode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-detail/{paymentDetailId}": {
      "delete": {
        "tags": [
          "PaymentDetail"
        ],
        "summary": "delete payment details by paymentDetailId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "paymentDetailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/payment-detail-reason": {
      "get": {
        "tags": [
          "PaymentDetailReason"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PaymentDetailReason"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PaymentDetailReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PaymentDetailReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PaymentDetailReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PaymentDetailReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/payment-detail-reason/{paymentDetailReasonId}": {
      "get": {
        "tags": [
          "PaymentDetailReason"
        ],
        "parameters": [
          {
            "name": "paymentDetailReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentDetailReason"
        ],
        "parameters": [
          {
            "name": "paymentDetailReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/payment-reason": {
      "get": {
        "tags": [
          "PayReason"
        ],
        "summary": "get pay reasons by payReasonId.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"PayReason found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PayReason"
        ],
        "summary": "save pay reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PayReason successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PayReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PayReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PayReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PayReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/payment-reason/{payReasonId}": {
      "delete": {
        "tags": [
          "PayReason"
        ],
        "summary": "delete pay reason by payReasonId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {payReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PayReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "payReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/permission-management/menu-tree/{clientId}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get menu tree of permissions",
        "description": "Sample request:\r\n            \r\n    HttpGet /api/v1/permission-management/treeview\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission-management/menu-permissions/{roleId}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "get permissions menu by reoleId",
        "description": "Sample request:\r\n            \r\n    HttpGet /api/v1/permission-management/treeview\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission-management/treeview": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "get treeview of roles permission",
        "description": "Sample request:\r\n            \r\n    HttpGet /api/v1/permission-management/treeview\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission-management/GetUserPermissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "get user permission lists",
        "description": "Sample request:\r\n            \r\n    HttpGet /api/v1/permission-management/treeview\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/permission-management/save-roles-permissions": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "save roles permission in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPut /api/v1/permission-management/save-roles-permissions\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Permission Successfully Updated.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleMenuPermissionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleMenuPermissionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleMenuPermissionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleMenuPermissionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pickup-reason": {
      "get": {
        "tags": [
          "PickupReason"
        ],
        "summary": "get pickup reason from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PickupReason"
        ],
        "summary": "save pickup reason in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pickup-reason/{pickupReasonId}": {
      "delete": {
        "tags": [
          "PickupReason"
        ],
        "summary": "delete pickup reason by pickupReasonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {pickupReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PickupReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pickupReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pickup-reason/pickupreasonvalidation/{pickupReasonId}": {
      "get": {
        "tags": [
          "PickupReason"
        ],
        "parameters": [
          {
            "name": "pickupReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pickup-ticket": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "get all pickup tickets from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PickupTicketIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupTicketIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pickupTicketOrderTypeIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workFlowStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workFlowStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pickupReasonNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pickupReasonNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finalBillingDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "finalBillingDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/{pickupTicketId}/{clientId}": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "get pickup tickets by pickupTicketId from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {pickupTicketId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pickupTicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/save": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "save pickup ticket in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pickup-ticket/save-product": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pickup-ticket/get-patient-detail": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "get patient detail by patientId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/salesorder-products": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "get patient products from SalesOrderId.",
        "description": "Sample request:\r\n            \r\n     HttpGet {salesorderid}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.SalesOrderProductGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.SalesOrderProductGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.SalesOrderProductGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.SalesOrderProductGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/update-status": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "update status of pickup ticket in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/{pickupTicketId}": {
      "delete": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "delete pickup ticket by pickupTicketId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {pickupTicketId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pickupTicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/PickupTicket": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "Generate and download pickup ticket pdf by PickupTicketId,PatientId and BranchId.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PrintPickupTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PrintPickupTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PrintPickupTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PrintPickupTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/pickup-ticket/future-invoice-list": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "parameters": [
          {
            "name": "PickupTicketId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InvoiceIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InvoiceIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfServiceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfServiceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorLevelExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayorLevelValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/pickupticket-patient-list": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "parameters": [
          {
            "name": "PatientIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PrimaryEmailValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostCenterValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PlaceOfServiceValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfAdmissionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedCSRId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assignedCSRExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedCSRValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DoctorNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhoneValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceListValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LatestSalesOrderCreatedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MBINumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SelectedPatientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsRentalPickupOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasReturnOrExchange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcedureDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOfCreationValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AlsoKnownAsValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/deletefutureclaim/{pickupTicketId}": {
      "delete": {
        "tags": [
          "PickupTicket"
        ],
        "parameters": [
          {
            "name": "pickupTicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/get-exchange-to-serial-number-detail": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.ExchangeToSerialNumberDetailGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.ExchangeToSerialNumberDetailGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.ExchangeToSerialNumberDetailGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.ExchangeToSerialNumberDetailGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/get-cancelled-pickuptickets": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "get all cancelled pickup tickets from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PickupTicketIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PickupTicketIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/reset-pickup-ticket": {
      "post": {
        "tags": [
          "PickupTicket"
        ],
        "summary": "reset of pickup ticket in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pickup-ticket/show-reset-pickupticket-modal/{pickupTicketId}": {
      "get": {
        "tags": [
          "PickupTicket"
        ],
        "parameters": [
          {
            "name": "pickupTicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/pickup-work-in-progress-state": {
      "get": {
        "tags": [
          "PickupWorkInProgressState"
        ],
        "summary": "get list of pickup work in progress state.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PickupWorkInProgressState"
        ],
        "summary": "save list of pickup work in progress state in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupWorkInProgressStateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupWorkInProgressStateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupWorkInProgressStateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupWorkInProgressStateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pickup-work-in-progress-state/{pickupWorkInProgressStateId}": {
      "delete": {
        "tags": [
          "PickupWorkInProgressState"
        ],
        "summary": "delete list of pickup work in progress state by pickupWorkInProgressStateId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {pickupWorkInProgressStateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PickupWorkInProgressStateId successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "pickupWorkInProgressStateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pos/{placeOfServiceId}": {
      "get": {
        "tags": [
          "PlaceOfService"
        ],
        "summary": "get palceofservice by placeOfServiceId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {placeOfServiceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"PlaceOfServices found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "placeOfServiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pos": {
      "post": {
        "tags": [
          "PlaceOfService"
        ],
        "summary": "save palceofservice in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"PlaceOfService successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PlaceOfServiceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PlaceOfServiceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PlaceOfServiceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PlaceOfServiceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/pos/{placeofserviceId}": {
      "delete": {
        "tags": [
          "PlaceOfService"
        ],
        "summary": "delete palceofservice by placeofServiceId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {placeofserviceId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"PlaceOfService successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "placeofserviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/file-upload/{id}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal/file-upload/create": {
      "post": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RequestedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CompletedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "VerifiedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DocumentTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DocumentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Base64StringFile",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/file-upload/delete": {
      "delete": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/insurance/{id}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal/insurance/create": {
      "post": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RequestedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CompletedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "VerifiedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsPatientHasInsurance",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InsuranceName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceAddress1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceAddress2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceCity",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceStateCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceZIP",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsurancePhone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceFax",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Group",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Policy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CoverageStartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "RelationToInsured",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RelationFirstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelationMiddleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelationLastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelationSex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelationBirthDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PayorLevelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/insurance/delete": {
      "delete": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/demographics/{id}": {
      "get": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal/demographics/create": {
      "post": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "RequestedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CompletedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "VerifiedDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MiddleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "HomePhone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MobilePhone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StateCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ZIP",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmploymentStatusId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaritalStatusId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReferenceSourceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EMContact",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EMContactPhone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/demographics/delete": {
      "delete": {
        "tags": [
          "Portal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/intake/save": {
      "post": {
        "tags": [
          "PortalIntakeForm"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Portal.Models.PortalIntakeFormAdminModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Portal.Models.PortalIntakeFormAdminModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Portal.Models.PortalIntakeFormAdminModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Portal.Models.PortalIntakeFormAdminModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/portal/intake/forms-list": {
      "get": {
        "tags": [
          "PortalIntakeForm"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/procedure-code": {
      "get": {
        "tags": [
          "ProcedureCode"
        ],
        "parameters": [
          {
            "name": "ProcedureCodeDMECategoryIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeDMECategoryIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CatNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CatNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeDMECategoryNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeDMECategoryNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsTaxable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsPriceChangeable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProcedureCode"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProcedureCodeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProcedureCodeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProcedureCodeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProcedureCodeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/procedure-code/{procedureCodeDMECategoryId}": {
      "delete": {
        "tags": [
          "ProcedureCode"
        ],
        "parameters": [
          {
            "name": "procedureCodeDMECategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/procedure-code/get-procedure-code-byId/{procedureCodeDMECategoryId}": {
      "get": {
        "tags": [
          "ProcedureCode"
        ],
        "parameters": [
          {
            "name": "procedureCodeDMECategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/procedure-code/procedure-code-search-by-key": {
      "get": {
        "tags": [
          "ProcedureCode"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/list": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get all product lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SearchKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UpcValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ExcludeSpecificProductType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasProcedureSchedule",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsResupply",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/{productItemId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get all product by productId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {productId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/save": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "save product in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Branch successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/medicare-pricing": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "create pricing for a product in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPut \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Product pricing successfully generated\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductMedicarePricingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductMedicarePricingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductMedicarePricingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductMedicarePricingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/{productId}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "delete product by productId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {productId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Branch successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/{productId}/{saleType}": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "saleType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/dashboard-data": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/dashboard-data/data-grid": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/copy-product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "copy product in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"copy\",\r\n        \"message\": \"Product successfully copied.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.CopyProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.CopyProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.CopyProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.CopyProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/save/serial-number": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "save product serial number in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"product serial number successfully update.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/serial-number/list": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "get all product serial lists from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Serial Number list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/update-serial-number/status": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "update  serial number status in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"product serial number successfully update.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SerialNumberUpdateStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SerialNumberUpdateStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SerialNumberUpdateStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SerialNumberUpdateStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/update-serial-number/product/status": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "update product serial number by status in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"product serial number successfully update.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateProductSerialNumberByStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateProductSerialNumberByStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateProductSerialNumberByStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateProductSerialNumberByStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/delete/serial-number": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "delete product serial number in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"product serial number successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberDeleteModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberDeleteModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberDeleteModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberDeleteModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/inventory-transactions/list": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get Inventory Transactions List from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Inventory Transactions List found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryTransactionAction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/missing-inventory-transactions/list": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get Missing Inventory Transactions List from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Missing Inventory Transactions List found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryTransactionAction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/inventory-transactions-for-transfer/list": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "get Missing Inventory Transactions List from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Missing Inventory Transactions List found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "InventoryTransactionAction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryActionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpiryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LotNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/get-inventory-transactions-for-transfer-by-multiple-product": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetInventoryTransactionsListModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetInventoryTransactionsListModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetInventoryTransactionsListModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetInventoryTransactionsListModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/patient-product-list": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PatientProductGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PatientProductGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PatientProductGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PatientProductGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/get-serial-numbers-by-multiple-product": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.GetProductSerialNumberModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/saveproductitemschedule": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductItemScheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductItemScheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductItemScheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductItemScheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/getproductItemScheduleList": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "ProcedureCodeDMECategoryScheduleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BillingPeriod",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEvery",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BillingUntil",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProductItemScheduleIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductItemScheduleIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/get-productSchedule-by-scheduleId/{productItemScheduleId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productItemScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/get-productitem-for-schedule": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "SalesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductItemIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/get-feeClassScheduleList-by-feeClassId": {
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FeeClassScheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FeeClassScheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FeeClassScheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FeeClassScheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/product-category": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "ProductCategories"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductCategoriesModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductCategoriesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductCategoriesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductCategoriesModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/product-category/{productCategoryId}": {
      "delete": {
        "tags": [
          "ProductCategories"
        ],
        "parameters": [
          {
            "name": "productCategoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product-files/get-file-list/{productId}": {
      "get": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "Get List of Efiles By Product.",
        "description": "Sample request:\r\n            \r\n    GET get-file-list/{ProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"eFileList\": [\r\n         \r\n        ]\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-files/documents/{productId}": {
      "get": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "Get List of Efiles By Product.",
        "description": "Sample request:\r\n            \r\n    GET get-file-list/{ProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"eFileList\": [\r\n         \r\n        ]\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-files/get-s3presigned-url/{fileId}": {
      "get": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "Get Presigned Url OF AWSS3",
        "description": "Sample request:\r\n            \r\n    GET /get-s3presigned-url/{fileId}\r\n    \r\nSample response:\r\n\r\n    {\r\n      \"code\": \"200\",\r\n      \"status\": \"Success\",\r\n      \"message\": \"Successful.\",\r\n      \"data\": {\r\n        \"presignedUrl\": {\r\n        }\r\n      }\r\n    }",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product-files/upload-file": {
      "post": {
        "tags": [
          "ProductFiles"
        ],
        "summary": "upload Product Documents in a system.",
        "description": "Sample request:\r\n            \r\n     HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "DocumentTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FileExt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OriginalFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DisplayFileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileInByte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "ClientKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FileSizeInKB",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product-files/delete-product-file": {
      "post": {
        "tags": [
          "ProductFiles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product-files/rename-product-file": {
      "post": {
        "tags": [
          "ProductFiles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product-files/edit-documentType-product-file": {
      "post": {
        "tags": [
          "ProductFiles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductFileModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/product/product-pricing/get-pricing-list-by-product": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "summary": "get product pricings list by productId.",
        "description": "Sample request:\r\n            \r\n     HttpGet {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Branch list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing/{feeScheduleId}": {
      "get": {
        "tags": [
          "ProductPricing"
        ],
        "summary": "get product pricings list by feeScheduleId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {feeScheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"FeeClass found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPricing"
        ],
        "summary": "delete feeschedule by feescheduleId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {feescheduleId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"FeeClass successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "feeScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "summary": "save feeschedule in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductPricingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductPricingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductPricingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductPricingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPricing"
        ],
        "parameters": [
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedCSRId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AssignToNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsVoid",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedByNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsCmnExist",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StatusTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsRentalPickupOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FeeScheduleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing/get-pricing-list-by-product-future-copy": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing/copy-product-future-schedule": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeScheduleSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeScheduleSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeScheduleSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeScheduleSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing/copy-product-future-schedule-to-all-product": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeSchedule"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeSchedule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeSchedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product/product-pricing/update-product-pricing-by-feeClassScheduleId": {
      "post": {
        "tags": [
          "ProductPricing"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.UpdateProductPricingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.UpdateProductPricingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.UpdateProductPricingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.UpdateProductPricingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow": {
      "get": {
        "tags": [
          "ProductWorkFlowGeneral"
        ],
        "parameters": [
          {
            "name": "ProductWorkFlowGeneralIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowGeneralIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow/{productWorkFlowGeneralId}/{newProductWorkFlowGeneralId}": {
      "delete": {
        "tags": [
          "ProductWorkFlowGeneral"
        ],
        "parameters": [
          {
            "name": "productWorkFlowGeneralId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "newProductWorkFlowGeneralId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow/general/{productWorkFlowGeneralId}": {
      "get": {
        "tags": [
          "ProductWorkFlowGeneral"
        ],
        "parameters": [
          {
            "name": "productWorkFlowGeneralId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow/save-product-workflow": {
      "post": {
        "tags": [
          "ProductWorkFlowGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowGeneralSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowGeneralSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowGeneralSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowGeneralSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow/delete-product-workflow-step": {
      "post": {
        "tags": [
          "ProductWorkFlowGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStepDelete"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStepDelete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStepDelete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStepDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow-product": {
      "get": {
        "tags": [
          "ProductWorkFlowProduct"
        ],
        "parameters": [
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowGeneralId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow-product/delete-multiple-products": {
      "post": {
        "tags": [
          "ProductWorkFlowProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow-product/update-assigned-products": {
      "post": {
        "tags": [
          "ProductWorkFlowProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/product-work-flow-product/add-product-to-work-flow": {
      "post": {
        "tags": [
          "ProductWorkFlowProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.WorkFlowProductAdd"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.WorkFlowProductAdd"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.WorkFlowProductAdd"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.WorkFlowProductAdd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/list": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseRequestIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseRequestIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestShipDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestShipDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseOrderTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseOrderTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropShipExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropShipValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/{purchaseOrderId}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order order by purchaseOrderId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order deleted by purchaseOrderId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {purchaseOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/product/{purchaseOrderProductId}": {
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order deleted by purchaseOrderItemId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseOrderItemId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseOrderProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order product order by purchaseOrderProductId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseOrderProductId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseOrderProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/product-list": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase-order product list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/save": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/product-save": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/product-bulk-update": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderBulkUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderBulkUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderBulkUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderBulkUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/copy": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.CopyPurchaseOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.CopyPurchaseOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.CopyPurchaseOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.CopyPurchaseOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-order/PurchaseOrderPrint": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PrintPurchaseOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PrintPurchaseOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PrintPurchaseOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PrintPurchaseOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/PurchaseOrder/GeneratePOEDI": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.PODetail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.PODetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.PODetail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.PODetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PurchaseOrder/SendPOEDI": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.SendPurchaseOrderEDI"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.SendPurchaseOrderEDI"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.SendPurchaseOrderEDI"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.SendPurchaseOrderEDI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/list": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseRequestIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseRequestIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseRequestStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PurchaseRequestStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ShowOnlyNewPR",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/{purchaseRequestId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/orders/{purchaseRequestId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/associated_salesorder_pr": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseRequestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/associated_patient_pr": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseRequestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/product/{PurchaseRequestProductId}": {
      "delete": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseRequestProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/save": {
      "post": {
        "tags": [
          "PurchaseRequest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/product-bulk-update": {
      "post": {
        "tags": [
          "PurchaseRequest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestBulkUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestBulkUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestBulkUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestBulkUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/product-list": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request product list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PurchaseRequestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropshipExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropshipValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ZipCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ZipCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UnitAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UnitAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExtAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExtAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SupplierNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/product/{purchaseRequestProductId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseRequestProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/product-save": {
      "post": {
        "tags": [
          "PurchaseRequest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/purchase-request_from_sales-order": {
      "post": {
        "tags": [
          "PurchaseRequest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.SalesOrderPurchaseRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.SalesOrderPurchaseRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.SalesOrderPurchaseRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.SalesOrderPurchaseRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/process/{purchaseRequestId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "Get purchase-request order by purchaseRequestId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {purchaseRequestId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "purchaseRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/salesorder_product/{salesOrderId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "summary": "get sales order product by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/associate_salesorder_product/{salesOrderId}": {
      "get": {
        "tags": [
          "PurchaseRequest"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/purchase-request/copy": {
      "post": {
        "tags": [
          "PurchaseRequest"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.CopyPurchaseRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.CopyPurchaseRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.CopyPurchaseRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.CopyPurchaseRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rcm-claim/search-invoice": {
      "post": {
        "tags": [
          "RCMClaim"
        ],
        "summary": "Get invoice list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rcm-claim/caim-tracker-get": {
      "post": {
        "tags": [
          "RCMClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rcm-claim/caim-tracker-detail-by-invoiceIds": {
      "post": {
        "tags": [
          "RCMClaim"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerDetailGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerDetailGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerDetailGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimTrackerDetailGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rcm-dashboard/data": {
      "post": {
        "tags": [
          "RCMDashboard"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rcm-dashboard/data-grid": {
      "post": {
        "tags": [
          "RCMDashboard"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RCM.Models.RCMClaimGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/redrock/token": {
      "post": {
        "tags": [
          "RedRock"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.AuthenticationTokenRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.AuthenticationTokenRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.AuthenticationTokenRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.AuthenticationTokenRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/redrock/view-order": {
      "get": {
        "tags": [
          "RedRock"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/redrock/submit-order": {
      "post": {
        "tags": [
          "RedRock"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.SubmitOrderRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.SubmitOrderRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.SubmitOrderRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.SubmitOrderRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/remark-code/search-by-key": {
      "get": {
        "tags": [
          "RemarkCode"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/get-all-download-history": {
      "get": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get report download history.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientNoteId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/save-report": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "Save Report",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.SaveReportLog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.SaveReportLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.SaveReportLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.SaveReportLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/get-download-file/{reportHistoryId}": {
      "get": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get report download history.",
        "description": "Sample request:\r\n            \r\n    HttpGet {patientNoteId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "reportHistoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/permission/get": {
      "get": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get user permission by userId.",
        "description": "Sample request:\r\n            \r\n    HttpGet api/v1/user/get-permissions\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/aragingsummary": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/report/aragingbypatient": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/report/aragingsbypayer": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get AR Agings By Payer Reportin a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.ReportModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/report/get-log": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "get log report.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.GetReportLog"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.GetReportLog"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.GetReportLog"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.ReportPermission.Model.GetReportLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/delete/{reportHistoryIds}": {
      "delete": {
        "tags": [
          "ReportPermission"
        ],
        "summary": "delete report permission by reporthisoryID.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {salesOrderDetailId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Sales Order Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "reportHistoryIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/report/daily-import-poa": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "parameters": [
          {
            "name": "ToEmailId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/daily-import-pay": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "parameters": [
          {
            "name": "ToEmailId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/daily-import-inv": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "parameters": [
          {
            "name": "ToEmailId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/report/daily-import-ins": {
      "post": {
        "tags": [
          "ReportPermission"
        ],
        "parameters": [
          {
            "name": "ToEmailId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/resupply/template": {
      "get": {
        "tags": [
          "Resupply"
        ],
        "parameters": [
          {
            "name": "ResupplyTemplateIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RunScheduledIntervalExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RunScheduledIntervalValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LeadTimePlacementExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LeadTimePlacementValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactByIntervalExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactByIntervalValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowGeneralIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowGeneralIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowStepCountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowStepCountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EndDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SurveyNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SurveyNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/resupply/template-save": {
      "post": {
        "tags": [
          "Resupply"
        ],
        "summary": "Save ResupplyTemplate in the system.",
        "description": "Sample request:\r\n\r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"ResupplyTemplate successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ResupplySaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ResupplySaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ResupplySaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ResupplySaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/resupply/get-resupplytemplate-by-id/{resupplyTemplatId}": {
      "get": {
        "tags": [
          "Resupply"
        ],
        "parameters": [
          {
            "name": "resupplyTemplatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/resupply/{resupplyTemplateId}": {
      "delete": {
        "tags": [
          "Resupply"
        ],
        "parameters": [
          {
            "name": "resupplyTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resupply/get-resupply-queue-list": {
      "get": {
        "tags": [
          "ResupplyQueue"
        ],
        "parameters": [
          {
            "name": "SalesOrderTemplateIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTemplateIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ActiveExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDeliveryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDeliveryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "get role list from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet  /api/v1/rollmanagement/1\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Role found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "save role in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost /api/v1/rollmanagement\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Roll Successfully Inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.RoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/role/{roleId}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "delete role by roleId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete /api/v1/rollmanagement/1\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Roll Successfully Deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get all sales order from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignedCSRId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AssignToNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsVoid",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedByNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateFromValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateToValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateFromValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeliveryDateToValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsCmnExist",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StatusTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MarketingRepValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryBranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryBranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "IsRentalPickupOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasReturnOrExchange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReferenceNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReferenceNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PatientInsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientInsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PARNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoidReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VoidReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HoldReasonExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HoldReasonValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/sales-order-list-pickup-ticket": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get all sales order from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/pre-confirm/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get preconfirm sales order by salesOrderId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {salesOrderId} \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/VerifyInsuranceEligibilityForSalesOrder/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Verifies insurance eligibility for all insurance policies for a sales order.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    {\r\n      \"salesOrderId\": 5\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Insurance eligibility succedded\",\r\n        \"data\": {\r\n            //TODO: put the return modelhere\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/void": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "void sales order in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    {\r\n      \"salesOrderId\": 5,\r\n      \"isVoid\": true,\r\n      \"salesOrderVoidReasonId\": 1\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Sales order successfully converted to void\",\r\n        \"data\": {\r\n            \"isVoid\": true\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderVoidModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderVoidModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderVoidModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderVoidModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/update-status": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "update status of sales order in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderUpdateStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderUpdateStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderUpdateStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderUpdateStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/{salesOrderId}": {
      "delete": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "delete sales order by SalesOrderId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/DeliveryTicket": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get delivery ticket by SalesOrderId,patientId,branchId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId,patientId,branchId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/tracking-package/save-ups": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/tracking-package/void-ups": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/tracking-package/update-status-ups": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/tracking-package/update-number-ups": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/dashboard-data": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get batch from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.DataboardFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/copy-sales-order": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "copy of sales order in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.CopySalesOrderModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.CopySalesOrderModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.CopySalesOrderModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.CopySalesOrderModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/get-sales-order-digital-signature/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Get SalesOrder digital signature by SalesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/SaveDigitalSignature": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/save-terms-and-conditions": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/ResetSalesOrderByStatus": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResetByStatusModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResetByStatusModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResetByStatusModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResetByStatusModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/ConfirmReOrderProducts/{salesOrderId}/{clientId}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/mr-notification-schedule/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/sales-order-product-work-flow": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/EmailDeliveryTicket": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.EmailDeliveryTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.EmailDeliveryTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.EmailDeliveryTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.EmailDeliveryTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/save-salesorder-productitem-schedule": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemScheduleModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemScheduleModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemScheduleModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemScheduleModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/FireSafetyForm": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/update-sales-order-product-serial-number": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductSerialNumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductSerialNumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductSerialNumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductSerialNumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/ConfirmSalesOrderAsync": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/sales-order-product-inventory-get/{salesOrderId}/{patientId}/{orderType}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "orderType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/get-sales-order-active-rentals-list": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "get sales order active rentals list.",
        "description": "Sample request:\r\n            \r\n     HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"\",\r\n        \"status\": \"\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderActiveRentalsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderActiveRentalsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderActiveRentalsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderActiveRentalsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/clinical/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderClinical"
        ],
        "summary": "get sales order clinical by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/clinical/save": {
      "post": {
        "tags": [
          "SalesOrderClinical"
        ],
        "summary": "save salesorder in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderClinicalModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderClinicalModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderClinicalModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderClinicalModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/customforms/customform-list": {
      "get": {
        "tags": [
          "SalesOrderCustomForms"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/customforms/customform-generate": {
      "post": {
        "tags": [
          "SalesOrderCustomForms"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderCustomFormsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderCustomFormsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderCustomFormsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderCustomFormsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/customforms/customform/{InsuranceId}/{SalesOrderId}/{PatientId}": {
      "get": {
        "tags": [
          "SalesOrderCustomForms"
        ],
        "parameters": [
          {
            "name": "InsuranceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SalesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/general/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "summary": "get sales order general by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {SalesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/general/create-salesorder-by-patientId": {
      "post": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "summary": "Create salesorder from patientId",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/general/create-salesorder-from-intake": {
      "post": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/general/save": {
      "post": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/general/UpdateSalesOrderByInput": {
      "post": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateSalesOrderByInputModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateSalesOrderByInputModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateSalesOrderByInputModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.UpdateSalesOrderByInputModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/general/patientsave": {
      "post": {
        "tags": [
          "SalesOrderGeneral"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPatientModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPatientModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPatientModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPatientModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/general/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderGeneralTemplate"
        ],
        "summary": "get sales order template general by salesOrdertemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/general/save": {
      "post": {
        "tags": [
          "SalesOrderGeneralTemplate"
        ],
        "summary": "save sales order general in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "summary": "get sales order insurance by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/save": {
      "post": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "summary": "save sales order insurance in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/add-adjustor-for-sales-order-insurance": {
      "post": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/delete-adjustor-for-sales-order-insurance": {
      "post": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/GetUnAddedSalesOrderInsurance/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/insurance/add-salesorder-insurance": {
      "post": {
        "tags": [
          "SalesOrderInsurance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.AddSalesOrderInsurance"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.AddSalesOrderInsurance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.AddSalesOrderInsurance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.AddSalesOrderInsurance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/product/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "get sales order product by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/detail/{salesOrderDetailId}": {
      "get": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "get sales order product by salesOrderDetailId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderDetailId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderDetailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/save": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "save sales order product in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/UpdatePriceOptionName": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "update price option name in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "optionName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/GetProductPricingDetail": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "get product pricing detail from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductPricingParameterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductPricingParameterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductPricingParameterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductPricingParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/GetSalesOrderProductPriceOptions": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SalesOrderProductPriceOptionsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SalesOrderProductPriceOptionsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SalesOrderProductPriceOptionsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.SalesOrderProductPriceOptionsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/delete/{salesOrderDetailIds}": {
      "delete": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "delete sales order detail by salesOrderDetailId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {salesOrderDetailId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Sales Order Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderDetailIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/product/savebundle": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/bundle-product-default-value-get": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.BundleProductDefaultValueGetModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.BundleProductDefaultValueGetModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.BundleProductDefaultValueGetModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.BundleProductDefaultValueGetModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/DetailWithSupplier/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderProduct"
        ],
        "summary": "sales order detail with supplier by salesorderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order/product/product-link-to-par": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PARProductLinkModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PARProductLinkModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PARProductLinkModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PARProductLinkModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/updateSOPricing": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPricingUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPricingUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPricingUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderPricingUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order/product/update-SalesOrder-resupply-template": {
      "post": {
        "tags": [
          "SalesOrderProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResupplyTemplateUpdate"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResupplyTemplateUpdate"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResupplyTemplateUpdate"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderResupplyTemplateUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "get all sales order from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "SalesOrderTemplateIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTemplateIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IntervalTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IntervalTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsVoid",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedByNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsCmnExist",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "salesOrderTemplateNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesOrderTemplateNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PeriodsRunExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PeriodsRunValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/void": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "void sales order in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    {\r\n      \"salesOrderId\": 5,\r\n      \"isVoid\": true,\r\n      \"salesOrderVoidReasonId\": 1\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Sales order successfully converted to void\",\r\n        \"data\": {\r\n            \"isVoid\": true\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateVoidModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateVoidModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateVoidModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateVoidModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/save-salesorder-to-salesordertemplate": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "save sales order template in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    {\r\n      \"salesOrderId\": 5,\r\n      \"isVoid\": true,\r\n      \"salesOrderVoidReasonId\": 1\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Sales order successfully converted to void\",\r\n        \"data\": {\r\n            \"isVoid\": true\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-all-template/{salesOrderId}": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "get sales order template clinical by salesOrderTemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/copy-sales-order-template": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "copy sales order template clinical by salesOrderTemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/manual-generate-sales-order": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "copy sales order template clinical by salesOrderTemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/setting/get/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "get all sales order from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/setting/save": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "save sales order template in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    {\r\n      \"salesOrderId\": 5,\r\n      \"isVoid\": true,\r\n      \"salesOrderVoidReasonId\": 1\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"Sales order successfully converted to void\",\r\n        \"data\": {\r\n            \"isVoid\": true\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSettingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-all-linked-sales-orders/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "summary": "get all sales order from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-salesorder-template-linked-salesorders": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "parameters": [
          {
            "name": "SalesOrderTemplateIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTemplateIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StatusNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IntervalTypeNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IntervalTypeNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WipStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DueDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsVoid",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsConfirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedByNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsCmnExist",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "salesOrderTemplateNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesOrderTemplateNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PeriodsRunExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PeriodsRunValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FacilityNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-salesorder-template-product-schedule": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "parameters": [
          {
            "name": "SalesOrderTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEveryExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEveryValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-procedurschedule-list": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "parameters": [
          {
            "name": "ProcedureCodeDMECategoryScheduleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "BillingPeriod",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEvery",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BillingUntil",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProcedureCodeDMECategoryScheduleIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeDMECategoryScheduleIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingPeriodValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProcedureCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingUntilValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEveryExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillingEveryValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/get-procedure-schedule-get-by-id/{procedureCodeDMECategoryScheduleId}": {
      "get": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "parameters": [
          {
            "name": "procedureCodeDMECategoryScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/save-ProdecureCode-DMECategory-Schedule": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.ProcedureScheduleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.ProcedureScheduleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.ProcedureScheduleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.ProcedureScheduleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/save-salesorder-to-salesordertemplate-with-procedurecode": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/delete-procedure-code-schedule/{dmeCategoryProcedureCodeScheduleId}": {
      "delete": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "parameters": [
          {
            "name": "dmeCategoryProcedureCodeScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/create-salesorder-template-by-patientId": {
      "post": {
        "tags": [
          "SalesOrderTemplate"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/clinical/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderTemplateClinical"
        ],
        "summary": "get sales order template clinical by salesOrderTemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/clinical/save": {
      "post": {
        "tags": [
          "SalesOrderTemplateClinical"
        ],
        "summary": "save salesorder in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateClinicalModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateClinicalModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateClinicalModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateClinicalModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/insurance/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderTemplateInsurance"
        ],
        "summary": "get sales order insurance by salesOrderId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/insurance/save": {
      "post": {
        "tags": [
          "SalesOrderTemplateInsurance"
        ],
        "summary": "save sales order template insurance in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/{salesOrderTemplateId}": {
      "get": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "summary": "get sales order template product by salesOrderTemplateId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/detail/{salesOrderTemplateDetailId}": {
      "get": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "summary": "get sales order product by salesOrderTemplateDetailId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {salesOrderTemplateDetailId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateDetailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/save": {
      "post": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "summary": "save sales order template product in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/delete/{salesOrderTemplateDetailIds}": {
      "delete": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "summary": "delete sales order template detail by salesOrderTemplateDetailIds.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {salesOrderTemplateDetailIds}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Sales Order Template Product successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderTemplateDetailIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/GetProductPricingDetail": {
      "post": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductPricingParameterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductPricingParameterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductPricingParameterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductPricingParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-template/product/get-sales-Order-template-by-product": {
      "get": {
        "tags": [
          "SalesOrderTemplateProduct"
        ],
        "parameters": [
          {
            "name": "SalesOrderTemplateIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTemplateIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "PatientExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuantityValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StockingUOMNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CptCodeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResupplyTemplateNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PriceTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsHold",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ActiveExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActiveValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDeliveryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActualDeliveryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NextRunDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/sales-order-void-reason": {
      "get": {
        "tags": [
          "SalesOrderVoidReason"
        ],
        "summary": "get sales order void reasons ifrom a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "SalesOrderVoidReason"
        ],
        "summary": "save sales order void reasons in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SalesOrderVoidReasonModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SalesOrderVoidReasonModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SalesOrderVoidReasonModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SalesOrderVoidReasonModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/sales-order-void-reason/{salesOrderVoidReasonId}": {
      "delete": {
        "tags": [
          "SalesOrderVoidReason"
        ],
        "summary": "delete sales order void reasons by salesOrderVoidReasonId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {salesOrderVoidReasonId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"SalesOrderVoidReason successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "salesOrderVoidReasonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/sales-order-worklist": {
      "get": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "summary": "get all sales order work list from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowTimeInSecondExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowTimeInSecondValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BillAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InsuranceNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScheduleDeliveryDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScheduleDeliveryDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DuedateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DuedateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignToNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderStatusExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderStatusValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedOnExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedOnValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFilterValidation",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AssignedToUserIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderTypeValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-worklist/summary": {
      "get": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "summary": "get all sales order work list summary from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "WorkFlowNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrdersExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrdersValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OldestDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OldestDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AvgTimeInStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AvgTimeInStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxTimeInStateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxTimeInStateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TotalAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TotalAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TotalContractAmountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TotalContractAmountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowFilter",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-worklist/clear-ownership": {
      "post": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "summary": "clear owership sales order by SalesOrderId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-worklist/update-assignTo": {
      "post": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "summary": "update owership sales order by SalesOrderId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-worklist/update-workflowstate": {
      "post": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "summary": "update AssignToWorkFlow State sales order by SalesOrderId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sales-order-worklist/get-salesOrder-productWorkFlow-history": {
      "get": {
        "tags": [
          "SalesOrderWorkList"
        ],
        "parameters": [
          {
            "name": "ProductWorkFlowGeneralIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductWorkFlowGeneralIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderCountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SalesOrderCountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowStepCountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowStepCountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowProductCountExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkFlowProductCountValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DescriptionValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedByValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/{branchId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "get deposit from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/appointment/save": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Save Schedule Appointment detail in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Schedule Appointment successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentModelList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentModelList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentModelList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentModelList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/schedule/appointment/{scheduleAppointmentId}/{type}": {
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "delete Schedule Appointment by facilityGroupId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {scheduleAppointmentId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Schedule Appointment successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "scheduleAppointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/schedule/appointment/get-all": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "get Schedule Appointmen from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Appointment Cancellation Service found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentFilterModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentFilterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentFilterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentFilterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/schedule/appointment/get-by-id/{scheduleAppointmentId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "get deposit from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "scheduleAppointmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/patient-appointment/{patientId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "get deposit from a system.",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/serial-number": {
      "get": {
        "tags": [
          "SerialNumber"
        ],
        "summary": "get supplier by supplierId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {supplierId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Supplier found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "ProductSerialNumberId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SerialNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SerialNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssetNumberExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssetNumberValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProductNameValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryCreatedDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryCreatedDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OnHandExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OnHandValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OnRentExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OnRentValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CommittedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CommittedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SoldOrAdjustedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SoldOrAdjustedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchAddressExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchAddressValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFaxExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFaxValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionBranchExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "InventoryTransactionBranchValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsIntakeCommittedExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsIntakeCommittedValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/serial-number/save": {
      "post": {
        "tags": [
          "SerialNumber"
        ],
        "summary": "save supplier in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Supplier successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SerialNumberSave"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SerialNumberSave"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SerialNumberSave"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SerialNumberSave"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/serial-number/history/{productSerialNumberId}": {
      "get": {
        "tags": [
          "SerialNumber"
        ],
        "summary": "get supplier by supplierId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {supplierId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Supplier found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productSerialNumberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/serial-number/all-history/{productSerialNumberId}": {
      "get": {
        "tags": [
          "SerialNumber"
        ],
        "summary": "get supplier by supplierId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {productSerialNumberId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Supplier found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "productSerialNumberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/serial-number/searchSerialNumbers": {
      "post": {
        "tags": [
          "SerialNumber"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.GetSerialNumberModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.GetSerialNumberModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.GetSerialNumberModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.GetSerialNumberModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/size": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get Size by from a system.",
        "description": "Sample request:\r\n            \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"1 records found\",\r\n        \"data\": {\r\n           \"GetSizes\": [\r\n        {\r\n        \"SizeId\": 1,\r\n        \"Size\": \"XS\",\r\n        \"notes\": null,\r\n             }\r\n          ]\r\n         }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Size"
        ],
        "summary": "Save AccountType in a system",
        "description": "Sample request:\r\n\r\n     {    \r\n         \"accountTypeId\":6,\r\n         \"code\":null,\r\n         \"notes\":\"asdasd\",\r\n         \"name\":\"test account \",\r\n         \"noOfDaysAfterToFollowUp\":null,\r\n         \"accountOwnerId\":null,\r\n         \"isEditing\":false\r\n     }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\":200,\r\n        \"status\":\"Ok\",\r\n        \"message\":\"Account Type successfully saved\",\r\n        \"data\":{\"accountTypeId\":6,\"isSuccess\":true}\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SizeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SizeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SizeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SizeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/size/{SizeId}": {
      "delete": {
        "tags": [
          "Size"
        ],
        "summary": "Delete AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {accountTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"AccountType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "sizeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/specialty-practice/{specialtyId}": {
      "get": {
        "tags": [
          "SpecialtyPractice"
        ],
        "summary": "get speciality practice by specialityId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {specialityId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "specialtyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "SpecialtyPractice"
        ],
        "summary": "delete speciality practice by specialityId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {specialtyId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"SpecialtyPractice successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "specialtyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/specialty-practice": {
      "post": {
        "tags": [
          "SpecialtyPractice"
        ],
        "summary": "save speciality practice in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"SpecialtyPractice successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SpecialtyPracticeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SpecialtyPracticeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SpecialtyPracticeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SpecialtyPracticeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/specialty-practice/search-by-key": {
      "get": {
        "tags": [
          "SpecialtyPractice"
        ],
        "summary": "get speciality practice by key.",
        "description": "Sample request:\r\n            \r\n    HttpGet {key}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/state/get-us-states": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "get us states from a system.",
        "description": "Sample request:\r\n            \r\n    HttpGet api/v1/master/state/get-us-states\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"States found\",\r\n        \"data\": [\r\n        ]\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/style": {
      "get": {
        "tags": [
          "Style"
        ],
        "summary": "Get AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET accountTypeId\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": 200,\r\n        \"status\": \"Ok\",\r\n        \"message\": \"1 records found\",\r\n        \"data\": {\r\n           \"GetStyles\": [\r\n        {\r\n        \"StyleId\": 1,\r\n        \"Style\": \"Narrow\",\r\n             }\r\n          ]\r\n         }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Style"
        ],
        "summary": "Save AccountType in a system",
        "description": "Sample request:\r\n\r\n     {    \r\n         \"accountTypeId\":6,\r\n         \"code\":null,\r\n         \"notes\":\"asdasd\",\r\n         \"name\":\"test account \",\r\n         \"noOfDaysAfterToFollowUp\":null,\r\n         \"accountOwnerId\":null,\r\n         \"isEditing\":false\r\n     }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\":200,\r\n        \"status\":\"Ok\",\r\n        \"message\":\"Account Type successfully saved\",\r\n        \"data\":{\"accountTypeId\":6,\"isSuccess\":true}\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.StyleModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.StyleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.StyleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.StyleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/style/{StyleId}": {
      "delete": {
        "tags": [
          "Style"
        ],
        "summary": "Delete AccountType by accountTypeId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {accountTypeId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"AccountType successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "styleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "get supplier list from a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Supplier found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "save supplier in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"Supplier successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SupplierModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SupplierModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SupplierModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.SupplierModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/supplier/{supplierId}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "get supplier by supplierId from a system.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {supplierId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Supplier found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "delete supplier by supplierId from a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {supplierId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"Supplier successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/supplierproduct/supplierproductslist": {
      "get": {
        "tags": [
          "SupplierProduct"
        ],
        "parameters": [
          {
            "name": "supplierid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplierproduct/supplierproductslistbyname": {
      "get": {
        "tags": [
          "SupplierProduct"
        ],
        "parameters": [
          {
            "name": "supplierid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplierproduct/getsupplier": {
      "get": {
        "tags": [
          "SupplierProduct"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplierproduct/savesupplierproductitem": {
      "post": {
        "tags": [
          "SupplierProduct"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SupplierProduct.Models.SupplierProductSaveModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SupplierProduct.Models.SupplierProductSaveModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SupplierProduct.Models.SupplierProductSaveModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SupplierProduct.Models.SupplierProductSaveModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-tasks/list": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "get task by List",
        "description": "Sample request:\r\n            \r\n    HttpGet {taskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-tasks/save": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "save task in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaskViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaskViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaskViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaskViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-tasks/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "get task by taskId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {taskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "delete task by taskId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/tax-zone/{taxZoneId}": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "get tax zone by taxZoneId.",
        "description": "Sample request:\r\n            \r\n    HTTPGET {taxZoneId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"TaxZone found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "taxZoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TaxZone"
        ],
        "summary": "delete tax zone by taxZoneId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {taxZoneId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"TaxZone successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "taxZoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/tax-zone": {
      "post": {
        "tags": [
          "TaxZone"
        ],
        "summary": "save tax zone in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"TaxZone successfully inserted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaxZoneModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaxZoneModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaxZoneModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TaxZoneModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-teams/list": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "get team by teamId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {teamId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-teams/save": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "save team in a system",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TeamViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TeamViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TeamViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.TeamViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/claim-teams/{teamId}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "get team by teamId.",
        "description": "Sample request:\r\n            \r\n    HttpGet {teamId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "delete team by teamId in a system.",
        "description": "Sample request:\r\n            \r\n    HttpDelete \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-teams/member-search/{searchKey}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "get member by key.",
        "description": "Sample request:\r\n            \r\n    HttpGet {routineId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "searchKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master/claim-teams/get-team-employee-by-followUpTaskId/{followUpTaskId}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "get-team-employee-by-followUpTaskId",
        "description": "Sample request:\r\n            \r\n    HttpGet {followUpTaskId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "followUpTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/two-way-sms/fetch-sms-thread/{patientId}": {
      "get": {
        "tags": [
          "TwoWaySms"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/two-way-sms/fetch-recent-unread": {
      "get": {
        "tags": [
          "TwoWaySms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/two-way-sms/fetch-incoming-unread-count": {
      "get": {
        "tags": [
          "TwoWaySms"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/two-way-sms/send-sms-on-demand": {
      "post": {
        "tags": [
          "TwoWaySms"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.TwoWaySms.Controllers.TwoWaySmsController+SmsOnDemandModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.TwoWaySms.Controllers.TwoWaySmsController+SmsOnDemandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.TwoWaySms.Controllers.TwoWaySmsController+SmsOnDemandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.TwoWaySms.Controllers.TwoWaySmsController+SmsOnDemandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/two-way-sms/mark-unread": {
      "post": {
        "tags": [
          "TwoWaySms"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/unapplied-payment/patient-list": {
      "get": {
        "tags": [
          "UnappliedPayment"
        ],
        "summary": "get Payment posting invoces",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "PatientNameIdExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientNameIdValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateExp",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BirthDateValue",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdjustmentGroupTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DriverId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/unapplied-payment/sales-order-info/{patientId}": {
      "get": {
        "tags": [
          "UnappliedPayment"
        ],
        "summary": "get Payment posting invoces",
        "description": "Sample request:\r\n            \r\n     HttpGet \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ups/address-validation": {
      "post": {
        "tags": [
          "UPS"
        ],
        "summary": "Validates address details  for shipping in UPS api.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.XavRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.XavRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.XavRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.XavRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ups/rating-package": {
      "post": {
        "tags": [
          "UPS"
        ],
        "summary": "Get the details of ratings and package shipment.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RatingsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RatingsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RatingsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RatingsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ups/tracking-request": {
      "post": {
        "tags": [
          "UPS"
        ],
        "summary": "Tracks the request of the package.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ups/simple-shipping": {
      "post": {
        "tags": [
          "UPS"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UpsShipmentModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UpsShipmentModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UpsShipmentModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UpsShipmentModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ups/void-shipping": {
      "post": {
        "tags": [
          "UPS"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/ups/get-ups-api-url": {
      "get": {
        "tags": [
          "UPS"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/authenticate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Check user credential and authenticate user for login.",
        "description": "Sample request:\r\n            \r\n    GET /api/v1/user/authenticate?username=sanket@gmail.com&password=123\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Login successfull.\",\r\n        \"data\": {\r\n            \"isSuccess\": true,\r\n            \"patient\": {\r\n                \"userID\": 1,\r\n                \"firstName\": \"sanket\",\r\n                \"middleName\": null,\r\n                \"lastName\": null,\r\n                \"emailAddress\": \"sanket@gmail.com\",\r\n                \"phone\": \"923823823\",\r\n                \"currentToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJuYmYiOjE1MjY5NTkxODEsImV4cCI6MTUyNzU2Mzk4MSwiaWF0IjoxNTI2OTU5MTgxfQ.Yee2lK-r9uzc1ObskjbnOEw5Z-Jy4p68IAMLeCAXCLw\"\r\n            }\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/driver-authenticate": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Check user credential and authenticate user for login.",
        "description": "Sample request:\r\n            \r\n    GET /api/v1/user/authenticate?username=sanket@gmail.com&password=123\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Login successfull.\",\r\n        \"data\": {\r\n            \"isSuccess\": true,\r\n            \"patient\": {\r\n                \"userID\": 1,\r\n                \"firstName\": \"sanket\",\r\n                \"middleName\": null,\r\n                \"lastName\": null,\r\n                \"emailAddress\": \"sanket@gmail.com\",\r\n                \"phone\": \"923823823\",\r\n                \"currentToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJuYmYiOjE1MjY5NTkxODEsImV4cCI6MTUyNzU2Mzk4MSwiaWF0IjoxNTI2OTU5MTgxfQ.Yee2lK-r9uzc1ObskjbnOEw5Z-Jy4p68IAMLeCAXCLw\"\r\n            }\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/driver-branches/{employeeId}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/refresh-token": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/branches-defaultinventorybranch/{defaultInventoryBranchId}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "defaultInventoryBranchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/verify": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Check user credential and authenticate user for login.",
        "description": "Sample request:\r\n            \r\n    GET /api/v1/user/authenticate?username=sanket@gmail.com&password=123\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Login successfull.\",\r\n        \"data\": {\r\n            \"isSuccess\": true,\r\n            \"patient\": {\r\n                \"userID\": 1,\r\n                \"firstName\": \"sanket\",\r\n                \"middleName\": null,\r\n                \"lastName\": null,\r\n                \"emailAddress\": \"sanket@gmail.com\",\r\n                \"phone\": \"923823823\",\r\n                \"currentToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJuYmYiOjE1MjY5NTkxODEsImV4cCI6MTUyNzU2Mzk4MSwiaWF0IjoxNTI2OTU5MTgxfQ.Yee2lK-r9uzc1ObskjbnOEw5Z-Jy4p68IAMLeCAXCLw\"\r\n            }\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register the user.",
        "description": "Sample request:\r\n            \r\n    POST /api/v1/user/register\r\n    {\r\n        \"Email\": \"abc@xyz.com\";\r\n        \"Password\": \"123\";\r\n        \"FullName\": \"abc xyz\";\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"201\",\r\n        \"status\": \"created\",\r\n        \"message\": \"User Successfully Registered.\",\r\n        \"data\": {\r\n            \"userID\": 8\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/forgot-password": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "To send a reset password link to user's email address in case of forget password.",
        "description": "Sample request:\r\n            \r\n    GET /user/forget-password/public\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Password reset link successfully sent to dharmrajsinh.thakur@arhamtechnosoft.co.in\",\r\n        \"data\": {\r\n            \"email_sent_on\": \"dharmrajsinh.thakur@arhamtechnosoft.co.in\"\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change or reset password of user.",
        "description": "Sample request:\r\n            \r\n    GET /user/change-password\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Password Successfully Changed\",\r\n        \"data\": {\r\n            \"email_sent_on\": \"dharmrajsinh.thakur@arhamtechnosoft.co.in\"\r\n        }\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordChangeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/VerifyToken": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Check currentToken verification.",
        "description": "Sample request:\r\n            \r\n    GET /api/v1/user/VerifyToken?currentToken=dsfdsf+sfsfd+df\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Token verified\",\r\n        \"data\": {\r\n            \"isSuccess\": true\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/VerifyCode": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset the user password.",
        "description": "Sample request:\r\n            \r\n    POST /api/v1/user/VerifyCode\r\n    {\r\n        \"Token\": \"ZMqUrPZC1kiA9ToCnSNDTLFvsNZIFJnR\";\r\n        \"UserName\": \"123\";\r\n        \"Code\": \"123\";\r\n        \"PhoneNumber\":\"9427537033\"\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"Security code verified.\",\r\n        \"data\": {\r\n            isSuccess = true,\r\n            user = new\r\n            {\r\n                user.UserId,\r\n                user.FullName,\r\n                user.Email,\r\n                user.UserName,\r\n                user.TwoFactorEnabled,\r\n                user.PhoneNumber,\r\n                currentToken\r\n            }\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TwoFactorTokenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TwoFactorTokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TwoFactorTokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TwoFactorTokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset the user password.",
        "description": "Sample request:\r\n            \r\n    POST /api/v1/user/resetpassword\r\n    {\r\n        \"Token\": \"ZMqUrPZC1kiA9ToCnSNDTLFvsNZIFJnR\";\r\n        \"Password\": \"123\";\r\n        \"ConfirmPassword\": \"123\";\r\n    }\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"Success\",\r\n        \"message\": \"User password changed successfully.\",\r\n        \"data\": {\r\n            \"isSuccess\": true\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordInfoModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Models.PasswordInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/get-permissions/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get user permission by userId.",
        "description": "Sample request:\r\n            \r\n    HttpGet api/v1/user/get-permissions\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"Permission list found.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout and destroy tokens of user.",
        "description": "Sample request:\r\n            \r\n    \r\nSample response:",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/authenticationToken": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login in the ability account",
        "description": "Sample request:\r\n            \r\n    \r\nSample response:",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserAuth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/user-branch-list": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/SendOtp": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.OtpSendRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.OtpSendRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.OtpSendRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.OtpSendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/user/resend-otp": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.ResendOTPRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.ResendOTPRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.ResendOTPRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.ResendOTPRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usersetting/{userId}/{branchId}": {
      "get": {
        "tags": [
          "UserSetting"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usersetting/user_setting/save": {
      "post": {
        "tags": [
          "UserSetting"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserSettingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserSettingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserSettingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserSettingModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnauthorizeAccess"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseNotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseUnprocessableEntity"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseOk"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAPI.Models.ResponseException"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usps/address-validation-request": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Sends address details for validation to usps server.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.AddressViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.AddressViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.AddressViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.AddressViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/track-request": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Tracks the  request.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.TrackerRequestModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.TrackerRequestModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.TrackerRequestModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.TrackerRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/package-pickup": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Sends details to pickup the package delivery.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.PackagePickUpModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.PackagePickUpModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.PackagePickUpModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.PackagePickUpModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/hold-pickup": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Hold for pickup facilities",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.HFPFacilityModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.HFPFacilityModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.HFPFacilityModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.HFPFacilityModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/domestic-mail-service": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Performs mail services for domestic mail.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.DomesticMailServiceStandardModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.DomesticMailServiceStandardModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.DomesticMailServiceStandardModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.DomesticMailServiceStandardModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/evs-label": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Send request for Evs certfication.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.EvsLabelModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.EvsLabelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.EvsLabelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.EvsLabelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/usps/rateV4": {
      "post": {
        "tags": [
          "USPS"
        ],
        "summary": "Request to get rates for service.",
        "description": "Sample request:\r\n            \r\n     HttpPost {active}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.RateCalculator"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.RateCalculator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.RateCalculator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.RateCalculator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/work-in-progress-state": {
      "get": {
        "tags": [
          "WorkInProgressState"
        ],
        "summary": "get list of work in progress state.",
        "description": "Sample request:\r\n            \r\n    HttpPost\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"OK\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "WorkInProgressState"
        ],
        "summary": "save list of work in progress state in a system.",
        "description": "Sample request:\r\n            \r\n    HttpPost \r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"200\",\r\n        \"status\": \"ok\",\r\n        \"message\": \"\",\r\n        \"data\": {\r\n        }\r\n    }",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.WorkInProgressStateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.WorkInProgressStateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.WorkInProgressStateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.WorkInProgressStateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/master/work-in-progress-state/{workInProgressStateId}": {
      "delete": {
        "tags": [
          "WorkInProgressState"
        ],
        "summary": "delete list of work in progress state by workInProgressStateId.",
        "description": "Sample request:\r\n            \r\n    HttpDelete {workInProgressStateId}\r\n    \r\nSample response:\r\n\r\n    {\r\n        \"code\": \"202\",\r\n        \"status\": \"accepted\",\r\n        \"message\": \"WorkInProgressState successfully deleted.\",\r\n        \"data\": {\r\n        }\r\n    }",
        "parameters": [
          {
            "name": "workInProgressStateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/create-request": {
      "post": {
        "tags": [
          "ZendeskClient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Zendesk.Models.RequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Zendesk.Models.RequestBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Zendesk.Models.RequestBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Areas.Zendesk.Models.RequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/file": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/fetch-distribution-faq": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "pageNo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/fetch-release-notes": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/fetch-past-requests/{email}": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/search-kb/{search}": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/get-request-thread/{id}": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/upload-file": {
      "post": {
        "tags": [
          "ZendeskClient"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/update-user-reset": {
      "post": {
        "tags": [
          "ZendeskClient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/update-user-setup": {
      "post": {
        "tags": [
          "ZendeskClient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUserNew"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUserNew"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUserNew"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebAPI.Zendesk.UpdateZenUserNew"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/mark-resolved": {
      "post": {
        "tags": [
          "ZendeskClient"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/zendesk/get-known-issues/{clientId}": {
      "get": {
        "tags": [
          "ZendeskClient"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.OkResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.Http.HttpContent": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.Http.HttpMethod": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.Http.HttpRequestMessage": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionPolicy": {
            "$ref": "#/components/schemas/System.Net.Http.HttpVersionPolicy"
          },
          "content": {
            "$ref": "#/components/schemas/System.Net.Http.HttpContent"
          },
          "method": {
            "$ref": "#/components/schemas/System.Net.Http.HttpMethod"
          },
          "requestUri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "options": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.Http.HttpResponseMessage": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "$ref": "#/components/schemas/System.Net.Http.HttpContent"
          },
          "statusCode": {
            "$ref": "#/components/schemas/System.Net.HttpStatusCode"
          },
          "reasonPhrase": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true,
            "readOnly": true
          },
          "trailingHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true,
            "readOnly": true
          },
          "requestMessage": {
            "$ref": "#/components/schemas/System.Net.Http.HttpRequestMessage"
          },
          "isSuccessStatusCode": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "System.Net.Http.HttpVersionPolicy": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.Net.HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32"
      },
      "WebAPI.Areas.ABN.Models.ABNModel": {
        "type": "object",
        "properties": {
          "abnProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "abnTypeId": {
            "type": "string",
            "nullable": true
          },
          "identificationNumber": {
            "type": "string",
            "nullable": true
          },
          "option": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updateMode": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "contractAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ABN.Models.PrintABNModel": {
        "type": "object",
        "properties": {
          "abnProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AbilityCSI.Models.AbilityCMNDetail": {
        "type": "object",
        "properties": {
          "procedureCodeDMECategoryId": {
            "type": "string",
            "nullable": true
          },
          "patientInsuranceId": {
            "type": "integer",
            "format": "int64"
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AbilityCSI.Models.AbilityCSIDetailModel": {
        "type": "object",
        "properties": {
          "abilityCSIDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "loginId": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AccessClaim.Models.ClaimEvenetUpdateRquestModel": {
        "type": "object",
        "properties": {
          "batchIds": {
            "type": "string",
            "nullable": true
          },
          "invoiceIds": {
            "type": "string",
            "nullable": true
          },
          "runAllInvoices": {
            "type": "boolean",
            "nullable": true
          },
          "waitForResult": {
            "type": "boolean",
            "nullable": true
          },
          "delaySeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AccessClaim.Models.ClaimInvoice": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "batchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "abilityTraceId": {
            "type": "string",
            "nullable": true
          },
          "payment": {
            "type": "number",
            "format": "float"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "patientFirstName": {
            "type": "string",
            "nullable": true
          },
          "patientLastName": {
            "type": "string",
            "nullable": true
          },
          "patientMiddleName": {
            "type": "string",
            "nullable": true
          },
          "patientAddress1": {
            "type": "string",
            "nullable": true
          },
          "patientAddress2": {
            "type": "string",
            "nullable": true
          },
          "patientCity": {
            "type": "string",
            "nullable": true
          },
          "patientStateCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "patientZipCode": {
            "type": "string",
            "nullable": true
          },
          "patientDOB": {
            "type": "string",
            "format": "date-time"
          },
          "patientGender": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "patientPhone": {
            "type": "string",
            "nullable": true
          },
          "isPatientConditionRelatedToAutoAccident": {
            "type": "boolean"
          },
          "isPatientConditionRelatedToEmployement": {
            "type": "boolean"
          },
          "isPatientConditionRelatedToOtherAutoAccident": {
            "type": "boolean"
          },
          "isPatientConditionRelatedToPlace": {
            "type": "string",
            "nullable": true
          },
          "dateOfCondition": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer1": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer2": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer3": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer4": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer5": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer6": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer7": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer8": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer9": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer10": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer11": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPointer12": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "integer",
            "format": "int64"
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "insuredInsuranceOrProgramName": {
            "type": "string",
            "nullable": true
          },
          "payerNumber": {
            "type": "string",
            "description": "PayerIdentificationCode",
            "nullable": true
          },
          "claimFilingIndicatorCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priorAuthorizationNumber": {
            "type": "string",
            "nullable": true
          },
          "payerAddress1": {
            "type": "string",
            "nullable": true
          },
          "payerAddress2": {
            "type": "string",
            "nullable": true
          },
          "payerCity": {
            "type": "string",
            "nullable": true
          },
          "payerStateCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "payerZipCode": {
            "type": "string",
            "nullable": true
          },
          "patientRelationshipToInsuredId": {
            "type": "integer",
            "format": "int32"
          },
          "patientRelationshipToInsuredCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "insuredFirstName": {
            "type": "string",
            "nullable": true
          },
          "insuredLastName": {
            "type": "string",
            "nullable": true
          },
          "insuredMiddleName": {
            "type": "string",
            "nullable": true
          },
          "insuredDOB": {
            "type": "string",
            "format": "date-time"
          },
          "insuredPhone": {
            "type": "string",
            "nullable": true
          },
          "insuredEmail": {
            "type": "string",
            "nullable": true
          },
          "insuredGender": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "insuredPolicyNumber": {
            "type": "string",
            "nullable": true
          },
          "insuredGroupNumber": {
            "type": "string",
            "nullable": true
          },
          "insuredAddress1": {
            "type": "string",
            "nullable": true
          },
          "insuredAddress2": {
            "type": "string",
            "nullable": true
          },
          "insuredCity": {
            "type": "string",
            "nullable": true
          },
          "insuredStateCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "insuredZipCode": {
            "type": "string",
            "nullable": true
          },
          "insuredEmployerOrSchoolName": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredPayerId": {
            "type": "integer",
            "format": "int32"
          },
          "otherInsuredName": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredFirstName": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredLastName": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredMiddleName": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredDOB": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "otherInsuredGender": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "otherInsuredPolicyNumber": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredAddress1": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredAddress2": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredCity": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredStateCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "otherInsuredZipCode": {
            "type": "string",
            "nullable": true
          },
          "otherInsuredEmployerName": {
            "type": "string",
            "nullable": true
          },
          "claimReferralNumber": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "facilityAddress1": {
            "type": "string",
            "nullable": true
          },
          "facilityAddress2": {
            "type": "string",
            "nullable": true
          },
          "facilityCity": {
            "type": "string",
            "nullable": true
          },
          "facilityStateCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "facilityZipCode": {
            "type": "string",
            "nullable": true
          },
          "facilityNPI": {
            "type": "string",
            "nullable": true
          },
          "billTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "reservedForLocalUse19": {
            "type": "string",
            "nullable": true
          },
          "placeofServiceId": {
            "type": "integer",
            "format": "int64"
          },
          "referringProviderId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceProducts": {
            "type": "string",
            "nullable": true
          },
          "isEditBatchClaim": {
            "type": "boolean"
          },
          "isBatchSubmitted": {
            "type": "boolean"
          },
          "isRejectedClaimEdit": {
            "type": "boolean"
          },
          "medicaidResubmissionCode": {
            "type": "string",
            "nullable": true
          },
          "medicaidResubmissionOrgRefNo": {
            "type": "string",
            "nullable": true
          },
          "acceptsPaperClaims": {
            "type": "string",
            "nullable": true
          },
          "acceptsElectronicClaims": {
            "type": "string",
            "nullable": true
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payerSubmissionType": {
            "type": "string",
            "nullable": true
          },
          "enableSalesOrderDetailsUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "clientKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AccessClaim.Models.PostClaimModel": {
        "type": "object",
        "properties": {
          "invoiceBatchId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isMarkAsManualSubmitted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AccessClaim.Models.UpdateClaimModel": {
        "type": "object",
        "properties": {
          "invoiceBatchId": {
            "type": "integer",
            "format": "int64"
          },
          "claimId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.AccessClaim.Models.ValidateClaimModel": {
        "type": "object",
        "properties": {
          "invoiceBatchId": {
            "type": "integer",
            "format": "int64"
          },
          "claimId": {
            "type": "string",
            "nullable": true
          },
          "release": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Batch.Models.BatchModel": {
        "type": "object",
        "properties": {
          "claimSubmitterId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "insuranceCompanyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "excludeZeroBalanceCharges": {
            "type": "boolean",
            "nullable": true
          },
          "accountTypeIds": {
            "type": "string",
            "nullable": true
          },
          "acceptsElectronicClaims": {
            "type": "boolean"
          },
          "acceptsPaperClaims": {
            "type": "boolean"
          },
          "isPatientStatement": {
            "type": "boolean"
          },
          "isBatchCreationFlag": {
            "type": "boolean"
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32"
          },
          "isNotCreate837": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Batch.Models.CareteBatch837": {
        "type": "object",
        "properties": {
          "invoiceBatchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Batch.Models.ChargeReviewCreateBatchModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceids": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "accountTypeIds": {
            "type": "string",
            "nullable": true
          },
          "acceptsElectronicClaims": {
            "type": "boolean"
          },
          "acceptsPaperClaims": {
            "type": "boolean"
          },
          "isPatientStatement": {
            "type": "boolean"
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceGroupIds": {
            "type": "string",
            "nullable": true
          },
          "claimSubmitterId": {
            "type": "string",
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupName": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "payerLevel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.BranchBillingProviderModel": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "State\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Zip\r\n",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone\r\n",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Branch Provider address and contact Info model\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchContactModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "branchContactPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "isDefaultContact": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.BranchCreditCardModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "cC_UserName_PROD": {
            "type": "string",
            "nullable": true
          },
          "cC_Password_PROD": {
            "type": "string",
            "nullable": true
          },
          "cC_UserName_UAT": {
            "type": "string",
            "nullable": true
          },
          "cC_Password_UAT": {
            "type": "string",
            "nullable": true
          },
          "basys_BearerTokenClientSecret_PROD": {
            "type": "string",
            "nullable": true
          },
          "basys_BearerTokenClientId_PROD": {
            "type": "string",
            "nullable": true
          },
          "basys_GatewayId_PROD": {
            "type": "string",
            "nullable": true
          },
          "basys_CCProcessorId_PROD": {
            "type": "string",
            "nullable": true
          },
          "basys_BearerTokenClientSecret_UAT": {
            "type": "string",
            "nullable": true
          },
          "basys_BearerTokenClientId_UAT": {
            "type": "string",
            "nullable": true
          },
          "basys_GatewayId_UAT": {
            "type": "string",
            "nullable": true
          },
          "basys_CCProcessorId_UAT": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.BranchEclaimCarrierModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "branchId\r\n",
            "format": "int64"
          },
          "carrierTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "carrierTypes\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchEclaimCarrierModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchEmployeeModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "linkedUsers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "LinkedUsers\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchEmployeeModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFinanceModel": {
        "type": "object",
        "properties": {
          "financeId": {
            "type": "integer",
            "description": "FinanceId\r\n",
            "format": "int32"
          },
          "bankName": {
            "type": "string",
            "description": "BankName\r\n",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "AccountNumber\r\n",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.BranchFormCmnOrdersModel": {
        "type": "object",
        "properties": {
          "printBranchLogo": {
            "type": "boolean",
            "description": "PrintBranchLogo\r\n"
          },
          "includeInCmnAutoRenewal": {
            "type": "boolean",
            "description": "IncludeInCmnAutoRenewal\r\n"
          },
          "includeInCmnAutoFax": {
            "type": "boolean",
            "description": "IncludeInCmnAutoFax\r\n"
          },
          "physicianTitle": {
            "type": "string",
            "description": "PhysicianTitle\r\n",
            "nullable": true
          },
          "cmnFormTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchFormCmnOrdersModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFormDeliveryTicketModel": {
        "type": "object",
        "properties": {
          "deliveryTicketTemplate": {
            "type": "string",
            "description": "DeliveryTicketTemplate\r\n",
            "nullable": true
          },
          "printAmountsOnDeliveryTickets": {
            "type": "boolean",
            "description": "PrintAmountsOnDeliveryTickets\r\n"
          },
          "printSoItemNoteOnDeliveryTicketAndPatientInvoice": {
            "type": "boolean",
            "description": "PrintSoItemNoteOnDeliveryTicketAndPatientInvoice\r\n"
          }
        },
        "additionalProperties": false,
        "description": "BranchFormDeliveryTicketModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFormModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "taxAndTemplate": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormTaxTemplateModel"
          },
          "deliveryTicket": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormDeliveryTicketModel"
          },
          "pickupTicketTemplate": {
            "type": "string",
            "description": "PickupTicketTemplate\r\n",
            "nullable": true
          },
          "receiptFooterTemplate": {
            "type": "string",
            "description": "ReceiptFooterTemplate\r\n",
            "nullable": true
          },
          "coverSheetTemplate": {
            "type": "string",
            "description": "CoverSheetTemplate\r\n",
            "nullable": true
          },
          "confidentialityTemplate": {
            "type": "string",
            "description": "ConfidentialityTemplate\r\n",
            "nullable": true
          },
          "patientInvoice": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormPatientInvoiceModel"
          },
          "patientStatement": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormPatientStatementModel"
          },
          "cmnOrders": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchFormCmnOrdersModel"
          },
          "deliverySMSTemplates": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.DeliverySMSTemplate"
          },
          "termsAndConditionsTemplate": {
            "type": "string",
            "description": "TermsAndConditionsTemplate\r\n",
            "nullable": true
          },
          "ddpDeliverySMSTemplates": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.DdpDeliverySMSTemplate"
          },
          "mrSoRenewNotificationTemplate": {
            "type": "string",
            "description": "Mr So Renew Notification Template\r\n",
            "nullable": true
          },
          "dropShipmentNotificationTemplete": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.DropShipmentNotificationTempleteModel"
          },
          "mrSoRenewNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.MRSoRenewNotificationsSaveModel"
            },
            "description": "MR So Renew Notification Templete\r\n",
            "nullable": true
          },
          "patientStatementTemplate": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.PatientStatementTemplate"
          }
        },
        "additionalProperties": false,
        "description": "BranchFormModel to save\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFormPatientInvoiceModel": {
        "type": "object",
        "properties": {
          "showChargeOrPaymentDetail": {
            "type": "boolean",
            "description": "ShowChargeOrPaymentDetail\r\n"
          },
          "showPaymentRemittanceFields": {
            "type": "boolean",
            "description": "ShowPaymentRemittanceFields\r\n"
          },
          "showBarCodeOnCms1500Form": {
            "type": "boolean",
            "description": "ShowBarCodeOnCms1500Form\r\n"
          },
          "showZeroChargeItems": {
            "type": "boolean",
            "description": "ShowZeroChargeItems\r\n"
          },
          "envelopeType": {
            "type": "string",
            "description": "EnvelopeType\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchFormPatientInvoiceModels\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFormPatientStatementModel": {
        "type": "object",
        "properties": {
          "statementFormat": {
            "type": "string",
            "description": "StatementFormat\r\n",
            "nullable": true
          },
          "showAgingBuckets": {
            "type": "boolean",
            "description": "ShowAgingBuckets\r\n"
          },
          "calculateDueDate": {
            "type": "boolean",
            "description": "CalculateDueDate\r\n"
          },
          "netDays": {
            "type": "integer",
            "description": "NetDays\r\n",
            "format": "int32",
            "nullable": true
          },
          "notice30Day": {
            "type": "string",
            "description": "Notice30Days\r\n",
            "nullable": true
          },
          "notice60Day": {
            "type": "string",
            "description": "Notice60Day\r\n",
            "nullable": true
          },
          "notice90Day": {
            "type": "string",
            "description": "Notice90Day\r\n",
            "nullable": true
          },
          "notice120Day": {
            "type": "string",
            "description": "Notice120Day\r\n",
            "nullable": true
          },
          "notice120AboveDay": {
            "type": "string",
            "description": "Notice120AboveDay\r\n",
            "nullable": true
          },
          "paymentMethodVisa": {
            "type": "boolean",
            "description": "PaymentMethodVisa\r\n"
          },
          "paymentMethodMasterCard": {
            "type": "boolean",
            "description": "PaymentMethodMasterCard\r\n"
          },
          "paymentMethodAmericalExpress": {
            "type": "boolean",
            "description": "PaymentMethodAmericalExpress\r\n"
          },
          "paymentMethodDiscover": {
            "type": "boolean",
            "description": "PaymentMethodDiscover\r\ns"
          }
        },
        "additionalProperties": false,
        "description": "BranchFormPatientStatementModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchFormTaxTemplateModel": {
        "type": "object",
        "properties": {
          "taxZoneLocation": {
            "type": "string",
            "description": "TaxZoneLocation\r\n",
            "nullable": true
          },
          "taxZoneId": {
            "type": "integer",
            "description": "TaxZoneId\r\n",
            "format": "int32"
          },
          "deliveryTicket": {
            "type": "string",
            "description": "DeliveryTicket\r\n",
            "nullable": true
          },
          "puex": {
            "type": "string",
            "description": "PUEX\r\n",
            "nullable": true
          },
          "quote": {
            "type": "string",
            "description": "Quote\r\n",
            "nullable": true
          },
          "financialNote": {
            "type": "string",
            "description": "FinancialNote\r\n",
            "nullable": true
          },
          "practitionerNote": {
            "type": "string",
            "description": "PractitionerNote\r\n",
            "nullable": true
          },
          "patientNote": {
            "type": "string",
            "description": "PatientNote\r\n",
            "nullable": true
          },
          "patientAccountabilityHistory": {
            "type": "string",
            "description": "PatientAccountabilityHistory\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchFormTemplateModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchGroupModel": {
        "type": "object",
        "properties": {
          "branchGroupId": {
            "type": "integer",
            "description": "BranchGroupId\r\n",
            "format": "int64"
          },
          "branchGroupName": {
            "type": "string",
            "description": "BranchGroupName\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "shortname": {
            "type": "string",
            "description": "Shortname\r\n",
            "nullable": true
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Branches\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.BranchModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "defaultInventoryBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "posLocationId": {
            "type": "integer",
            "description": "PosLocationId\r\n",
            "format": "int64",
            "nullable": true
          },
          "parentCompany": {
            "type": "string",
            "description": "ParentCompany\r\n",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "description": "BranchName\r\n",
            "nullable": true
          },
          "branchNum": {
            "type": "string",
            "nullable": true
          },
          "branchGroups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "BranchGroupId\r\n",
            "nullable": true
          },
          "competitiveBidGroupId": {
            "type": "integer",
            "description": "CompititiveBidGroupId\r\n",
            "format": "int32",
            "nullable": true
          },
          "clia": {
            "type": "string",
            "description": "CLIA\r\n",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "TaxId\r\n",
            "nullable": true
          },
          "taxIdType": {
            "type": "string",
            "description": "TaxIdType\r\n",
            "nullable": true
          },
          "npi": {
            "type": "string",
            "description": "NPI\r\n",
            "nullable": true
          },
          "ptan": {
            "type": "string",
            "description": "PTAN\r\n",
            "nullable": true
          },
          "specialtyPracticeId": {
            "type": "integer",
            "description": "SpecialtyPracticeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "commercialNo": {
            "type": "string",
            "description": "CommercialNo\r\n",
            "nullable": true
          },
          "providerNumber": {
            "type": "string",
            "description": "Provider Number \r\n",
            "nullable": true
          },
          "providerLocation": {
            "type": "string",
            "description": "ProviderLocation\r\n",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active\r\n",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "description": "FacilityId\r\n",
            "format": "int64",
            "nullable": true
          },
          "billingProvider": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchBillingProviderModel"
          },
          "payToProvider": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPayToProviderModel"
          },
          "purchaseOrderSetting": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.PurchaseOrderSettingModel"
          },
          "isDefaultBranch": {
            "type": "boolean"
          },
          "faxSettings": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.FaxSettings"
          },
          "distributionGuidance": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.DistributionGuidance"
          },
          "maintainModal": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "competition": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "faxWranglerSettings": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.FaxWranglerSettings"
          },
          "digitalSignatureSettings": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.DigitalSignatureSettings"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "isAddBranchToUser": {
            "type": "boolean",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "description": "ClientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "claimSubmitterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPayToProviderModel": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "RemitAddress1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "RemitAddress2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "RemitCity\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "RemitStateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "RemitZip\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Branch Pay to provider address Info model\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosCustomerDataRequiredModel": {
        "type": "object",
        "properties": {
          "requireName": {
            "type": "boolean",
            "description": "requireName\r\n",
            "nullable": true
          },
          "requireAddress": {
            "type": "boolean",
            "description": "requireAddress\r\n",
            "nullable": true
          },
          "requireZip": {
            "type": "boolean",
            "description": "requireZip\r\n",
            "nullable": true
          },
          "requireEmail": {
            "type": "boolean",
            "description": "requireEmail\r\n",
            "nullable": true
          },
          "requirePhone": {
            "type": "boolean",
            "description": "requirePhone\r\n",
            "nullable": true
          },
          "requireLast4OfSSN": {
            "type": "boolean",
            "description": "requireLast4OfSSN\r\n",
            "nullable": true
          },
          "requireAccountGroup": {
            "type": "boolean",
            "description": "requireAccountGroup\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchPosCustomerDataRequiredModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "branchId\r\n",
            "format": "int64"
          },
          "recieptRefund": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosRecieptRefundModel"
          },
          "retailReturns": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosRetailReturnsModel"
          },
          "minOpeningBankAmount": {
            "type": "string",
            "description": "minOpeningBankAmount\r\n",
            "nullable": true
          },
          "salesInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosSalesInfoModel"
          },
          "customerDataRequired": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosCustomerDataRequiredModel"
          },
          "payment": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchPosPaymentModel"
          }
        },
        "additionalProperties": false,
        "description": "BranchPosModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosPaymentModel": {
        "type": "object",
        "properties": {
          "allowPaymentsOnPendingInvoices": {
            "type": "string",
            "description": "allowPaymentsOnPendingInvoices\r\n",
            "nullable": true
          },
          "holdPOSInvoices": {
            "type": "string",
            "description": "holdPOSInvoices\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchPosPaymentModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosRecieptRefundModel": {
        "type": "object",
        "properties": {
          "maxNoOfDaysForRefund": {
            "type": "integer",
            "description": "maxNoOfDaysForRefund\r\n",
            "format": "int32",
            "nullable": true
          },
          "maxCashRefundAmount": {
            "type": "number",
            "description": "maxCashRefundAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "printBranchLogo": {
            "type": "boolean",
            "description": "printBranchLogo\r\n",
            "nullable": true
          },
          "printBranchItem": {
            "type": "boolean",
            "description": "printBranchItem\r\n",
            "nullable": true
          },
          "printCustomerName": {
            "type": "boolean",
            "description": "printCustomerName\r\n",
            "nullable": true
          },
          "printTwoCopies": {
            "type": "boolean",
            "description": "printTwoCopies\r\n",
            "nullable": true
          },
          "printStoreCreditRedemptionId": {
            "type": "boolean",
            "description": "printStoreCreditRedemptionId\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchRecieptRefundModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosRetailReturnsModel": {
        "type": "object",
        "properties": {
          "adjustmentForRefund": {
            "type": "string",
            "description": "adjustmentForRefund\r\n",
            "nullable": true
          },
          "adjustmentForStoreCredit": {
            "type": "string",
            "description": "adjustmentForStoreCredit\r\n",
            "nullable": true
          },
          "creditAdjustToSales": {
            "type": "string",
            "description": "creditAdjustToSales\r\n",
            "nullable": true
          },
          "adjustmentForTaxes": {
            "type": "string",
            "description": "adjustmentForTaxes\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchPosRetailReturnsModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchPosSalesInfoModel": {
        "type": "object",
        "properties": {
          "defaultCustomerAssociationId": {
            "type": "string",
            "description": "defaultCustomerAssociationId\r\n",
            "nullable": true
          },
          "creditCardCheckSettings": {
            "type": "string",
            "description": "creditCardCheckSettings\r\n",
            "nullable": true
          },
          "enableGateway": {
            "type": "boolean",
            "description": "enableGateway\r\n",
            "nullable": true
          },
          "requireCreditCardReference": {
            "type": "boolean",
            "description": "requireCreditCardReference\r\n",
            "nullable": true
          },
          "requireCheckNoRef": {
            "type": "boolean",
            "description": "requireCheckNoRef\r\n",
            "nullable": true
          },
          "allowAlphanumericCharactersOnCheck": {
            "type": "boolean",
            "description": "allowAlphanumericCharactersOnCheck\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchPosSalesInfoModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchSystemDefaultsModel": {
        "type": "object",
        "properties": {
          "inventoryDefaultLocationId": {
            "type": "integer",
            "description": "InventoryDefaultLocationId\r\n",
            "format": "int64",
            "nullable": true
          },
          "retailSalesPatient": {
            "type": "integer",
            "description": "RetailSalesPatient\r\n",
            "format": "int64",
            "nullable": true
          },
          "providerNameEligibility": {
            "type": "string",
            "description": "ProviderNameEligibility\r\n",
            "nullable": true
          },
          "pendingCmnAlertsFax": {
            "type": "string",
            "description": "PendingCmnAlertsFax\r\n",
            "nullable": true
          },
          "pendingCmnAlertsPrint": {
            "type": "string",
            "description": "PendingCmnAlertsPrint\r\n",
            "nullable": true
          },
          "salesOrderDefault": {
            "type": "string",
            "description": "SalesOrderDefault\r\n",
            "nullable": true
          },
          "salesOrderProofOfDeliveryContactEmail": {
            "type": "string",
            "description": "SalesOrderDefault\r\n",
            "nullable": true
          },
          "prAdjustAllowable": {
            "type": "string",
            "description": "PrAdjustAllowable\r\n",
            "nullable": true
          },
          "prRefund": {
            "type": "string",
            "description": "PrRefund\r\n",
            "nullable": true
          },
          "prBalanceTransfer": {
            "type": "string",
            "description": "PrBalanceTransfer\r\n",
            "nullable": true
          },
          "prTax": {
            "type": "string",
            "description": "PrTax\r\n",
            "nullable": true
          },
          "prCreditAdjustment": {
            "type": "string",
            "description": "PrCreditAdjustment\r\n",
            "nullable": true
          },
          "prWriteOff": {
            "type": "string",
            "description": "PrWriteOff\r\n",
            "nullable": true
          },
          "prWriteOffAllowable": {
            "type": "string",
            "description": "PrWriteOffAllowable\r\n",
            "nullable": true
          },
          "prDeniel": {
            "type": "string",
            "description": "PrDeniel\r\n",
            "nullable": true
          },
          "prPayment": {
            "type": "string",
            "description": "PrPayment\r\n",
            "nullable": true
          },
          "prRecoupment": {
            "type": "string",
            "description": "PrRecoupment\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchSystemDefaultsModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchSystemErnAdditionalSettingModel": {
        "type": "object",
        "properties": {
          "ernSetupType": {
            "type": "string",
            "description": "ernSetupType\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "name\r\n",
            "nullable": true
          },
          "fieldLabel": {
            "type": "string",
            "description": "fieldLabel\r\n",
            "nullable": true
          },
          "fieldValue": {
            "type": "string",
            "description": "fieldValue\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchSystemErnAdditionalSettingModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchSystemErnSetupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name\r\n",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "description": "paymentType\r\n",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "reason\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchSystemErnSetupModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchSystemModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "branchSystemDefaults": {
            "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemDefaultsModel"
          },
          "medicareErnSetup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemErnSetupModel"
            },
            "description": "MedicalErnSetup\r\n",
            "nullable": true
          },
          "commercialDefaultErnSetup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemErnSetupModel"
            },
            "description": "CommercialDefaultErnSetup\r\n",
            "nullable": true
          },
          "commercialAlternateErnSetup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemErnSetupModel"
            },
            "description": "CommercialDefaultErnSetup\r\n",
            "nullable": true
          },
          "additionalSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchSystemErnAdditionalSettingModel"
            },
            "description": "additionalSettings\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BranchSystemModel\r\n"
      },
      "WebAPI.Areas.Branch.Models.BranchTimingModel": {
        "type": "object",
        "properties": {
          "timingId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "day": {
            "type": "string",
            "nullable": true
          },
          "opened": {
            "type": "boolean"
          },
          "startTimeOfTheDay": {
            "type": "string",
            "format": "date-time"
          },
          "endTimeOfTheDay": {
            "type": "string",
            "format": "date-time"
          },
          "isFirstDayOfTheWeek": {
            "type": "boolean",
            "nullable": true
          },
          "lunchTimeIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lunchTimeOut": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.DdpDeliverySMSTemplate": {
        "type": "object",
        "properties": {
          "ddpResupplyShipmentConfirmationTemplate": {
            "type": "string",
            "nullable": true
          },
          "ddpShipmentConfirmationTemplate": {
            "type": "string",
            "nullable": true
          },
          "ddpShipmentDeliveredTemplate": {
            "type": "string",
            "nullable": true
          },
          "ddpShipmentResupplyReminderTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.DeliverySMSTemplate": {
        "type": "object",
        "properties": {
          "deliveryScheduledTemplate": {
            "type": "string",
            "nullable": true
          },
          "deliveryOnRouteTemplate": {
            "type": "string",
            "nullable": true
          },
          "deliveryCompletedTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.DigitalSignatureSettings": {
        "type": "object",
        "properties": {
          "digitalSignature": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "description": "Signature\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.DistributionGuidance": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          },
          "callerNote": {
            "type": "string",
            "nullable": true
          },
          "branchStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maintainUnit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "selfPayAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isHighPerformance": {
            "type": "boolean",
            "nullable": true
          },
          "isHighPotential": {
            "type": "boolean",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.DropShipmentNotificationTempleteModel": {
        "type": "object",
        "properties": {
          "dropShipmentCreateSMSTemplate": {
            "type": "string",
            "nullable": true
          },
          "dropShipmentCreateMailTemplate": {
            "type": "string",
            "nullable": true
          },
          "dropShipmentDeliveredSMSTemplate": {
            "type": "string",
            "nullable": true
          },
          "dropShipmentDeliveredMailTemplate": {
            "type": "string",
            "nullable": true
          },
          "subjectForShipmentCreateMail": {
            "type": "string",
            "nullable": true
          },
          "subjectForDeliveryCompletedMail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.FaxSettings": {
        "type": "object",
        "properties": {
          "enableFaxSetting": {
            "type": "boolean"
          },
          "faxAccountId": {
            "type": "string",
            "nullable": true
          },
          "faxPassword": {
            "type": "string",
            "nullable": true
          },
          "faxSenderNo": {
            "type": "string",
            "nullable": true
          },
          "faxSenderEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.FaxWranglerSettings": {
        "type": "object",
        "properties": {
          "doNotAssignFaxWrangler": {
            "type": "boolean",
            "nullable": true
          },
          "assignFaxWranglerRRFormat": {
            "type": "boolean",
            "nullable": true
          },
          "assignOneFaxWrangler": {
            "type": "boolean",
            "nullable": true
          },
          "faxWranglerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignFaxWranglerTeam": {
            "type": "boolean",
            "nullable": true
          },
          "faxWranglerTeamId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.MRSoRenewNotificationsSaveModel": {
        "type": "object",
        "properties": {
          "accountTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "emialNotificationTemplate": {
            "type": "string",
            "nullable": true
          },
          "productTemplate": {
            "type": "string",
            "nullable": true
          },
          "mrNotificationId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.PatientStatementTemplate": {
        "type": "object",
        "properties": {
          "headerTextArea": {
            "type": "string",
            "nullable": true
          },
          "importantMessage1TextArea": {
            "type": "string",
            "nullable": true
          },
          "importantMessage2TextArea": {
            "type": "string",
            "nullable": true
          },
          "insuranceInformationTextArea": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodsTextArea": {
            "type": "string",
            "nullable": true
          },
          "importantInformationTextArea": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.PurchaseOrderSettingModel": {
        "type": "object",
        "properties": {
          "contactName": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "contactEmployeeId": {
            "type": "integer",
            "format": "int64"
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "enablePOSetting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Branch Provider address and contact Info model\r\n"
      },
      "WebAPI.Areas.Branch.Models.RemoveMrNotificationModel": {
        "type": "object",
        "properties": {
          "mrNotificationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Branch.Models.UpdateBranchDetailModel": {
        "type": "object",
        "properties": {
          "branchtimingModel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Branch.Models.BranchTimingModel"
            },
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNCertificationInfo": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "initialDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revisedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recertificationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "doctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "doctorSignatureDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "placeOfServiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientInsuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNDignosisCodesInfo": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNGeneralInfo": {
        "type": "object",
        "properties": {
          "cmnStatus": {
            "type": "string",
            "nullable": true
          },
          "cmnTypeId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "autoRenewal": {
            "type": "boolean",
            "nullable": true
          },
          "reviewAutoRenewal": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNGeneralModel": {
        "type": "object",
        "properties": {
          "cmnId": {
            "type": "integer",
            "description": "CMNId\r\n",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int64",
            "nullable": true
          },
          "isRevision": {
            "type": "boolean",
            "description": "IsRevision\r\n",
            "nullable": true
          },
          "generalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNGeneralInfo"
          },
          "sharingInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNSharingInfo"
          },
          "section_A": {
            "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNCertificationInfo"
          },
          "section_B": {
            "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNQuetionsInfo"
          },
          "cmnDignosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNDignosisCodesInfo"
            },
            "description": "cmnDignosisCodes\r\n",
            "nullable": true
          },
          "feeScheduleCMNFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestion": {
        "type": "object",
        "properties": {
          "cmnId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentQuestionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestionList"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNPatientAssessmentQuestionList": {
        "type": "object",
        "properties": {
          "assessmentQuestionId": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assessmentQuestionAnswerText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNProductsInfo": {
        "type": "object",
        "properties": {
          "cmnProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cmnId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "priceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "feeScheduleRef": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNQuetionsInfo": {
        "type": "object",
        "properties": {
          "lengthOfNeed": {
            "type": "string",
            "nullable": true
          },
          "patientPrognosis": {
            "type": "string",
            "nullable": true
          },
          "isQuesAnswered": {
            "type": "boolean",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "employerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNSharingInfo": {
        "type": "object",
        "properties": {
          "faxOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "faxBy": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "faxStatus": {
            "type": "string",
            "nullable": true
          },
          "faxStatusReason": {
            "type": "string",
            "nullable": true
          },
          "printCMN": {
            "type": "boolean",
            "nullable": true
          },
          "faxCMN": {
            "type": "boolean",
            "nullable": true
          },
          "includeCMNCoverLetter": {
            "type": "boolean",
            "nullable": true
          },
          "includeFaxCoverSheet": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNTaskCommentModel": {
        "type": "object",
        "properties": {
          "cmnTaskCommentId": {
            "type": "integer",
            "description": "CMNTaskCommentId\r\n",
            "format": "int64"
          },
          "cmnTaskId": {
            "type": "integer",
            "description": "CMNTaskId\r\n",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Comment\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.CMNTaskModel": {
        "type": "object",
        "properties": {
          "cmnTaskId": {
            "type": "integer",
            "description": "CMNTaskId\r\n",
            "format": "int32"
          },
          "cmnId": {
            "type": "integer",
            "description": "CMNId\r\n",
            "format": "int64"
          },
          "taskReasonId": {
            "type": "string",
            "description": "SupplierId\r\n",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64"
          },
          "severity": {
            "type": "string",
            "description": "Severity\r\n",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "description": "CompletedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "description": "TaskStatus\r\n",
            "nullable": true
          },
          "reminderRequired": {
            "type": "boolean",
            "description": "ReminderRequired\r\n"
          },
          "active": {
            "type": "boolean",
            "description": "Active\r\n"
          },
          "isLocked": {
            "type": "string",
            "description": "TaskLockState\r\n",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Subject\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "isNotifyAssignedTo": {
            "type": "boolean",
            "description": "IsNotifyAssignedTo\r\n"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.PrintCMNModel": {
        "type": "object",
        "properties": {
          "cmnId": {
            "type": "integer",
            "format": "int64"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "formType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CMN.Models.SimplyDMEModel": {
        "type": "object",
        "properties": {
          "cmnId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CallerNotes.Models.AddCallerNoteModel": {
        "type": "object",
        "properties": {
          "callerNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "integer",
            "format": "int64"
          },
          "planBranchId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "callerNote": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CallerNotes.Models.CallerNotesModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "callerNoteId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "planIdExp": {
            "type": "string",
            "nullable": true
          },
          "planIdValue": {
            "type": "string",
            "nullable": true
          },
          "planStartDateExp": {
            "type": "string",
            "nullable": true
          },
          "planStartDateValue": {
            "type": "string",
            "nullable": true
          },
          "planStartDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "planStartDateToValue": {
            "type": "string",
            "nullable": true
          },
          "planEndDateExp": {
            "type": "string",
            "nullable": true
          },
          "planEndDateValue": {
            "type": "string",
            "nullable": true
          },
          "planEndDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "planEndDateToValue": {
            "type": "string",
            "nullable": true
          },
          "branchNameExp": {
            "type": "string",
            "nullable": true
          },
          "branchNameValue": {
            "type": "string",
            "nullable": true
          },
          "branchAddressExp": {
            "type": "string",
            "nullable": true
          },
          "branchAddressValue": {
            "type": "string",
            "nullable": true
          },
          "branchContactNameExp": {
            "type": "string",
            "nullable": true
          },
          "branchContactNameValue": {
            "type": "string",
            "nullable": true
          },
          "branchContactNumberExp": {
            "type": "string",
            "nullable": true
          },
          "branchContactNumberValue": {
            "type": "string",
            "nullable": true
          },
          "availableQuantity": {
            "type": "string",
            "nullable": true
          },
          "maintainUnitsExp": {
            "type": "string",
            "nullable": true
          },
          "maintainUnitsValue": {
            "type": "string",
            "nullable": true
          },
          "highPerformance": {
            "type": "boolean"
          },
          "highPotential": {
            "type": "boolean"
          },
          "numberOfTimesCalled": {
            "type": "string",
            "nullable": true
          },
          "lastCallerNote": {
            "type": "string",
            "nullable": true
          },
          "planStatus": {
            "type": "string",
            "nullable": true
          },
          "branchGroupId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CallerNotes.Models.CompleteCallerNoteModel": {
        "type": "object",
        "properties": {
          "callerNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "planBranchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.CallerNotes.Models.GetCallerNoteModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "planBranchId": {
            "type": "integer",
            "format": "int64"
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateToValue": {
            "type": "string",
            "nullable": true
          },
          "callerNoteExp": {
            "type": "string",
            "nullable": true
          },
          "callerNoteValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement.Models.FollowUpGetModel": {
        "type": "object",
        "properties": {
          "followUpReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "followUpTaskId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dueDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isComplete": {
            "type": "boolean",
            "nullable": true
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "taskNameExp": {
            "type": "string",
            "nullable": true
          },
          "taskNameValue": {
            "type": "string",
            "nullable": true
          },
          "dueDateExp": {
            "type": "string",
            "nullable": true
          },
          "dueDateValue": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "submissionMethodExp": {
            "type": "string",
            "nullable": true
          },
          "submissionMethodValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "creatorExp": {
            "type": "string",
            "nullable": true
          },
          "creatorValue": {
            "type": "string",
            "nullable": true
          },
          "currentUserId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement.Models.InvoiceBatchFilesModel": {
        "type": "object",
        "properties": {
          "invoiceBatchFileId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceBatchId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement.Models.InvoiceGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serviceStartDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serviceStartDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupId": {
            "type": "string",
            "nullable": true
          },
          "payerLevel": {
            "type": "string",
            "nullable": true
          },
          "payorLevelId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceIds": {
            "type": "string",
            "nullable": true
          },
          "batchStatus": {
            "type": "string",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "dayDifference": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isHold": {
            "type": "boolean",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "isApproved": {
            "type": "boolean"
          },
          "tileName": {
            "type": "string",
            "nullable": true
          },
          "acceptsElectronicClaims": {
            "type": "boolean",
            "nullable": true
          },
          "acceptsPaperClaims": {
            "type": "boolean",
            "nullable": true
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          },
          "submissionExp": {
            "type": "string",
            "nullable": true
          },
          "submissionValue": {
            "type": "string",
            "nullable": true
          },
          "submissionMethodExp": {
            "type": "string",
            "nullable": true
          },
          "submissionMethodValue": {
            "type": "string",
            "nullable": true
          },
          "claimSubmitterExp": {
            "type": "string",
            "nullable": true
          },
          "claimSubmitterValue": {
            "type": "string",
            "nullable": true
          },
          "claimFormExp": {
            "type": "string",
            "nullable": true
          },
          "claimFormValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceExp": {
            "type": "string",
            "nullable": true
          },
          "insuranceValue": {
            "type": "string",
            "nullable": true
          },
          "payerLevelExp": {
            "type": "string",
            "nullable": true
          },
          "payerLevelValue": {
            "type": "string",
            "nullable": true
          },
          "accountTypeExp": {
            "type": "string",
            "nullable": true
          },
          "accountTypeValue": {
            "type": "string",
            "nullable": true
          },
          "numberOfClaimsExp": {
            "type": "string",
            "nullable": true
          },
          "numberOfClaimsValue": {
            "type": "string",
            "nullable": true
          },
          "createdExp": {
            "type": "string",
            "nullable": true
          },
          "createdValue": {
            "type": "string",
            "nullable": true
          },
          "isDeletedRejected": {
            "type": "boolean",
            "nullable": true
          },
          "search": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isJopariClaimSubmitter": {
            "type": "boolean",
            "nullable": true
          },
          "isDuplicate": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement_.Models.ChargeReviewClaimsGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "taxExp": {
            "type": "string",
            "nullable": true
          },
          "taxValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          },
          "isDeletedRejected": {
            "type": "boolean",
            "nullable": true
          },
          "isHold": {
            "type": "boolean",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          },
          "acceptsElectronicClaims": {
            "type": "boolean",
            "nullable": true
          },
          "acceptsPaperClaims": {
            "type": "boolean",
            "nullable": true
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payorLevelId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isJopariClaimSubmitter": {
            "type": "boolean",
            "nullable": true
          },
          "insuranceGroupId": {
            "type": "string",
            "nullable": true
          },
          "doctorNameExp": {
            "type": "string",
            "nullable": true
          },
          "doctorNameValue": {
            "type": "string",
            "nullable": true
          },
          "accountTypeExp": {
            "type": "string",
            "nullable": true
          },
          "accountTypeValue": {
            "type": "string",
            "nullable": true
          },
          "policyNumberExp": {
            "type": "string",
            "nullable": true
          },
          "policyNumberValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement_.Models.ClaimSubmissionInvoiceGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "taxExp": {
            "type": "string",
            "nullable": true
          },
          "taxValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          },
          "isDeletedRejected": {
            "type": "boolean",
            "nullable": true
          },
          "isHold": {
            "type": "boolean",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          },
          "acceptsElectronicClaims": {
            "type": "boolean",
            "nullable": true
          },
          "acceptsPaperClaims": {
            "type": "boolean",
            "nullable": true
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payorLevelId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isJopariClaimSubmitter": {
            "type": "boolean",
            "nullable": true
          },
          "insuranceGroupId": {
            "type": "string",
            "nullable": true
          },
          "doctorNameExp": {
            "type": "string",
            "nullable": true
          },
          "doctorNameValue": {
            "type": "string",
            "nullable": true
          },
          "accountTypeExp": {
            "type": "string",
            "nullable": true
          },
          "accountTypeValue": {
            "type": "string",
            "nullable": true
          },
          "policyNumberExp": {
            "type": "string",
            "nullable": true
          },
          "policyNumberValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement_.Models.FollowUpsModel": {
        "type": "object",
        "properties": {
          "complete": {
            "type": "boolean"
          },
          "followUpIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ClaimManagement_.Models.RejectedClaimsGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "taxExp": {
            "type": "string",
            "nullable": true
          },
          "taxValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          },
          "isDeletedRejected": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Courier.Models.CommonTrackShipmentModel": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "trackingId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "packageDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "courierId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Courier.Models.SaveShipmentrequestModel": {
        "type": "object",
        "properties": {
          "shipmentNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "courierId": {
            "type": "string",
            "nullable": true
          },
          "salesOrderID": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DDPMedical.Models.CreateLocationModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.productModel"
            },
            "nullable": true
          },
          "customerPO": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "shipVia": {
            "type": "string",
            "nullable": true
          },
          "courierId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DDPMedical.Models.UpdateAddressModel": {
        "type": "object",
        "properties": {
          "shipToAddressLine1": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          },
          "shipToAddressLine2": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          },
          "shipToCity": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          },
          "shipToState": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          },
          "shipToPostalCode": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DDPMedical.Models.productModel": {
        "type": "object",
        "properties": {
          "inventoryID": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          },
          "quantity": {
            "$ref": "#/components/schemas/WebAPI.Areas.DDPMedical.Models.valueObject"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DDPMedical.Models.valueObject": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Dashboard.Models.DashboardGetModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Dashboard.Models.MetricsDashboardModel": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkAssignModel": {
        "type": "object",
        "properties": {
          "ordersIds": {
            "type": "string",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkDriverOrderUnscheduleModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DriverIds\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderBulkDriverOrderUnscheduleModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUnscheduleModel": {
        "type": "object",
        "properties": {
          "deliveryOrderIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DeliveryOrderIdIds\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderBulkUnscheduleModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderBulkUpdateModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "description": "DeliveryOrderIdIds\r\n",
            "format": "int64",
            "nullable": true
          },
          "stopNumber": {
            "type": "integer",
            "description": "StopNumber\r\n",
            "format": "int32",
            "nullable": true
          },
          "scheduledTime": {
            "type": "string",
            "description": "ScheduledTime\r\n",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderBulkUpdateModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderGetModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status\r\n",
            "nullable": true
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DriverIds\r\n",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "description": "DriverIds\r\n",
            "format": "int64"
          },
          "showOnlyScheduledOrders": {
            "type": "boolean",
            "description": "ShowOnlyScheduledOrders\r\n",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "searchString": {
            "type": "string",
            "description": "SearchString\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderGetModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderJumpToDateModel": {
        "type": "object",
        "properties": {
          "fromDeliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "toDeliveryDate": {
            "type": "string",
            "description": "ToDeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "isAllOrderSelected": {
            "type": "boolean",
            "description": "IsAllOrderSelected\r\n",
            "nullable": true
          },
          "ordersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "OrdersIds\r\n",
            "nullable": true
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DriverIds\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderJumpToDateModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderLockDriverModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DriverIds\r\n",
            "nullable": true
          },
          "locked": {
            "type": "boolean",
            "description": "Locked\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderLockDriverModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "description": "DeliveryOrder\r\n",
            "format": "int64",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "description": "DriverId\r\n",
            "format": "int64",
            "nullable": true
          },
          "stopNumber": {
            "type": "integer",
            "description": "StopNumber\r\n",
            "format": "int32",
            "nullable": true
          },
          "scheduledTime": {
            "type": "string",
            "description": "ScheduledTime\r\n",
            "format": "date-time",
            "nullable": true
          },
          "timeWindow": {
            "type": "string",
            "description": "TimeWindow\r\n",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "timeWindowFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeWindowTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderNotifyDriverModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DriverIds\r\n",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "selectedDriverOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderNotifyDriverModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderReverseOrderModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "description": "DriverId\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderReverseOrderModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderSwitchDriverModel": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "sourceDriverId": {
            "type": "integer",
            "description": "SourceDriverId\r\n",
            "format": "int64",
            "nullable": true
          },
          "destinationDriverId": {
            "type": "integer",
            "description": "DestinationDriverId\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DeliveryOrderSwitchDriverModel\r\n"
      },
      "WebAPI.Areas.DeliveryManagement.Models.DeliveryOrderUnscheduledModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "unassignedToggleFilter": {
            "type": "string",
            "nullable": true
          },
          "unscheduledToggleFilter": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "scheduleDeliveryDateExp": {
            "type": "string",
            "nullable": true
          },
          "scheduleDeliveryDateValue": {
            "type": "string",
            "nullable": true
          },
          "addressExp": {
            "type": "string",
            "nullable": true
          },
          "addressValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderStatusExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderStatusValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderTypeExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderTypeValue": {
            "type": "string",
            "nullable": true
          },
          "driverNameExp": {
            "type": "string",
            "nullable": true
          },
          "driverNameValue": {
            "type": "string",
            "nullable": true
          },
          "cancelledDateExp": {
            "type": "string",
            "nullable": true
          },
          "cancelledDateValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryManagement.Models.EFilesGetModel": {
        "type": "object",
        "properties": {
          "salesOrderIds": {
            "type": "string",
            "description": "SalesOrderIds\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "EFilesGetModel\r\n"
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.ABNModel": {
        "type": "object",
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.CustomerSatisfactionSurvey": {
        "type": "object",
        "properties": {
          "surveyQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "surveyOptionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.CustomerSatisfactionSurveyModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customerSatisfactionSurveyQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.CustomerSatisfactionSurvey"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.DeliveryDocumentUploadModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "orderImage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.MobileFileUpload"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.DeliveryObject": {
        "type": "object",
        "properties": {
          "deliveryOrderDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "deliveredQty": {
            "type": "integer",
            "format": "int32"
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "purchaseDeliveredSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "purchaseNotDeliveredSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "rentalDeliveredSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "rentalNotDeliveredSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "nullable": true
          },
          "scheduleDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeWindow": {
            "type": "string",
            "nullable": true
          },
          "estimatedTimeToArrive": {
            "type": "string",
            "nullable": true
          },
          "branchPhone": {
            "type": "string",
            "nullable": true
          },
          "isPatientDeliveryScheduleNotified": {
            "type": "boolean",
            "nullable": true
          },
          "isPatientDeliveryOnRouteNotified": {
            "type": "boolean",
            "nullable": true
          },
          "isPatientDeliveryCompletedNotified": {
            "type": "boolean",
            "nullable": true
          },
          "sourceApp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.DeliveryTicketQuestion": {
        "type": "object",
        "properties": {
          "deliveryQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deliveryOptionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "questionAnswerText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.DeliveryTicketQuestionModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deliveryTicketQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryTicketQuestion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.MobileFileUpload": {
        "type": "object",
        "properties": {
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "document": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryCompleteServiceModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "description": "DeliveryOrderId\r\n",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "string",
            "description": "SalesOrderId\r\n",
            "nullable": true
          },
          "pickupTicketId": {
            "type": "integer",
            "description": "PickupTicketId\r\n",
            "format": "int64",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "description": "OrderType\r\n",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "patientEmail": {
            "type": "string",
            "description": "PatientEmail\r\n",
            "nullable": true
          },
          "updatePrimaryEmail": {
            "type": "boolean",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "description": "DocumentTypeId\r\n",
            "format": "int64",
            "nullable": true
          },
          "documentTypeId_DeliveryTicket": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPatientAssessmentRequired": {
            "type": "boolean",
            "description": "IsPatientAssessmentRequired\r\n"
          },
          "serviceCompleteTime": {
            "type": "string",
            "description": "ServiceStartTime\r\n",
            "format": "date-time",
            "nullable": true
          },
          "digitalSignature": {
            "type": "string",
            "description": "DigitalSignature\r\n",
            "nullable": true
          },
          "driverSignature": {
            "type": "string",
            "description": "DriverSignature\r\n",
            "nullable": true
          },
          "deliveryComment": {
            "type": "string",
            "description": "DeliveryComment\r\n",
            "nullable": true
          },
          "deliveredProducts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "DeliveredProducts\r\n",
            "nullable": true
          },
          "productDetailIdsToRemove": {
            "type": "string",
            "description": "productDetailIdsToRemove\r\n",
            "nullable": true
          },
          "deliveredProductsDetailedObject": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryObject"
            },
            "description": "DeliveredProductsDetailedObject\r\n",
            "nullable": true
          },
          "salesOrderTypeId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "isPatientDeliveryCompletedNotified": {
            "type": "boolean"
          },
          "nextOrderDetails": {
            "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryOrderSMSModel"
          },
          "isPatientEducationPerformed": {
            "type": "boolean"
          },
          "isPrivacyNoticeReceived": {
            "type": "boolean"
          },
          "isSafetyAssitantPerformed": {
            "type": "boolean"
          },
          "isPatientReceivedInformation": {
            "type": "boolean"
          },
          "instruction_Settings": {
            "type": "string",
            "nullable": true
          },
          "instructionSettingsOtherValue": {
            "type": "string",
            "nullable": true
          },
          "relationshipTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipPersonName": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "customerSatisfactionSurveyModel": {
            "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.CustomerSatisfactionSurveyModel"
          },
          "deliveryTicketQuestionModel": {
            "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.DeliveryTicketQuestionModel"
          },
          "objectiveAssessment": {
            "type": "string",
            "nullable": true
          },
          "isMedicareSupplierStandard": {
            "type": "boolean",
            "nullable": true
          },
          "patientAssessmentEmail": {
            "type": "string",
            "nullable": true
          },
          "patientAssessmentDocumentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "uploadDeliveryImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.MobileFileUpload"
            },
            "nullable": true
          },
          "pickedUpProductsDetailedStringify": {
            "type": "string",
            "nullable": true
          },
          "adjustedProduct": {
            "type": "string",
            "nullable": true
          },
          "removeAdjustedItemsIds": {
            "type": "string",
            "nullable": true
          },
          "pickedUpProducts": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "cmnId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "feeScheduleCMNFormType": {
            "type": "string",
            "nullable": true
          },
          "isSkipEmail": {
            "type": "boolean",
            "nullable": true
          },
          "isSkipFormEmail": {
            "type": "boolean",
            "nullable": true
          },
          "abnList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.ABNModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OrderDeliveryCompleteServiceModel\r\n"
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryStartServiceModel": {
        "type": "object",
        "properties": {
          "deliveryOrderId": {
            "type": "integer",
            "description": "DeliveryOrderId\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OrderDeliveryStartServiceModel\r\n"
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.OrderDeliveryUpdateNotificationModel": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isReadAll": {
            "type": "boolean",
            "nullable": true
          },
          "isClearAllNotifications": {
            "type": "boolean",
            "nullable": true
          },
          "mode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OrderDeliveryUpdateNotificationModel\r\n"
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionAnswerModel": {
        "type": "object",
        "properties": {
          "patientAssessmentQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assessmentQuestionId": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentQuestionAnswerId": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentQuestionAnswerText": {
            "type": "string",
            "nullable": true
          },
          "isText": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "patientAssessmentQuestionAnswerModel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DeliveryMobileApp.Models.PatientAssessmentQuestionAnswerModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DeliveryMobileApp.Models.UnderMaintenanceInventoryRequest": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.DepositGeneralModel": {
        "type": "object",
        "properties": {
          "depositId": {
            "type": "integer",
            "description": "DepositId\r\n",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "depositDate": {
            "type": "string",
            "description": "DepositDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "assignedTo": {
            "type": "integer",
            "description": "AssignedTo\r\n",
            "format": "int64",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "ReferenceNumber\r\n",
            "nullable": true
          },
          "depositNote": {
            "type": "string",
            "description": "DepositNote\r\n",
            "nullable": true
          },
          "isFundConfirmed": {
            "type": "boolean",
            "description": "IsFundConfirm\r\n",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "IsLocked\r\n",
            "nullable": true
          },
          "lockedOn": {
            "type": "string",
            "description": "PostedOn\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lockedBy": {
            "type": "integer",
            "description": "PostedBy\r\n",
            "format": "int64",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "description": "CreatedBy\r\n",
            "format": "int64",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "CreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "integer",
            "description": "LastUpdatedBy\r\n",
            "format": "int64",
            "nullable": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "LastUpdatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "description": "BankId\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "PaymentIds\r\n",
            "nullable": true
          },
          "isNotifyAssignedTo": {
            "type": "boolean",
            "description": "IsFundConfirm\r\n",
            "nullable": true
          },
          "isNotifyFundsConfirmed": {
            "type": "boolean",
            "description": "IsFundConfirm\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DepositGeneralModel\r\n"
      },
      "WebAPI.Areas.Deposit.Models.DepositGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "depositDateExp": {
            "type": "string",
            "nullable": true
          },
          "depositDateValue": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "numberOfPaymentsExp": {
            "type": "string",
            "nullable": true
          },
          "numberOfPaymentsValue": {
            "type": "string",
            "nullable": true
          },
          "amountExp": {
            "type": "string",
            "nullable": true
          },
          "amountValue": {
            "type": "string",
            "nullable": true
          },
          "balanceExp": {
            "type": "string",
            "nullable": true
          },
          "balanceValue": {
            "type": "string",
            "nullable": true
          },
          "lockedOnExp": {
            "type": "string",
            "nullable": true
          },
          "lockedOnValue": {
            "type": "string",
            "nullable": true
          },
          "createdByNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "createdByNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignedToUserIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.InsurancePatientSearchModel": {
        "type": "object",
        "properties": {
          "payer": {
            "type": "string",
            "nullable": true
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "partnerid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentBatchDocumentModel": {
        "type": "object",
        "properties": {
          "paymentBatchId": {
            "type": "integer",
            "format": "int64"
          },
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentBatchInvoice": {
        "type": "object",
        "properties": {
          "paymentBatchInvoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "resubmissionOrgRefNo": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentBatchInvoiceLineItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchInvoiceLineItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentBatchInvoiceLineItem": {
        "type": "object",
        "properties": {
          "paymentBatchInvoiceLineItemId": {
            "type": "integer",
            "description": "PaymentBatchInvoiceLineItemId\r\n",
            "format": "int64",
            "nullable": true
          },
          "paymentTypeId": {
            "type": "integer",
            "description": "PaymentTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "adjustmentActionId": {
            "type": "integer",
            "description": "PaymentReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "remarkCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineItemId": {
            "type": "integer",
            "description": "InvoiceLineItemId\r\n",
            "format": "int32",
            "nullable": true
          },
          "payerEntityTypeId": {
            "type": "integer",
            "description": "PayerEntityTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "description": "procedureCode\r\n",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount\r\n",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note\r\n",
            "nullable": true
          },
          "paymentDetailReasonId": {
            "type": "integer",
            "description": "PaymentDetailReasonId\r\n",
            "format": "int64",
            "nullable": true
          },
          "transferredTo": {
            "type": "integer",
            "description": "TransferredTo\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentBatchModel": {
        "type": "object",
        "properties": {
          "paymentBatchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "batchName": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentResponsibleTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "providerAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "providerAdjustmentReasonCodeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentNote": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "isSubmitted": {
            "type": "boolean",
            "nullable": true
          },
          "paymentBatchInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentBatchInvoice"
            },
            "nullable": true
          },
          "invoiceLineItems": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "cvvNumber": {
            "type": "string",
            "nullable": true
          },
          "ccMonth": {
            "type": "string",
            "nullable": true
          },
          "ccYear": {
            "type": "string",
            "nullable": true
          },
          "nameCard": {
            "type": "string",
            "nullable": true
          },
          "isPaymentOnFile": {
            "type": "boolean"
          },
          "isRememberCard": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "payer": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dmePaymentConfigEnabled": {
            "type": "boolean"
          },
          "uploadPaymentDocument": {
            "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.UploadPaymentDocument"
          },
          "maskedNumber": {
            "type": "string",
            "nullable": true
          },
          "isTokenCard": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentDetailInfo": {
        "type": "object",
        "properties": {
          "paymentDetailId": {
            "type": "integer",
            "description": "PaymentDetailId\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentTypeId": {
            "type": "integer",
            "description": "PaymentTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "adjustmentActionId": {
            "type": "integer",
            "description": "PaymentReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "remarkCodeId": {
            "type": "integer",
            "description": "RemarkCodeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineItemId": {
            "type": "integer",
            "description": "InvoiceLineItemId\r\n",
            "format": "int32",
            "nullable": true
          },
          "payerEntityTypeId": {
            "type": "integer",
            "description": "PayerEntityTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "description": "procedureCode\r\n",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount\r\n",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note\r\n",
            "nullable": true
          },
          "paymentDetailReasonId": {
            "type": "integer",
            "description": "Note\r\n",
            "format": "int64",
            "nullable": true
          },
          "transferredTo": {
            "type": "integer",
            "description": "TransferredTo\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recoupmentType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentDetailViewModel": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "description": "PaymentId\r\n",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "PaymentId\r\n",
            "format": "int64",
            "nullable": true
          },
          "isInvoicePayment": {
            "type": "boolean",
            "description": "IsInvoicePayment\r\n",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "ReferenceNumber\r\n",
            "nullable": true
          },
          "dateOfService": {
            "type": "string",
            "description": "DateOfService\r\n",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Amount\r\n",
            "format": "double",
            "nullable": true
          },
          "isUnappliedPayment": {
            "type": "boolean",
            "description": "IsUnappliedPayment\r\n",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "description": "PaymentDetailInfo\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentDetailInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.PaymentDetailInfo"
            },
            "nullable": true
          },
          "addedFrom": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "isUpdateResubmissionOrgRefNo": {
            "type": "boolean",
            "nullable": true
          },
          "resubmissionOrgRefNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentDocumentModel": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentGeneralInfo": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "description": "PaymentId\r\n",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "depositId": {
            "type": "integer",
            "description": "DepositId\r\n",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "isUnappliedPayment": {
            "type": "boolean",
            "description": "IsUnappliedPayment\r\n",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "ReferenceNumber\r\n",
            "nullable": true
          },
          "paymentResponsibleTypeId": {
            "type": "integer",
            "description": "PaymentTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "description": "PaymentAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "paymentNote": {
            "type": "string",
            "description": "DepositId\r\n",
            "nullable": true
          },
          "payerId": {
            "type": "integer",
            "description": "PayerId\r\n",
            "format": "int64",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "description": "PaymentDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "description": "PaymentMethodId\r\n",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "description": "ClientId\r\n",
            "format": "int32"
          },
          "accountNumber": {
            "type": "string",
            "description": "AccountNumber\r\n",
            "nullable": true
          },
          "cvvNumber": {
            "type": "string",
            "description": "CVVNumber\r\n",
            "nullable": true
          },
          "ccMonth": {
            "type": "string",
            "description": "CCMonth\r\n",
            "nullable": true
          },
          "ccYear": {
            "type": "string",
            "description": "CCYear\r\n",
            "nullable": true
          },
          "nameCard": {
            "type": "string",
            "description": "NameCard\r\n",
            "nullable": true
          },
          "isPaymentOnFile": {
            "type": "boolean",
            "description": "IsPaymentOnFile\r\n"
          },
          "isRememberCard": {
            "type": "boolean",
            "description": "IsRememberCard\r\n"
          },
          "paymentMethod": {
            "type": "string",
            "description": "PaymentMethod\r\n",
            "nullable": true
          },
          "ccPaymentLogId": {
            "type": "integer",
            "description": "CCPaymentLogId\r\n",
            "format": "int64",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "isRefund": {
            "type": "boolean"
          },
          "addedFrom": {
            "type": "string",
            "nullable": true
          },
          "payer": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dmePaymentConfigEnabled": {
            "type": "boolean"
          },
          "uploadPaymentDocument": {
            "$ref": "#/components/schemas/WebAPI.Areas.Deposit.Models.UploadPaymentDocument"
          },
          "isPaymentAutoApply": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "providerAdjustmentReasonCodeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPatientPaymentAllocate": {
            "type": "boolean",
            "nullable": true
          },
          "invoiceIds": {
            "type": "string",
            "nullable": true
          },
          "paymentBatchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "maskedNumber": {
            "type": "string",
            "nullable": true
          },
          "isTokenCard": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentInquiryModel": {
        "type": "object",
        "properties": {
          "retref": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "partnerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          },
          "cardDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantKey": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "accType": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "profile": {
            "type": "string",
            "nullable": true
          },
          "capture": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postal": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "nameOnCard": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "expiryMonth": {
            "type": "string",
            "nullable": true
          },
          "expiryYear": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "merchantIdString": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentPostingInvoiceGetModel": {
        "type": "object",
        "properties": {
          "searchOption": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "payerId": {
            "type": "integer",
            "format": "int64"
          },
          "searchValue": {
            "type": "string",
            "nullable": true
          },
          "excludeZeroBalance": {
            "type": "boolean"
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PaymentTransactionTokenModel": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "src": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.PrintDepositTicketModel": {
        "type": "object",
        "properties": {
          "depositId": {
            "type": "integer",
            "format": "int32"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Deposit.Models.UploadPaymentDocument": {
        "type": "object",
        "properties": {
          "fileBytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileExt": {
            "type": "string",
            "nullable": true
          },
          "originalFileName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "branchKey": {
            "type": "string",
            "nullable": true
          },
          "clientKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.ClinicTrainingModel": {
        "type": "object",
        "properties": {
          "trainingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "signBy": {
            "type": "string",
            "nullable": true
          },
          "signBySignature": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.CompetitionProduct": {
        "type": "object",
        "properties": {
          "competitionProductId": {
            "type": "integer",
            "description": "Plan\r\n",
            "format": "int64"
          },
          "competitionProductName": {
            "type": "string",
            "description": "CompetitionProductName",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "CreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "description": "CreatedBy\r\n",
            "format": "int64",
            "nullable": true
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "LastModifiedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "integer",
            "description": "LastModifiedBy\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Competition Product\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.DistributionGuidance": {
        "type": "object",
        "properties": {
          "clinicNotes": {
            "type": "integer",
            "description": "ClinicNotes\r\n",
            "format": "int64"
          },
          "callerNotes": {
            "type": "integer",
            "description": "CallerNotes\r\n",
            "format": "int64"
          },
          "maintainModals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.MaintainModal"
            },
            "description": "MaintainModals\r\n",
            "nullable": true
          },
          "maintainQuantity": {
            "type": "integer",
            "description": "MaintainQuantity\r\n",
            "format": "int32"
          },
          "competitionProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.CompetitionProduct"
            },
            "description": "CompetitionProduct\r\n",
            "nullable": true
          },
          "medicalTrainingLastCompleted": {
            "type": "string",
            "description": "MedicalTrainingLastCompleted\r\n",
            "format": "date-time",
            "nullable": true
          },
          "medicalTrainingDriverId": {
            "type": "integer",
            "description": "MedicalTrainingDriverId\r\n",
            "format": "int64"
          },
          "medicalTrainingLastCompletedBy": {
            "type": "string",
            "description": "MedicalTrainingLastCompletedBy\r\n",
            "nullable": true
          },
          "medicalTrainingCompletedBySignature": {
            "type": "string",
            "description": "MedicalTrainingCompletedBySignature\r\n",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "description": "CreatedBy\r\n",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "description": "CreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "integer",
            "description": "LastUpdatedBy\r\n",
            "format": "int64"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "LastUpdatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastVisitDate": {
            "type": "string",
            "description": "LastVisitDate",
            "format": "date-time",
            "nullable": true
          },
          "lastVisitDriver": {
            "type": "string",
            "description": "LastVisitDriver",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DistributionGuidance contain various information about a clinic that is useful to know during distirbution of inventory to a particular Clinic \r\n\r\nThis includes: MaintainModel, MaintainQuantity, ClinicNotes, CallerNotes, CompetitionProduct, and MedicalTrainingLastCompleted"
      },
      "WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLog": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLogModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.FailedApiSyncLogModel": {
        "type": "object",
        "properties": {
          "failedApiSyncLogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apiEndpoint": {
            "type": "string",
            "nullable": true
          },
          "requestPayload": {
            "type": "string",
            "nullable": true
          },
          "responseError": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "syncStatus": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transitionTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "failureTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.MaintainModal": {
        "type": "object",
        "properties": {
          "maintainModalId": {
            "type": "integer",
            "description": "MaintainModalId\r\n",
            "format": "int64"
          },
          "maintainModalName": {
            "type": "string",
            "description": "MaintainModalName",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "CreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "description": "CreatedBy\r\n",
            "format": "int64",
            "nullable": true
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "LastModifiedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "integer",
            "description": "LastModifiedBy\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "MaintainModal\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.MultipleStopViewModel": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int64"
          },
          "routeId": {
            "type": "integer",
            "format": "int64"
          },
          "stops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Stop"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.Plan": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "description": "Plan\r\n",
            "format": "int64"
          },
          "routeId": {
            "type": "integer",
            "description": "RouteId\r\n",
            "format": "int64"
          },
          "stops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Stop"
            },
            "description": "Route\r\n",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "description": "Driver\r\n",
            "format": "int64"
          },
          "planCreatedDate": {
            "type": "string",
            "description": "PlanCreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "PlanStartDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "PlanEndDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "planCreatedBy": {
            "type": "integer",
            "description": "PlanCreatedBy\r\n",
            "format": "int64"
          },
          "planLastModifiedDate": {
            "type": "string",
            "description": "PlanLastModifiedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "planLastModifiedBy": {
            "type": "integer",
            "description": "PlanLastModifiedBy\r\n",
            "format": "int64"
          },
          "maintainModal": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "MaintainModals\r\n",
            "nullable": true
          },
          "competition": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "CompetitionProducts<dr />",
            "nullable": true
          },
          "driverNote": {
            "type": "string",
            "description": "DriverNote<dr />",
            "nullable": true
          },
          "clinicNote": {
            "type": "string",
            "description": "ClinicNotes<dr />",
            "nullable": true
          },
          "departureDate": {
            "type": "string",
            "description": "DepartureDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "planbranchId": {
            "type": "integer",
            "description": "planbrachId\r\n",
            "format": "int64"
          },
          "arrivalDate": {
            "type": "string",
            "description": "ArrivalDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "boolean",
            "description": "LastUpdatedBy\r\n"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "LastUpdatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "medicalTrainingLastCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isOnlyDriverNoteUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean",
            "nullable": true
          },
          "feedback": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Plan defines a distribution plan.  This is a combination of a Route, Driver and Date. \r\n\r\nA plan is used to plan the distribution before the driver leaves.\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.PlanBranchesUpdateDriverStopNumberModel": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int64"
          },
          "planBranchesToUpdate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.PlanBranchesViewModel": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "description": "",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "",
            "format": "int64",
            "nullable": true
          },
          "departureDate": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "arrivalDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.PlanDateParameters": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "PlanDate\r\n\r\nThe start date from which to search for Plans (Will find all Plans with PlanStartDate between the Start Date and End Date) \r\n\r\nIf no Start Date is provided, it will find all Plans from beginning of time to End Date",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "PlanDate\r\n\r\nThe end date to which to search for Plans (Will find all Plans with PlanStartDate between the Start Date and End Date) \r\n\r\nIf no End Date is provided, it will find all Plans from Start Date to end of time (in the future)",
            "format": "date-time",
            "nullable": true
          },
          "driverId": {
            "type": "integer",
            "description": "DriverId\r\n\r\nThe Id of the driver assigned to the plan.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PlanDateParameters\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.PlanSearchParameters": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "description": "DriverId\r\n\r\nThe Id of the driver assigned to the plan.",
            "format": "int64",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "description": "PlanDate\r\n\r\nThe start date from which to search for Plans (Will find all Plans with PlanDate between the PlanStartDate and PlanEndDate) \r\n\r\nIf no Start Date is provided, it will find all Plans from beginning of time to End Date",
            "format": "date-time",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "description": "PlanDate\r\n\r\nThe end date to which to search for Plans (Will find all Plans with PlanDate between the PlanStartDate and PlanEndDate) \r\n\r\nIf no End Date is provided, it will find all Plans from Start Date to end of time (in the future)",
            "format": "date-time",
            "nullable": true
          },
          "routeId": {
            "type": "integer",
            "description": "RouteId\r\n\r\nThe Id of the Route used in the plan",
            "format": "int64",
            "nullable": true
          },
          "warehouseBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "routeExp": {
            "type": "string",
            "nullable": true
          },
          "routeValue": {
            "type": "string",
            "nullable": true
          },
          "driverNameExp": {
            "type": "string",
            "nullable": true
          },
          "driverNameValue": {
            "type": "string",
            "nullable": true
          },
          "planStatusExp": {
            "type": "string",
            "nullable": true
          },
          "planStatusValue": {
            "type": "string",
            "nullable": true
          },
          "planDateExp": {
            "type": "string",
            "nullable": true
          },
          "planDateValue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planDateFromValue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planDateToValue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PlanSearchParameters\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.PlanStopViewModel": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "integer",
            "format": "int64"
          },
          "stop": {
            "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Stop"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.Route": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "description": "RouteId\r\n",
            "format": "int32",
            "nullable": true
          },
          "routeName": {
            "type": "string",
            "description": "RouteName\r\n",
            "nullable": true
          },
          "routeCode": {
            "type": "string",
            "description": "RouteCode\r\n",
            "nullable": true
          },
          "daysToCompleteRoute": {
            "type": "integer",
            "description": "DaysToCompleteRoute\r\n",
            "format": "int32"
          },
          "active": {
            "type": "boolean",
            "description": "Shows if the route is active oor not \r\n"
          },
          "isSystem": {
            "type": "boolean",
            "description": "True is user is created by the system. if True, the user cannot be deleted"
          },
          "stops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Stop"
            },
            "nullable": true
          },
          "routeCreatedDate": {
            "type": "string",
            "description": "RouteCreatedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "routeCreatedBy": {
            "type": "integer",
            "description": "TimeWindow\r\n",
            "format": "int64"
          },
          "routeLastModifiedDate": {
            "type": "string",
            "description": "RouteLastModifiedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "routeLastModifiedBy": {
            "type": "integer",
            "description": "RouteLastModifiedBy\r\n",
            "format": "int64"
          },
          "assignedBranchIdsToUpdate": {
            "type": "string",
            "description": "AssignedBranchIdsToUpdate\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "RouteModel\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.RouteBranchCheck": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.RouteBranchesSearchParameters": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "branchNameExp": {
            "type": "string",
            "nullable": true
          },
          "branchNameValue": {
            "type": "string",
            "nullable": true
          },
          "routeNameExp": {
            "type": "string",
            "nullable": true
          },
          "routeNameValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.RouteSearchParameters": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "routeName": {
            "type": "string",
            "description": "RouteName\r\n\r\nThe name of the route to search by",
            "nullable": true
          },
          "routeCode": {
            "type": "string",
            "description": "RouteCodeDate\r\n\r\nThe code of the route",
            "nullable": true
          },
          "branchGroupId": {
            "type": "string",
            "description": "BranchGroupId\r\n\r\nThe branch group selected as filter",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "IsActive\r\n\r\nThis shows weather the route is active or not"
          },
          "isSystem": {
            "type": "boolean",
            "description": "True is user is created by the system. if True, the user cannot be deleted"
          },
          "routeNameExp": {
            "type": "string",
            "nullable": true
          },
          "routeNameValue": {
            "type": "string",
            "nullable": true
          },
          "daysToCompleteRouteExp": {
            "type": "string",
            "nullable": true
          },
          "daysToCompleteRouteValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateToValue": {
            "type": "string",
            "nullable": true
          },
          "createdByExp": {
            "type": "string",
            "nullable": true
          },
          "createdByValue": {
            "type": "string",
            "nullable": true
          },
          "selectedBranchIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "RouteSearchParameters are used to search for Routes matching a specific set of search criteria\r\n"
      },
      "WebAPI.Areas.DistributionManagement.Models.RouteStopViewModel": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "format": "int64"
          },
          "stop": {
            "$ref": "#/components/schemas/WebAPI.Areas.DistributionManagement.Models.Stop"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.DistributionManagement.Models.Stop": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "stopNumber": {
            "type": "integer",
            "description": "StopNumber\r\n",
            "format": "int32",
            "nullable": true
          },
          "scheduledTime": {
            "type": "string",
            "description": "ScheduledTime\r\n",
            "format": "date-time",
            "nullable": true
          },
          "timeWindow": {
            "type": "string",
            "description": "TimeWindow\r\n",
            "nullable": true
          },
          "clinicStatus": {
            "type": "integer",
            "description": "ClinicStatus: \r\n",
            "format": "int32",
            "nullable": true
          },
          "driverNote": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "description": "CreatedBy\r\n",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "description": "CreatedDate\r\n",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "integer",
            "description": "LastUpdatedBy\r\n",
            "format": "int64"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "LastUpdatedDate\r\n",
            "format": "date-time"
          },
          "routeBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "planBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Stop defines a stop along a particular distribution route.  This is where a driver would stop and drop off supplies.\r\n"
      },
      "WebAPI.Areas.Doctor.Models.DoctorAddressInfo": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Doctor.Models.DoctorBasicInfo": {
        "type": "object",
        "properties": {
          "npi": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "alsoKnownAs": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "doctorGroupId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "facilityId": {
            "type": "string",
            "nullable": true
          },
          "excludeFromEFax": {
            "type": "boolean",
            "nullable": true
          },
          "autoFaxSchedule": {
            "type": "string",
            "nullable": true
          },
          "marketingRepId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Doctor.Models.DoctorContactModel": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int64"
          },
          "contactPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "contactTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Doctor.Models.DoctorGeneralInfoModel": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "basicInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorBasicInfo"
          },
          "medicalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorMedicalInfo"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorAddressInfo"
            },
            "nullable": true
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Doctor.Models.DoctorPhoneInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Doctor.Models.DoctorMedicalInfo": {
        "type": "object",
        "properties": {
          "licenseNo": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "nullable": true
          },
          "deaNo": {
            "type": "string",
            "nullable": true
          },
          "upin": {
            "type": "string",
            "nullable": true
          },
          "stateMedicalId": {
            "type": "string",
            "nullable": true
          },
          "commercialNo": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "specialtyPracticeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pecosCertified": {
            "type": "boolean",
            "nullable": true
          },
          "pecosNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Doctor.Models.DoctorPhoneInfo": {
        "type": "object",
        "properties": {
          "phoneTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.AdministrativeContact": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "homeNumber": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.DropShip": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.PODetail": {
        "required": [
          "interChangeReceiverid",
          "interchangeSenderid",
          "poDate",
          "poItem",
          "poNumber",
          "shipDetail"
        ],
        "type": "object",
        "properties": {
          "poNumber": {
            "minLength": 1,
            "type": "string"
          },
          "poDate": {
            "minLength": 1,
            "type": "string"
          },
          "poType": {
            "type": "string",
            "nullable": true
          },
          "poItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.PurchaseOrderItem"
            }
          },
          "shipDetail": {
            "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.ShipTo"
          },
          "dropShip": {
            "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.DropShip"
          },
          "administrativeContact": {
            "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.AdministrativeContact"
          },
          "interchangeSenderid": {
            "minLength": 1,
            "type": "string"
          },
          "interChangeReceiverid": {
            "minLength": 1,
            "type": "string"
          },
          "ackRequest": {
            "type": "string",
            "nullable": true
          },
          "usageindicator": {
            "type": "string",
            "nullable": true
          },
          "referenceIdentification": {
            "type": "string",
            "nullable": true
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.ProductDescription": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.PurchaseOrderItem": {
        "required": [
          "orderedQuantity",
          "stockingUOM",
          "supplierSourceQualifierId"
        ],
        "type": "object",
        "properties": {
          "orderedQuantity": {
            "minLength": 1,
            "type": "string"
          },
          "stockingUOM": {
            "minLength": 1,
            "type": "string"
          },
          "unitPrice": {
            "type": "string",
            "nullable": true
          },
          "supplierSourceQualifierId": {
            "minLength": 1,
            "type": "string"
          },
          "productItemId": {
            "type": "string",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "nullable": true
          },
          "manufacturerId": {
            "type": "string",
            "nullable": true
          },
          "ndc": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/WebAPI.Areas.EDI.Models.PurchaseOrder.ProductDescription"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.SendPurchaseOrderEDI": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "edi": {
            "type": "string",
            "nullable": true
          },
          "gS_GroupControlNumber": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EDI.Models.PurchaseOrder.ShipTo": {
        "required": [
          "accountNumber",
          "addressLine1",
          "city",
          "name",
          "shipToAccountNumber",
          "state",
          "zip"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "shipToAccountNumber": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "attentionTo": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "zip": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "requestShipDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.AdjustmentModel": {
        "type": "object",
        "properties": {
          "eobProcedureId": {
            "type": "integer",
            "format": "int64"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "transferToNextPayer": {
            "type": "number",
            "format": "double"
          },
          "transferToPatient": {
            "type": "number",
            "format": "double"
          },
          "insuranceAdjustment": {
            "type": "number",
            "format": "double"
          },
          "isMarkedForPosting": {
            "type": "boolean",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "paymentDetailReasonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.AdjustmentPostModel": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "postedDate": {
            "type": "string",
            "format": "date-time"
          },
          "addedFrom": {
            "type": "string",
            "nullable": true
          },
          "procedureId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.ProcedureDetails"
            },
            "nullable": true
          },
          "providerAdjustment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAsyncCall": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.ClaimUpdateModel": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "nullable": true
          },
          "invoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.DeniedClaimsGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "taxExp": {
            "type": "string",
            "nullable": true
          },
          "taxValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          },
          "isDeletedDenied": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.EOBClaimView": {
        "type": "object",
        "properties": {
          "paymentFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentAmountFrom": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentAmountTo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isEobList": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "eobFileId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deniedCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceType": {
            "type": "string",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selctdInvPatients": {
            "type": "string",
            "nullable": true
          },
          "eraStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAllInvPatientModified": {
            "type": "boolean"
          },
          "isAllInvPatientselected": {
            "type": "boolean"
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "isDeletedDenied": {
            "type": "boolean",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "paymentDateExp": {
            "type": "string",
            "nullable": true
          },
          "paymentDateValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "numberOfClaimsExp": {
            "type": "string",
            "nullable": true
          },
          "numberOfClaimsValue": {
            "type": "string",
            "nullable": true
          },
          "billedAmountExp": {
            "type": "string",
            "nullable": true
          },
          "billedAmountValue": {
            "type": "string",
            "nullable": true
          },
          "adjustedAmountExp": {
            "type": "string",
            "nullable": true
          },
          "adjustedAmountValue": {
            "type": "string",
            "nullable": true
          },
          "patientRespExp": {
            "type": "string",
            "nullable": true
          },
          "patientRespValue": {
            "type": "string",
            "nullable": true
          },
          "paidAmountExp": {
            "type": "string",
            "nullable": true
          },
          "paidAmountValue": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountExp": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "providerAdjustmentAmtExp": {
            "type": "string",
            "nullable": true
          },
          "providerAdjustmentAmtValue": {
            "type": "string",
            "nullable": true
          },
          "insurances": {
            "type": "string",
            "nullable": true
          },
          "isHideBalance": {
            "type": "boolean",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "eobClaimId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "payerClaimControlNumberExp": {
            "type": "string",
            "nullable": true
          },
          "payerClaimControlNumberValue": {
            "type": "string",
            "nullable": true
          },
          "claimStatusExp": {
            "type": "string",
            "nullable": true
          },
          "claimStatusValue": {
            "type": "string",
            "nullable": true
          },
          "totalAdjustmentAmountExp": {
            "type": "string",
            "nullable": true
          },
          "totalAdjustmentAmountValue": {
            "type": "string",
            "nullable": true
          },
          "currentPayerTotalRemainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "currentPayerTotalRemainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "claimStatusDefExp": {
            "type": "string",
            "nullable": true
          },
          "claimStatusDefValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.EOBFileModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "eobFileId": {
            "type": "integer",
            "format": "int64"
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "postedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.ProcedureDetails": {
        "required": [
          "invoiceLineItemId"
        ],
        "type": "object",
        "properties": {
          "invoiceLineItemId": {
            "type": "integer",
            "format": "int32"
          },
          "eobClaimId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "toNextPayer": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "toPatient": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "writeoff": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "eobProcedureId": {
            "type": "integer",
            "format": "int64"
          },
          "isServiceLineDenied": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.EOBClaim.Models.SaveAdjustmentModel": {
        "type": "object",
        "properties": {
          "eobFileId": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDropId": {
            "type": "integer",
            "format": "int64"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.EOBClaim.Models.AdjustmentModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ERA.Models.EOBFileCreateModel": {
        "type": "object",
        "properties": {
          "isCreateEOBFileRecordOnly": {
            "type": "boolean",
            "nullable": true
          },
          "eobFileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ERA.Models.ERADetail": {
        "type": "object",
        "properties": {
          "fileBytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "addedfrom": {
            "type": "string",
            "nullable": true
          },
          "eobFileCreateModel": {
            "$ref": "#/components/schemas/WebAPI.Areas.ERA.Models.EOBFileCreateModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ERA.Models.ERADetailAutoPostPayment": {
        "type": "object",
        "properties": {
          "eobfileid": {
            "type": "integer",
            "format": "int32"
          },
          "currentuserid": {
            "type": "integer",
            "format": "int64"
          },
          "addedfrom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ERA.Models.ERAStatusModel": {
        "type": "object",
        "properties": {
          "eobFileId": {
            "type": "integer",
            "format": "int32"
          },
          "eobFileStatusId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ERA.Models.EobMarkAsDenialModel": {
        "type": "object",
        "properties": {
          "eobProcedureId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "eobClaimId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FAX_AI.Models.GetMappingLabelModel": {
        "type": "object",
        "properties": {
          "aiLabels": {
            "type": "string",
            "nullable": true
          },
          "labelType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FAX_AI.Models.InsruranceMappingItem": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "mappingLabel": {
            "type": "string",
            "nullable": true
          },
          "typeForMapping": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FAX_AI.Models.InsuranceMapping": {
        "type": "object",
        "properties": {
          "mappingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.FAX_AI.Models.InsruranceMappingItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fax.Model.BranchInfo": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "addressOtherInfo": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fax.Model.FaxCoverModel": {
        "type": "object",
        "properties": {
          "includeFaxCoverSheet": {
            "type": "boolean"
          },
          "branchInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.BranchInfo"
          },
          "faxToInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxToInfo"
          },
          "faxFromInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FaxFromInfo"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "confidential": {
            "type": "string",
            "nullable": true
          },
          "pageName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "faxPageCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "mrn": {
            "type": "string",
            "nullable": true
          },
          "isCmnProperFitForm": {
            "type": "boolean",
            "nullable": true
          },
          "isCmnFormDD2527": {
            "type": "boolean",
            "nullable": true
          },
          "cmnFormTypeCode": {
            "type": "string",
            "nullable": true
          },
          "faxStatus": {
            "type": "string",
            "nullable": true
          },
          "generatedBase64": {
            "$ref": "#/components/schemas/WebAPI.Models.ResponseResult`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
          },
          "fileUpload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Fax.Model.FileToUpload"
            },
            "nullable": true
          },
          "uploadedFilePath": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fax.Model.FaxFromInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fax.Model.FaxToInfo": {
        "type": "object",
        "properties": {
          "faxAttentionTo": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "re": {
            "type": "string",
            "nullable": true
          },
          "faxList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fax.Model.FileToUpload": {
        "type": "object",
        "properties": {
          "fileBytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.AccountNumberModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.Address": {
        "type": "object",
        "properties": {
          "streetLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateOrProvinceCode": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.AddressModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.AddressVerifyModel": {
        "type": "object",
        "properties": {
          "addressesToValidate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AddressModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.CancelShipmentModel": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AccountNumberModel"
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "trackingId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.ContactModel": {
        "type": "object",
        "properties": {
          "personName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "integer",
            "format": "int64"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.DimensionsModel": {
        "type": "object",
        "properties": {
          "length": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          },
          "units": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.FedexRateOptionModel": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AccountNumberModel"
          },
          "rateRequestControlParameters": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RateRequestControlParameterModel"
          },
          "requestedShipment": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RequestedRateShipmentModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.FedexShipmentModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "string",
            "nullable": true
          },
          "courierId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "labelResponseOptions": {
            "type": "string",
            "nullable": true
          },
          "requestedShipment": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.SRequestedShipmentModel"
          },
          "accountNumber": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.AccountNumberModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.LabelSpecificationModel": {
        "type": "object",
        "properties": {
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "labelStockType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RateAddressModel": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RateRecipientModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RateAddressModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RateRequestControlParameterModel": {
        "type": "object",
        "properties": {
          "returnTransitTimes": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RateShipperModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RateAddressModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RequestedPackageLineItemModel": {
        "type": "object",
        "properties": {
          "weight": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.WeightModel"
          },
          "dimensions": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.DimensionsModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RequestedRatePackageLineItemModel": {
        "type": "object",
        "properties": {
          "weight": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.WeightModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.RequestedRateShipmentModel": {
        "type": "object",
        "properties": {
          "shipper": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RateShipperModel"
          },
          "recipient": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RateRecipientModel"
          },
          "pickupType": {
            "type": "string",
            "nullable": true
          },
          "rateRequestType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requestedPackageLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RequestedRatePackageLineItemModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.SRequestedShipmentModel": {
        "type": "object",
        "properties": {
          "shipper": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.ShipmentShipperModel"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.ShipmentRecipientModel"
            },
            "nullable": true
          },
          "shipDatestamp": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "packagingType": {
            "type": "string",
            "nullable": true
          },
          "pickupType": {
            "type": "string",
            "nullable": true
          },
          "blockInsightVisibility": {
            "type": "boolean"
          },
          "shippingChargesPayment": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.ShippingChargesPaymentModel"
          },
          "labelSpecification": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.LabelSpecificationModel"
          },
          "requestedPackageLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.RequestedPackageLineItemModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.ShipmentRecipientModel": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.ContactModel"
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.ShipmentShipperModel": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.ContactModel"
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.Fedex.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.ShippingChargesPaymentModel": {
        "type": "object",
        "properties": {
          "paymentType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Fedex.Models.WeightModel": {
        "type": "object",
        "properties": {
          "units": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FollowUp.Models.AddFollowUpsModel": {
        "type": "object",
        "properties": {
          "followUpId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "followUpReasonId": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isComplete": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedBy": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FollowUp.Models.FollowUpModel": {
        "type": "object",
        "properties": {
          "followUpId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "employees": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "followUpReasonId": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isComplete": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedBy": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.FollowUp.Models.UpdateFollowUpAssignTo": {
        "type": "object",
        "properties": {
          "followUpIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.PageFeaturePermissionToggleModel": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "description": "PermissionId\r\n",
            "format": "int64"
          },
          "pageFeatureId": {
            "type": "integer",
            "description": "PageFeatureId\r\n",
            "format": "int64"
          },
          "isAllow": {
            "type": "boolean",
            "description": "IsAllow\r\n"
          }
        },
        "additionalProperties": false,
        "description": "PageFeaturePermissionToggleModel\r\n"
      },
      "WebAPI.Areas.Generic.Models.ServiceAccessToken": {
        "type": "object",
        "properties": {
          "accessLicenseNumber": {
            "type": "string",
            "nullable": true
          },
          "shipperNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.TrackSettingModel": {
        "type": "object",
        "properties": {
          "upsTracking": {
            "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UPS"
          },
          "uspsSettings": {
            "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.USPS"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.UPS": {
        "type": "object",
        "properties": {
          "usernameToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.UsernameToken"
          },
          "serviceAccessToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.Generic.Models.ServiceAccessToken"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.USPS": {
        "type": "object",
        "properties": {
          "urlEndPoint": {
            "type": "string",
            "nullable": true
          },
          "accessLicenseNumber": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.UserFilterSettingsModel": {
        "type": "object",
        "properties": {
          "filterSettingCode": {
            "type": "string",
            "nullable": true
          },
          "filterSettingValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.UserSettingsModel": {
        "type": "object",
        "properties": {
          "settingCode": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "settingValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Generic.Models.UsernameToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.GeneratePaperClaimInfoModel": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "printSelection": {
            "type": "string",
            "nullable": true
          },
          "paddingLeft": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingRight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingTop": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingBottom": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceBranchBillingProviderModel": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "CompanyName\r\n",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "description": "TaxId\r\n",
            "nullable": true
          },
          "taxIdType": {
            "type": "string",
            "description": "TaxIdType\r\n",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone\r\n",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "fax\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InsuranceBranchBillingProviderModel\r\n"
      },
      "WebAPI.Areas.Insurance.Models.InsuranceBranchEclaimModel": {
        "type": "object",
        "properties": {
          "contactName": {
            "type": "string",
            "description": "ContactName\r\n",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "description": "ContactPhone\r\n",
            "nullable": true
          },
          "excludeFromUpdate": {
            "type": "boolean",
            "description": "ExcludeFromUpdate\r\n",
            "nullable": true
          },
          "box_24_la": {
            "type": "string",
            "description": "Box_24_la\r\n",
            "nullable": true
          },
          "box_24_ja": {
            "type": "string",
            "description": "Box_24_ja\r\n",
            "nullable": true
          },
          "box_24_jb": {
            "type": "string",
            "description": "Box_24_jb\r\n",
            "nullable": true
          },
          "includeBox_24_jb": {
            "type": "boolean",
            "description": "IncludeBox_24_jb\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InsuranceBranchEclaimModel\r\n"
      },
      "WebAPI.Areas.Insurance.Models.InsuranceBranchGeneralModel": {
        "type": "object",
        "properties": {
          "priceTableId": {
            "type": "integer",
            "description": "PriceTableId\r\n",
            "format": "int32",
            "nullable": true
          },
          "providerNo": {
            "type": "string",
            "description": "ProviderNo\r\n",
            "nullable": true
          },
          "npi": {
            "type": "string",
            "description": "Npi\r\n",
            "nullable": true
          },
          "ptan": {
            "type": "string",
            "description": "Ptan\r\n",
            "nullable": true
          },
          "specialtyPracticeId": {
            "type": "integer",
            "description": "SpecialityPracticeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "commercialNo": {
            "type": "string",
            "description": "CommercialNo\r\n",
            "nullable": true
          },
          "providerLocation": {
            "type": "string",
            "description": "ProviderLocation\r\n",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "description": "Signature\r\n",
            "nullable": true
          },
          "overrideSubmissionToPrint": {
            "type": "boolean",
            "description": "OverrideSubmissionToPrint\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Branch Provider address and contact Info model\r\n"
      },
      "WebAPI.Areas.Insurance.Models.InsuranceBranchModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "description": "InsuranceId\r\n",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64"
          },
          "overriddenBranchId": {
            "type": "integer",
            "description": "OverriddenBranchId\r\n",
            "format": "int64"
          },
          "general": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchGeneralModel"
          },
          "eclaim": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchEclaimModel"
          },
          "billingProvider": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceBranchBillingProviderModel"
          },
          "payToProvider": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          }
        },
        "additionalProperties": false,
        "description": "InsuranceBranchModel\r\n"
      },
      "WebAPI.Areas.Insurance.Models.InsuranceClaimDateInfoModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "description": "insuranceId\r\n",
            "format": "int32"
          },
          "eClaim_PurchaseToDate": {
            "type": "string",
            "description": "eClaim_PurchaseToDate\r\n",
            "nullable": true
          },
          "eClaim_RentalToDate": {
            "type": "string",
            "description": "eClaim_RentalToDate\r\n",
            "nullable": true
          },
          "claimForm1500_PurchaseToDate": {
            "type": "string",
            "description": "claimForm1500_PurchaseToDate\r\n",
            "nullable": true
          },
          "claimForm1500_RentalToDate": {
            "type": "string",
            "description": "claimForm1500_RentalToDate\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InsuranceClaimDateInfoModel\r\n"
      },
      "WebAPI.Areas.Insurance.Models.InsuranceClaimSalesOrderCustomForms": {
        "type": "object",
        "properties": {
          "workersCompFormsEnable": {
            "type": "boolean",
            "nullable": true
          },
          "customFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceClaimSettingModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "format": "int32"
          },
          "electronicContactInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceEClaimContactInfo"
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimPAR"
          },
          "generalSettings": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimGeneral"
          },
          "box17": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox17"
          },
          "box24": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox24"
          },
          "box26": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox26"
          },
          "box29": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox29"
          },
          "box31": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox31"
          },
          "box32": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox32"
          },
          "box33": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox33"
          },
          "privateInvoice": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimPrivateInvoice"
          },
          "commercialAppealForms": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimCommercialAppealForms"
          },
          "insurancePaperClaimAgencyStatement": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsurancePaperClaimAgencyStatementModel"
          },
          "customForms": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceClaimSalesOrderCustomForms"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceContactModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceContactPersonId": {
            "type": "integer",
            "format": "int64"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "isDefaultContact": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceEClaimContactInfo": {
        "type": "object",
        "properties": {
          "doNotSubmitClaimsOnDOS": {
            "type": "boolean",
            "nullable": true
          },
          "includeRenderingProviderLoop": {
            "type": "boolean",
            "nullable": true
          },
          "includeTaxonomyInBillingAndRenderingProviderLoops": {
            "type": "boolean",
            "nullable": true
          },
          "includeReferringProviderLoop": {
            "type": "boolean",
            "nullable": true
          },
          "useOrderingProviderAsReferringProviderWhenNotSelectedOnInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "alwaysIncludeServiceFacilityLoop": {
            "type": "boolean",
            "nullable": true
          },
          "transmitNonPrimaryClaims": {
            "type": "boolean",
            "nullable": true
          },
          "includePrimaryCCNOnSecondaryClaims": {
            "type": "boolean",
            "nullable": true
          },
          "transmitTPLSegmentOnNonPrimaryInvoices": {
            "type": "boolean",
            "nullable": true
          },
          "doNotSendCOBInformationForBypassClaims": {
            "type": "boolean",
            "nullable": true
          },
          "transmitItemNDC": {
            "type": "boolean",
            "nullable": true
          },
          "transmitItemProductId": {
            "type": "boolean",
            "nullable": true
          },
          "transmitClosedPrimaryInvoices": {
            "type": "boolean",
            "nullable": true
          },
          "transmitZeroChargeItemsOnPrimaryInvoices": {
            "type": "boolean",
            "nullable": true
          },
          "includeSalesTax": {
            "type": "boolean",
            "nullable": true
          },
          "trasmitAllowInsteadOfCharge": {
            "type": "boolean",
            "nullable": true
          },
          "claimNumberSendBranchInsteadOfSalesOrder": {
            "type": "boolean",
            "nullable": true
          },
          "unassignedTransmitPatientPayment": {
            "type": "boolean",
            "nullable": true
          },
          "transmitParAtLineLevelInsteadOfClaimLevel": {
            "type": "boolean",
            "nullable": true
          },
          "transmitCLIA": {
            "type": "boolean",
            "nullable": true
          },
          "disableServiceDateSpan": {
            "type": "boolean",
            "nullable": true
          },
          "hasRuralCBAFeeSchedule": {
            "type": "boolean",
            "nullable": true
          },
          "box_9d_OtherPayerName": {
            "type": "boolean",
            "nullable": true
          },
          "isABNRequired": {
            "type": "boolean",
            "nullable": true
          },
          "submitEOBCreatedDateInsteadOfEOBCheckDate": {
            "type": "boolean",
            "nullable": true
          },
          "isUniquePARPerProduct": {
            "type": "boolean",
            "nullable": true
          },
          "hasAutoWriteOffRemarkCodeN598": {
            "type": "boolean",
            "nullable": true
          },
          "hasPostPaymentAsSecondary": {
            "type": "boolean",
            "nullable": true
          },
          "hasT4541_CO16Settings": {
            "type": "boolean",
            "nullable": true
          },
          "isBillEachQtyPerMonthAsOneLine": {
            "type": "boolean",
            "nullable": true
          },
          "isBox11PayerNameReplaced": {
            "type": "boolean",
            "nullable": true
          },
          "replacedPayerName": {
            "type": "string",
            "nullable": true
          },
          "isLoop2300PWKRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isTransmitBranchCommericalNumber": {
            "type": "boolean",
            "nullable": true
          },
          "hasPR_96_Adjustment_SwapSettings": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceEligibility": {
        "type": "object",
        "properties": {
          "eligibilityCheckFrequency": {
            "type": "string",
            "nullable": true
          },
          "includeMedicareDeductibleHoldings": {
            "type": "boolean",
            "nullable": true
          },
          "eligibilityPayerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceGeneralBasicInfo": {
        "type": "object",
        "properties": {
          "insuranceName": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "insuranceCompanyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxType": {
            "type": "string",
            "nullable": true
          },
          "priceTableId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverageLimits": {
            "type": "string",
            "nullable": true
          },
          "billTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payPercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "payorId": {
            "type": "string",
            "nullable": true
          },
          "enableSecondaryBillingCodes": {
            "type": "boolean",
            "nullable": true
          },
          "transmissionType": {
            "type": "string",
            "nullable": true
          },
          "commercialPayerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "claimFillingCode": {
            "type": "integer",
            "format": "int32"
          },
          "acceptCreditPayment": {
            "type": "boolean",
            "nullable": true
          },
          "parentInsuranceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timelyFilingDays": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceGeneralContactInfo": {
        "type": "object",
        "properties": {
          "contactFullName": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactUrl": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactFax": {
            "type": "string",
            "nullable": true
          },
          "contactAddress1": {
            "type": "string",
            "nullable": true
          },
          "contactAddress2": {
            "type": "string",
            "nullable": true
          },
          "contactCity": {
            "type": "string",
            "nullable": true
          },
          "contactState": {
            "type": "string",
            "nullable": true
          },
          "contactZipCode": {
            "type": "string",
            "nullable": true
          },
          "contactLatitude": {
            "type": "string",
            "nullable": true
          },
          "contactLongitude": {
            "type": "string",
            "nullable": true
          },
          "contactShowInAgencyStatementSummary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceGeneralInfoModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "basicInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralBasicInfo"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralContactInfo"
          },
          "otherInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceGeneralOtherInfo"
          },
          "eligibility": {
            "$ref": "#/components/schemas/WebAPI.Areas.Insurance.Models.InsuranceEligibility"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceGeneralOtherInfo": {
        "type": "object",
        "properties": {
          "claimFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "acceptsPaperClaims": {
            "type": "boolean",
            "nullable": true
          },
          "acceptsElectronicClaims": {
            "type": "boolean",
            "nullable": true
          },
          "attachProductClaimNote": {
            "type": "boolean",
            "nullable": true
          },
          "icern": {
            "type": "string",
            "nullable": true
          },
          "competitiveBidValidation": {
            "type": "boolean",
            "nullable": true
          },
          "requireDiagnosisOnSalesOrder": {
            "type": "boolean",
            "nullable": true
          },
          "nutritionCalculatorMethod": {
            "type": "string",
            "nullable": true
          },
          "autoConfirmSalesOrder": {
            "type": "boolean",
            "nullable": true
          },
          "autoConfirmPickupOrder": {
            "type": "boolean",
            "nullable": true
          },
          "autoConfirmExchangeOrder": {
            "type": "boolean",
            "nullable": true
          },
          "bulkConfirmDropShipOrder": {
            "type": "boolean",
            "nullable": true
          },
          "updateSalesOrderActualDate": {
            "type": "string",
            "nullable": true
          },
          "printSecondaryClaims": {
            "type": "boolean",
            "nullable": true
          },
          "suppressSubmissionOfSecondaryClaims": {
            "type": "boolean",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "nullable": true
          },
          "paymentReason": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isJopariClaimSubmitter": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "insuranceIdNameExp": {
            "type": "string",
            "nullable": true
          },
          "insuranceIdNameValue": {
            "type": "string",
            "nullable": true
          },
          "groupNameExp": {
            "type": "string",
            "nullable": true
          },
          "groupNameValue": {
            "type": "string",
            "nullable": true
          },
          "addressExp": {
            "type": "string",
            "nullable": true
          },
          "addressValue": {
            "type": "string",
            "nullable": true
          },
          "payerIdExp": {
            "type": "string",
            "nullable": true
          },
          "payerIdValue": {
            "type": "string",
            "nullable": true
          },
          "priceTableExp": {
            "type": "string",
            "nullable": true
          },
          "priceTableValue": {
            "type": "string",
            "nullable": true
          },
          "billTypeExp": {
            "type": "string",
            "nullable": true
          },
          "billTypeValue": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "submissionMethodExp": {
            "type": "string",
            "nullable": true
          },
          "submissionMethodValue": {
            "type": "string",
            "nullable": true
          },
          "payPercentExp": {
            "type": "string",
            "nullable": true
          },
          "payPercentValue": {
            "type": "string",
            "nullable": true
          },
          "claimFormExp": {
            "type": "string",
            "nullable": true
          },
          "claimFormValue": {
            "type": "string",
            "nullable": true
          },
          "eligibilityPayerCodeExp": {
            "type": "string",
            "nullable": true
          },
          "eligibilityPayerCodeValue": {
            "type": "string",
            "nullable": true
          },
          "eligibilityPayorIdExp": {
            "type": "string",
            "nullable": true
          },
          "eligibilityPayorIdValue": {
            "type": "string",
            "nullable": true
          },
          "claimFilingIndicatorCodeExp": {
            "type": "string",
            "nullable": true
          },
          "claimFilingIndicatorCodeValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceTypeCodeExp": {
            "type": "string",
            "nullable": true
          },
          "insuranceTypeCodeValue": {
            "type": "string",
            "nullable": true
          },
          "payorIdExp": {
            "type": "string",
            "nullable": true
          },
          "payorIdValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceIds": {
            "type": "string",
            "nullable": true
          },
          "showParentInsurance": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimAgencyStatementModel": {
        "type": "object",
        "properties": {
          "showPatientAddressOnAgencyStatementSummary": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox17": {
        "type": "object",
        "properties": {
          "box_17_ProviderType": {
            "type": "string",
            "nullable": true
          },
          "printAllowedAmountInsteadOfBillAmount": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox24": {
        "type": "object",
        "properties": {
          "box_24ag_Qualifier": {
            "type": "string",
            "nullable": true
          },
          "box_24c": {
            "type": "string",
            "nullable": true
          },
          "box_24e": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox26": {
        "type": "object",
        "properties": {
          "box_26": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox29": {
        "type": "object",
        "properties": {
          "populateBox_29": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox31": {
        "type": "object",
        "properties": {
          "box_31": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox32": {
        "type": "object",
        "properties": {
          "box_32_Name": {
            "type": "string",
            "nullable": true
          },
          "box_32_Pos11": {
            "type": "string",
            "nullable": true
          },
          "box_32_Pos12": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimBox33": {
        "type": "object",
        "properties": {
          "box_33_Name": {
            "type": "string",
            "nullable": true
          },
          "box_33_Address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimCommercialAppealForms": {
        "type": "object",
        "properties": {
          "level1": {
            "type": "string",
            "nullable": true
          },
          "level2": {
            "type": "string",
            "nullable": true
          },
          "level3": {
            "type": "string",
            "nullable": true
          },
          "level4": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimGeneral": {
        "type": "object",
        "properties": {
          "totals": {
            "type": "string",
            "nullable": true
          },
          "workersCompensationClaims": {
            "type": "boolean",
            "nullable": true
          },
          "printCLIA": {
            "type": "boolean",
            "nullable": true
          },
          "procedureCode": {
            "type": "string",
            "nullable": true
          },
          "suppressHeaderInformation": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimPAR": {
        "type": "object",
        "properties": {
          "parForm": {
            "type": "string",
            "nullable": true
          },
          "enforceStopDeliveryValidationForUnpluggedPAR": {
            "type": "boolean",
            "nullable": true
          },
          "parForEachSalesOrderProduct": {
            "type": "boolean",
            "nullable": true
          },
          "parRequiredWhenAmountGTPerProduct": {
            "type": "string",
            "nullable": true
          },
          "parRequiredWhenAmountGTPerHcpc": {
            "type": "string",
            "nullable": true
          },
          "parRequiredWhenAmountGTPerOrder": {
            "type": "string",
            "nullable": true
          },
          "parRequiredWhenAmountGTPerAmountBasedOn": {
            "type": "string",
            "nullable": true
          },
          "recipientType": {
            "type": "string",
            "nullable": true
          },
          "recipientName": {
            "type": "string",
            "nullable": true
          },
          "recipientAttention": {
            "type": "string",
            "nullable": true
          },
          "recipientFaxNumber": {
            "type": "string",
            "nullable": true
          },
          "recipientPhoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsurancePaperClaimPrivateInvoice": {
        "type": "object",
        "properties": {
          "showPaymentDetail": {
            "type": "boolean",
            "nullable": true
          },
          "showPaymentRemittanceFields": {
            "type": "boolean",
            "nullable": true
          },
          "showSalesOrderProductNotes": {
            "type": "boolean",
            "nullable": true
          },
          "showZeroChargeProducts": {
            "type": "boolean",
            "nullable": true
          },
          "envelopeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Insurance.Models.InsuranceProcedureModel": {
        "type": "object",
        "properties": {
          "insuranceFeeId": {
            "type": "integer",
            "description": "InsuranceFeeId\r\n",
            "format": "int32"
          },
          "insuranceId": {
            "type": "integer",
            "description": "InsuranceId\r\n",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId\r\n",
            "format": "int32"
          },
          "submissionMethod": {
            "type": "string",
            "description": "SubmissionMethod\r\n",
            "nullable": true
          },
          "priceType": {
            "type": "string",
            "description": "PriceType\r\n",
            "nullable": true
          },
          "spanDateType": {
            "type": "string",
            "description": "SpanDateType\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InsuranceSpanDateModel\r\n"
      },
      "WebAPI.Areas.Intake.Models.DiagnosisCodes": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxDoctorInfoModel": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int64"
          },
          "npi": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "licenseNo": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "specialtyPracticeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pecosCertified": {
            "type": "boolean"
          },
          "pecosNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxExtractedInfoModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "csrUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "faxStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "intakeCategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxPatientInfoModel"
          },
          "insuranceInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxInsuraceInfoModel"
          },
          "doctorInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxDoctorInfoModel"
          },
          "facilityInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxFacilityInfoModel"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "procedureCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxProcedureCodeInfoModel"
            },
            "nullable": true
          },
          "faxInsuraceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxInsuraceInfoModel"
            },
            "nullable": true
          },
          "deletedPatientInsuranceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxFacilityInfoModel": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "format": "int64"
          },
          "npi": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "commercialNumber": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "taxonomyCode": {
            "type": "string",
            "nullable": true
          },
          "workPhone": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxInsuraceInfoModel": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "format": "int64"
          },
          "relationshipToInsuredId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "markAsPrimary": {
            "type": "boolean",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "nullable": true
          },
          "groupNumber": {
            "type": "string",
            "nullable": true
          },
          "patientInsuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "payorLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "insuredLastName": {
            "type": "string",
            "nullable": true
          },
          "insuredFirstName": {
            "type": "string",
            "nullable": true
          },
          "insuredMiddleName": {
            "type": "string",
            "nullable": true
          },
          "insuredBirthDate": {
            "type": "string",
            "nullable": true
          },
          "insuredGender": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxPatientInfoModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "oldPatientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "accountTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxProcedureCodeInfoModel": {
        "type": "object",
        "properties": {
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxScanNotificationsToDeleteModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "personId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.FaxScanProductModel": {
        "type": "object",
        "properties": {
          "faxScanProductId": {
            "type": "integer",
            "format": "int64"
          },
          "preFaxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "priceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "optionName": {
            "type": "string",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int64"
          },
          "billQty": {
            "type": "number",
            "format": "double"
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64"
          },
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isSerializedProduct": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeBranchChangeModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "selectedFaxScanId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.IntakeFaxScanModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeBulkOperationAssignCSRModel": {
        "type": "object",
        "properties": {
          "selectedFaxScanId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "assignToCSRId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeBulkOperationModel": {
        "type": "object",
        "properties": {
          "selectedFaxScanId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "format": "int64"
          },
          "teamEmployeeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "assignedToTeam": {
            "type": "boolean"
          },
          "faxScanNotificationsToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxScanNotificationsToDeleteModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeFaxScanModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "electronicFileId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "electronicFileName": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeFaxWranglerCSRAssignModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "csrUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignedToTeam": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "faxScanIdExp": {
            "type": "string",
            "nullable": true
          },
          "faxScanIdValue": {
            "type": "string",
            "nullable": true
          },
          "receivedDateExp": {
            "type": "string",
            "nullable": true
          },
          "receivedDateValue": {
            "type": "string",
            "nullable": true
          },
          "faxFromExp": {
            "type": "string",
            "nullable": true
          },
          "faxFromValue": {
            "type": "string",
            "nullable": true
          },
          "faxToExp": {
            "type": "string",
            "nullable": true
          },
          "faxToValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "assigneeExp": {
            "type": "string",
            "nullable": true
          },
          "assigneeValue": {
            "type": "string",
            "nullable": true
          },
          "faxStatusExp": {
            "type": "string",
            "nullable": true
          },
          "faxStatusValue": {
            "type": "string",
            "nullable": true
          },
          "documentTypeExp": {
            "type": "string",
            "nullable": true
          },
          "documentTypeValue": {
            "type": "string",
            "nullable": true
          },
          "csrUserExp": {
            "type": "string",
            "nullable": true
          },
          "csrUserValue": {
            "type": "string",
            "nullable": true
          },
          "facilityNameExp": {
            "type": "string",
            "nullable": true
          },
          "facilityNameValue": {
            "type": "string",
            "nullable": true
          },
          "dobExp": {
            "type": "string",
            "nullable": true
          },
          "dobValue": {
            "type": "string",
            "nullable": true
          },
          "dosExp": {
            "type": "string",
            "nullable": true
          },
          "dosValue": {
            "type": "string",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "assetNumberExp": {
            "type": "string",
            "nullable": true
          },
          "assetNumberValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameExp": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameValue": {
            "type": "string",
            "nullable": true
          },
          "documentDisplayNameExp": {
            "type": "string",
            "nullable": true
          },
          "documentDisplayNameValue": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "completedStatus": {
            "type": "boolean",
            "nullable": true
          },
          "deniedStatus": {
            "type": "boolean",
            "nullable": true
          },
          "incompleteStatus": {
            "type": "boolean",
            "nullable": true
          },
          "intakeCategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "intakeCategoryNameValue": {
            "type": "string",
            "nullable": true
          },
          "intakeCategoryNameExp": {
            "type": "string",
            "nullable": true
          },
          "loadOnlyCurrentUserAssignedRecords": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientInsurancesValue": {
            "type": "string",
            "nullable": true
          },
          "incompleteReasonExp": {
            "type": "string",
            "nullable": true
          },
          "incompleteReasonValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeIncompleteReasonModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "preFaxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "pageType": {
            "type": "string",
            "nullable": true
          },
          "incompleteReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "faxPurpose": {
            "type": "string",
            "nullable": true
          },
          "faxFrom": {
            "type": "string",
            "nullable": true
          },
          "faxTo": {
            "type": "string",
            "nullable": true
          },
          "faxStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileSize": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "displayFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.IntakeStatusUpdate": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "csrUserId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "facilityId": {
            "type": "integer",
            "format": "int64"
          },
          "doctorId": {
            "type": "integer",
            "format": "int64"
          },
          "faxStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.OcrFaxSaveModel": {
        "type": "object",
        "properties": {
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "csrUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "intakeCategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxPatientInfoModel"
          },
          "insuranceInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxInsuraceInfoModel"
          },
          "doctorInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxDoctorInfoModel"
          },
          "facilityInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxFacilityInfoModel"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.DiagnosisCodes"
            },
            "nullable": true
          },
          "faxInsuraceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.FaxInsuraceInfoModel"
            },
            "nullable": true
          },
          "deletedPatientInsuranceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeBulkOperationModel": {
        "type": "object",
        "properties": {
          "selectedPreFaxScanId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "format": "int64"
          },
          "teamEmployeeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "assignedToTeam": {
            "type": "boolean"
          },
          "preIntakeNotificationsToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Intake.Models.PreIntakeNotificationsToDeleteModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "preFaxScanIdExp": {
            "type": "string",
            "nullable": true
          },
          "preFaxScanIdValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameExp": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameValue": {
            "type": "string",
            "nullable": true
          },
          "assetNumberExp": {
            "type": "string",
            "nullable": true
          },
          "assetNumberValue": {
            "type": "string",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "receivedDateExp": {
            "type": "string",
            "nullable": true
          },
          "receivedDateValue": {
            "type": "string",
            "nullable": true
          },
          "dosExp": {
            "type": "string",
            "nullable": true
          },
          "dosValue": {
            "type": "string",
            "nullable": true
          },
          "dobExp": {
            "type": "string",
            "nullable": true
          },
          "dobValue": {
            "type": "string",
            "nullable": true
          },
          "faxFromExp": {
            "type": "string",
            "nullable": true
          },
          "faxFromValue": {
            "type": "string",
            "nullable": true
          },
          "faxToExp": {
            "type": "string",
            "nullable": true
          },
          "faxToValue": {
            "type": "string",
            "nullable": true
          },
          "preFaxStatusExp": {
            "type": "string",
            "nullable": true
          },
          "preFaxStatusValue": {
            "type": "string",
            "nullable": true
          },
          "documentTypeExp": {
            "type": "string",
            "nullable": true
          },
          "documentTypeValue": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "completedStatus": {
            "type": "boolean",
            "nullable": true
          },
          "deniedStatus": {
            "type": "boolean",
            "nullable": true
          },
          "incompleteStatus": {
            "type": "boolean",
            "nullable": true
          },
          "intakeCategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "intakeCategoryNameValue": {
            "type": "string",
            "nullable": true
          },
          "intakeCategoryNameExp": {
            "type": "string",
            "nullable": true
          },
          "assigneeExp": {
            "type": "string",
            "nullable": true
          },
          "assigneeValue": {
            "type": "string",
            "nullable": true
          },
          "loadOnlyCurrentUserAssignedRecords": {
            "type": "boolean",
            "nullable": true
          },
          "incompleteReasonExp": {
            "type": "string",
            "nullable": true
          },
          "incompleteReasonValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeModel": {
        "type": "object",
        "properties": {
          "preFaxScanId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "faxScanId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dos": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assetNumber": {
            "type": "string",
            "nullable": true
          },
          "insuranceName": {
            "type": "string",
            "nullable": true
          },
          "preFaxStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "faxScanProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "nullable": true
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isFax": {
            "type": "boolean",
            "nullable": true
          },
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "autoAddProductSerialNumber": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeNotificationsToDeleteModel": {
        "type": "object",
        "properties": {
          "preIntakeId": {
            "type": "integer",
            "format": "int64"
          },
          "personId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeOCRPreInfo": {
        "type": "object",
        "properties": {
          "preFaxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "fileBase64": {
            "type": "string",
            "nullable": true
          },
          "assetNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Intake.Models.PreIntakeStatusUpdate": {
        "type": "object",
        "properties": {
          "preFaxScanId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.InventoryAdjustmentModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inventoryTransactionAction": {
            "type": "string",
            "nullable": true
          },
          "inventoryReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.InventoryTransaction": {
        "type": "object",
        "properties": {
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.InventoryTransferModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "destBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transferQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inventoryTransactionAction": {
            "type": "string",
            "nullable": true
          },
          "inventoryReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.InventotryReceiveWithSerialnumberModel": {
        "type": "object",
        "properties": {
          "inventotryTransaction": {
            "$ref": "#/components/schemas/WebAPI.Areas.Inventory.Models.InventotryTransactionModel"
          },
          "productSerialNumber": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductSerialNumberModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.InventotryTransactionModel": {
        "type": "object",
        "properties": {
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "barcodeNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "purchaseOrderProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPurchaseOrderReceive": {
            "type": "boolean",
            "nullable": true
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inventoryTransactionAction": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.ReplenishmentSettingModel": {
        "type": "object",
        "properties": {
          "productInventoryId": {
            "type": "integer",
            "format": "int64"
          },
          "replenishmentQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reorderPoint": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.UnderMaintenanceInventory": {
        "type": "object",
        "properties": {
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "maintenanceStatusId": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "maintenanceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Inventory.Models.UpdateyReceiveInventoryTransactionBranchIdModel": {
        "type": "object",
        "properties": {
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.InventoryManagement.Models.ProductInventoryGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "searchKey": {
            "type": "string",
            "nullable": true
          },
          "searchBySerialNumberOrAssestNumber": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "quantityExp": {
            "type": "string",
            "nullable": true
          },
          "quantityValue": {
            "type": "string",
            "nullable": true
          },
          "productNumberExp": {
            "type": "string",
            "nullable": true
          },
          "productNumberValue": {
            "type": "string",
            "nullable": true
          },
          "productDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "productDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "productTypeNameExp": {
            "type": "string",
            "nullable": true
          },
          "productTypeNameValue": {
            "type": "string",
            "nullable": true
          },
          "supplierNameExp": {
            "type": "string",
            "nullable": true
          },
          "supplierNameValue": {
            "type": "string",
            "nullable": true
          },
          "replenishmentQtyExp": {
            "type": "string",
            "nullable": true
          },
          "replenishmentQtyValue": {
            "type": "string",
            "nullable": true
          },
          "reorderPointExp": {
            "type": "string",
            "nullable": true
          },
          "reorderPointValue": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inventoryStatus": {
            "type": "string",
            "nullable": true
          },
          "stockingUOMId": {
            "type": "string",
            "nullable": true
          },
          "adjustedQtyExp": {
            "type": "string",
            "nullable": true
          },
          "adjustedQtyValue": {
            "type": "string",
            "nullable": true
          },
          "maintenanceStatusNameExp": {
            "type": "string",
            "nullable": true
          },
          "maintenanceStatusNameValue": {
            "type": "string",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "adjustmentReasonExp": {
            "type": "string",
            "nullable": true
          },
          "adjustmentReasonValue": {
            "type": "string",
            "nullable": true
          },
          "upc": {
            "type": "string",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "showBelowReorderOnly": {
            "type": "boolean",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "typeFilter": {
            "type": "string",
            "nullable": true
          },
          "branchNameExp": {
            "type": "string",
            "nullable": true
          },
          "branchNameValue": {
            "type": "string",
            "nullable": true
          },
          "routeNameExp": {
            "type": "string",
            "nullable": true
          },
          "routeNameValue": {
            "type": "string",
            "nullable": true
          },
          "adjustedStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.ClaimPayerSubmissionType": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "acceptsElectronicClaims": {
            "type": "boolean"
          },
          "acceptsPaperClaims": {
            "type": "boolean"
          },
          "payerSubmissionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.CreateInvoiceFromSalesOrderModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "priceOptionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PriceOptionList"
            },
            "nullable": true
          },
          "isSendNotification": {
            "type": "boolean",
            "nullable": true
          },
          "actualDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.InvoiceAbilityModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.InvoiceBatchCreateViewModel": {
        "type": "object",
        "properties": {
          "invoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "claimSubmitterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "request": {
            "type": "string",
            "nullable": true
          },
          "payerLevel": {
            "type": "string",
            "nullable": true
          },
          "insurance": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          },
          "resposneJson": {
            "type": "string",
            "nullable": true
          },
          "invoiceBatchId": {
            "type": "integer",
            "format": "int32"
          },
          "insuranceId": {
            "type": "string",
            "nullable": true
          },
          "electronicClaim": {
            "type": "boolean"
          },
          "paperClaim": {
            "type": "boolean"
          },
          "patientStatement": {
            "type": "boolean"
          },
          "claimFormId": {
            "type": "integer",
            "format": "int32"
          },
          "accountTypeId": {
            "type": "string",
            "nullable": true
          },
          "accountTypeName": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupId": {
            "type": "string",
            "nullable": true
          },
          "insuranceGroupName": {
            "type": "string",
            "nullable": true
          },
          "electronicClaimBatchId": {
            "type": "integer",
            "format": "int64"
          },
          "isRegenerate": {
            "type": "boolean"
          },
          "createFollowUp": {
            "type": "boolean"
          },
          "attchments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.ClaimManagement.Models.InvoiceBatchFilesModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.InvoiceLineItemTPA": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineItemId": {
            "type": "integer",
            "format": "int32"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "tpaName": {
            "type": "string",
            "nullable": true
          },
          "tpaAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tpaAgreementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.InvoiceViewModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "isHold": {
            "type": "boolean"
          },
          "isResubmitClaim": {
            "type": "boolean"
          },
          "invoiceNote": {
            "type": "string",
            "nullable": true
          },
          "payerBox_10d": {
            "type": "string",
            "nullable": true
          },
          "payerBox_19": {
            "type": "string",
            "nullable": true
          },
          "payerSubmissionType": {
            "type": "string",
            "nullable": true
          },
          "isUpdateOrderingProvider": {
            "type": "boolean",
            "nullable": true
          },
          "claimOrderingProviderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isUpdateFacility": {
            "type": "boolean",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.PatientEFiles": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.PriceOptionList": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "optionName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.PrintClaimFormModel": {
        "type": "object",
        "properties": {
          "printSelection": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cmnId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cmnFormCode": {
            "type": "string",
            "nullable": true
          },
          "cmnFormPrint": {
            "type": "boolean",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "patientEFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Invoices.Models.PatientEFiles"
            },
            "nullable": true
          },
          "documentSave": {
            "type": "boolean"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "payorLevel": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "printPreview": {
            "type": "boolean"
          },
          "paddingLeft": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingRight": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingTop": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "paddingBottom": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.PrintPatientInvoiceSummaryModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceBatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAsyncCall": {
            "type": "boolean",
            "nullable": true
          },
          "branchKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Invoices.Models.ResubmitClaimModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "request": {
            "type": "string",
            "nullable": true
          },
          "missingPayerList": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.IronOCR.Models.FaxInfo": {
        "type": "object",
        "properties": {
          "ocrTemplateFaxNumberId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.IronOCR.Models.OCRDocumentModel": {
        "type": "object",
        "properties": {
          "localFilePath": {
            "type": "string",
            "nullable": true
          },
          "bytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "stream": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "ocrTemplateTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "fileExtention": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.IronOCR.Models.PatientOcrTemplateGeneralSaveModel": {
        "type": "object",
        "properties": {
          "ocrTemplateTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int32"
          },
          "faxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.IronOCR.Models.FaxInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.IronOCR.Models.PatientOcrTemplateLabelSaveModel": {
        "type": "object",
        "properties": {
          "ocrTemplateTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "patientName": {
            "type": "string",
            "nullable": true
          },
          "patientBirthDate": {
            "type": "string",
            "nullable": true
          },
          "patientPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "patientAddress": {
            "type": "string",
            "nullable": true
          },
          "providerNPI": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AccountTypeModel": {
        "type": "object",
        "properties": {
          "accountTypeId": {
            "type": "integer",
            "description": "AccountTypeId\r\n",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "noOfDaysAfterToFollowUp": {
            "type": "integer",
            "description": "NoOfDaysAfterToFollowUp \r\n",
            "format": "int32",
            "nullable": true
          },
          "accountOwnerId": {
            "type": "integer",
            "description": "AccountOwnerId\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AdjustmentReasonModel": {
        "type": "object",
        "properties": {
          "adjustmentActionId": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "primaryActionId": {
            "type": "integer",
            "format": "int32"
          },
          "secondaryActionId": {
            "type": "integer",
            "format": "int32"
          },
          "tertiaryActionId": {
            "type": "integer",
            "format": "int32"
          },
          "quaternaryActionId": {
            "type": "integer",
            "format": "int32"
          },
          "quinaryActionId": {
            "type": "integer",
            "format": "int32"
          },
          "senaryActionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AppointmentBlockTypeModel": {
        "type": "object",
        "properties": {
          "appointmentBlockTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "appointmentBlockTypeName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "isBranch": {
            "type": "boolean"
          },
          "isEmployee": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AppointmentCancellationReasonModel": {
        "type": "object",
        "properties": {
          "appointmentCancellationReasonId": {
            "type": "integer",
            "description": "AppointmentCancellationReasonId\r\n",
            "format": "int64"
          },
          "appointmentCancellationReasonName": {
            "type": "string",
            "description": "AppointmentCancellationReason\r\n",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "AppointmentCancellationReason\r\n"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AppointmentStatusModel": {
        "type": "object",
        "properties": {
          "appointmentStatusId": {
            "type": "integer",
            "description": "AppointmentStatusId\r\n",
            "format": "int64"
          },
          "appointmentStatusName": {
            "type": "string",
            "description": "AppointmentStatusName\r\n",
            "nullable": true
          },
          "appointmentStatusType": {
            "type": "string",
            "description": "AppointmentStatusType\r\n",
            "nullable": true
          },
          "appointmentStatusStyle": {
            "type": "string",
            "description": "AppointmentStatusStyle\r\n",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "AppointmentCancellationReason\r\n"
          },
          "isBold": {
            "type": "boolean",
            "description": "IsBold\r\n"
          },
          "isDefault": {
            "type": "boolean",
            "description": "IsDefault\r\n"
          },
          "isItalic": {
            "type": "boolean",
            "description": "IsItalic\r\n"
          },
          "textDecoration": {
            "type": "string",
            "description": "TextDecoration\r\n",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Color \r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.AppointmentTypeModel": {
        "type": "object",
        "properties": {
          "appointmentTypeId": {
            "type": "integer",
            "description": "AppointmentTypeId\r\n",
            "format": "int64"
          },
          "appointmentTypeName": {
            "type": "string",
            "description": "AppointmentTypeName\r\n",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "Duration\r\n",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Color\r\n",
            "nullable": true
          },
          "isBlock": {
            "type": "boolean",
            "description": "IsBlock\r\n"
          },
          "active": {
            "type": "boolean",
            "description": "AppointmentCancellationReason\r\n"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.BundleModel": {
        "type": "object",
        "properties": {
          "copyFromBundleId": {
            "type": "integer",
            "description": "CopyFromBundleId\r\n",
            "format": "int32"
          },
          "bundleId": {
            "type": "integer",
            "description": "BundleId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Branches\r\n",
            "nullable": true
          },
          "autoAddNewlyCreatedBranches": {
            "type": "boolean",
            "description": "AutoAddNewlyCreatedBranches\r\n"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.Bundle_ProudctItem"
            },
            "description": "Branches\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "BundleModel\r\n"
      },
      "WebAPI.Areas.Master.Models.Bundle_ProudctItem": {
        "type": "object",
        "properties": {
          "bundleId": {
            "type": "integer",
            "format": "int32"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "optionName": {
            "type": "string",
            "nullable": true
          },
          "productFeeScheduleId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.CarrierTypeSettingModel": {
        "type": "object",
        "properties": {
          "claimSubmitterId": {
            "type": "integer",
            "description": "claimSubmitterId\r\n",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "description": "username\r\n",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "password\r\n",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "description": "hostname\r\n",
            "nullable": true
          },
          "sshHostKey": {
            "type": "string",
            "description": "sshHostKey\r\n",
            "nullable": true
          },
          "portNumber": {
            "type": "string",
            "description": "portNumber\r\n",
            "nullable": true
          },
          "canDownloadEdiFile": {
            "type": "boolean",
            "description": "canDownloadEdiFile\r\n",
            "nullable": true
          },
          "ediFilePattern": {
            "type": "string",
            "description": "ediFileReturn\r\n",
            "nullable": true
          },
          "ediDownloadPath": {
            "type": "string",
            "description": "ediDownloadPath\r\n",
            "nullable": true
          },
          "ediRowDelimeter": {
            "type": "string",
            "description": "ediRowDelimeter\r\n",
            "nullable": true
          },
          "ediColumnDelimeter": {
            "type": "string",
            "description": "ediColumnDelimeter\r\n",
            "nullable": true
          },
          "submitterName": {
            "type": "string",
            "description": "ediColumnDelimeter\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CarrierTypeSettingModel\r\n"
      },
      "WebAPI.Areas.Master.Models.ClaimSubmitterModel": {
        "type": "object",
        "properties": {
          "claimSubmitterId": {
            "type": "integer",
            "description": "claimSubmitterId\r\n",
            "format": "int32"
          },
          "receiverName": {
            "type": "string",
            "description": "receiverName\r\n",
            "nullable": true
          },
          "receiverId": {
            "type": "string",
            "description": "receiverId\r\n",
            "nullable": true
          },
          "receiverIdQualifier": {
            "type": "string",
            "description": "receiverIdQualifier\r\n",
            "nullable": true
          },
          "senderId": {
            "type": "string",
            "description": "senderId\r\n",
            "nullable": true
          },
          "senderIdQualifier": {
            "type": "string",
            "description": "senderIdQualifier\r\n",
            "nullable": true
          },
          "submitterId": {
            "type": "string",
            "description": "submitterId\r\n",
            "nullable": true
          },
          "clientNpi": {
            "type": "string",
            "description": "clientNpi\r\n",
            "nullable": true
          },
          "carrierCode": {
            "type": "string",
            "description": "carrierCode\r\n",
            "nullable": true
          },
          "canReceiveEClaims": {
            "type": "boolean",
            "description": "canReceiveEclaim\r\n",
            "nullable": true
          },
          "canReceiveEligibility": {
            "type": "boolean",
            "description": "canReceiveEligibility\r\n",
            "nullable": true
          },
          "canAutomaticDownloadRemits": {
            "type": "boolean",
            "description": "canAutoDownloadRemits\r\n",
            "nullable": true
          },
          "canReceiveClaimStatusRequests": {
            "type": "boolean",
            "description": "canReceiveClaimStatusRequests\r\n",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "isDefault\r\n",
            "nullable": true
          },
          "submitterName": {
            "type": "string",
            "description": "SubmitterName\r\n",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "accountKey": {
            "type": "string",
            "nullable": true
          },
          "accessKey": {
            "type": "string",
            "nullable": true
          },
          "accessSecret": {
            "type": "string",
            "nullable": true
          },
          "jwtTokenUrl": {
            "type": "string",
            "nullable": true
          },
          "apiUrl": {
            "type": "string",
            "nullable": true
          },
          "requestMode": {
            "type": "string",
            "nullable": true
          },
          "jwtToken": {
            "type": "string",
            "nullable": true
          },
          "enableAutoPostERA": {
            "type": "boolean",
            "nullable": true
          },
          "enableAutoCreateClaimBatch": {
            "type": "boolean",
            "nullable": true
          },
          "enableAutoEligibilityVerification": {
            "type": "boolean",
            "nullable": true
          },
          "enableAutoSubmitClaimBatch": {
            "type": "boolean",
            "nullable": true
          },
          "isJopariClaimSubmitter": {
            "type": "boolean",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "sshHostKey": {
            "type": "string",
            "nullable": true
          },
          "portNumber": {
            "type": "string",
            "nullable": true
          },
          "ediDownloadEnable": {
            "type": "boolean",
            "nullable": true
          },
          "ediFilePattern": {
            "type": "string",
            "nullable": true
          },
          "ediDownloadPath": {
            "type": "string",
            "nullable": true
          },
          "ediRowDelimiter": {
            "type": "string",
            "nullable": true
          },
          "ediColumnDelimiter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ClaimSubmitterModel\r\n"
      },
      "WebAPI.Areas.Master.Models.Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ColorModel": {
        "type": "object",
        "properties": {
          "colorId": {
            "type": "integer",
            "format": "int64"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "hexValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.CommercialPayerModel": {
        "type": "object",
        "properties": {
          "commercialPayerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commercialPayerName": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "claimFilingIndicatorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isMyAbilityPayer": {
            "type": "boolean",
            "nullable": true
          },
          "isJopariPayer": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.CompetitionModel": {
        "type": "object",
        "properties": {
          "competitionId": {
            "type": "integer",
            "description": "CompetitionId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          },
          "isSystem": {
            "type": "boolean",
            "description": "IsSystem"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DeliveryCancelReasonModel": {
        "type": "object",
        "properties": {
          "deliveryCancelReasonId": {
            "type": "integer",
            "description": "DeliveryCancelReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DiagnosisModel": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "description": "DiagnosisId\r\n",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "SortbyOrder\r\n",
            "format": "int32"
          },
          "diagCategory": {
            "type": "string",
            "description": "DiagCategory\r\n",
            "nullable": true
          },
          "isCustom": {
            "type": "boolean",
            "description": "IsCustom\r\n"
          },
          "active": {
            "type": "boolean",
            "description": "Active\r\n"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DmeConfig": {
        "type": "object",
        "properties": {
          "dmeConfigId": {
            "type": "integer",
            "format": "int32"
          },
          "dmeConfigLookUpValue": {
            "type": "string",
            "nullable": true
          },
          "dmeConfigValue": {
            "type": "string",
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DmeConfigSetting": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "dmeConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DmeConfig"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DoctorGroupModel": {
        "type": "object",
        "properties": {
          "doctorGroupId": {
            "type": "integer",
            "description": "DoctorGroupId\r\n",
            "format": "int64"
          },
          "doctorGroupName": {
            "type": "string",
            "description": "DoctorGroupName\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DoctorsToAddDelete": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.DocumentTypeModel": {
        "type": "object",
        "properties": {
          "documentTypeId": {
            "type": "integer",
            "description": "DocumentTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "description": "CategoryId\r\n",
            "format": "int32",
            "nullable": true
          },
          "showOnPreIntake": {
            "type": "boolean",
            "description": "ShowOnPreIntake\r\n"
          },
          "reportTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.FacilityGroupModel": {
        "type": "object",
        "properties": {
          "facilityGroupId": {
            "type": "integer",
            "description": "FacilityGroupId\r\n",
            "format": "int64"
          },
          "facilityGroupName": {
            "type": "string",
            "description": "FacilityGroupName\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.FacilityModel": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "description": "FacilityId\r\n",
            "format": "int64"
          },
          "facilityName": {
            "type": "string",
            "description": "FacilityName\r\n",
            "nullable": true
          },
          "facilityGroupId": {
            "type": "integer",
            "description": "FacilityGroupId\r\n",
            "format": "int64",
            "nullable": true
          },
          "npi": {
            "type": "string",
            "description": "NPI\r\n",
            "nullable": true
          },
          "commercialNumber": {
            "type": "string",
            "description": "CommercialNumber\r\n",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "description": "LocationId\r\n",
            "format": "int64",
            "nullable": true
          },
          "specialtyPracticeId": {
            "type": "integer",
            "description": "SpecialtyPracticeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "priorSystemKey": {
            "type": "string",
            "description": "PriorSystemKey\r\n",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          },
          "billingAddress1": {
            "type": "string",
            "description": "BillingAddress1\r\n",
            "nullable": true
          },
          "billingAddress2": {
            "type": "string",
            "description": "BillingAddress2\r\n",
            "nullable": true
          },
          "billingCity": {
            "type": "string",
            "description": "BillingCity\r\n",
            "nullable": true
          },
          "billingState": {
            "type": "string",
            "description": "BillingState\r\n",
            "nullable": true
          },
          "billingZip": {
            "type": "string",
            "description": "BillingZip\r\n",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "description": "ContactPerson\r\n",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email\r\n",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL\r\n",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone\r\n",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax\r\n",
            "nullable": true
          },
          "billingLatitude": {
            "type": "string",
            "nullable": true
          },
          "billingLongitude": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingRepId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "doctorsToAdd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorsToAddDelete"
            },
            "nullable": true
          },
          "doctorsToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DoctorsToAddDelete"
            },
            "nullable": true
          },
          "defaultInventoryBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.FeeInfo": {
        "type": "object",
        "properties": {
          "feeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isTaxable": {
            "type": "boolean"
          },
          "isPriceChangeable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.FollowUpReasonModel": {
        "type": "object",
        "properties": {
          "followUpReasonId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.FunctionalAbilityModel": {
        "type": "object",
        "properties": {
          "functionalAbilityId": {
            "type": "integer",
            "description": "FunctionalAbilityId\r\n",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.GetSerialNumberModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "assetNumberExp": {
            "type": "string",
            "nullable": true
          },
          "assetNumberValue": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryCreatedDateExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryCreatedDateValue": {
            "type": "string",
            "nullable": true
          },
          "onHandExp": {
            "type": "string",
            "nullable": true
          },
          "onHandValue": {
            "type": "string",
            "nullable": true
          },
          "onRentExp": {
            "type": "string",
            "nullable": true
          },
          "onRentValue": {
            "type": "string",
            "nullable": true
          },
          "committedExp": {
            "type": "string",
            "nullable": true
          },
          "committedValue": {
            "type": "string",
            "nullable": true
          },
          "soldOrAdjustedExp": {
            "type": "string",
            "nullable": true
          },
          "soldOrAdjustedValue": {
            "type": "string",
            "nullable": true
          },
          "branchAddressExp": {
            "type": "string",
            "nullable": true
          },
          "branchAddressValue": {
            "type": "string",
            "nullable": true
          },
          "isFaxExp": {
            "type": "string",
            "nullable": true
          },
          "isFaxValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryTransactionBranchExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryTransactionBranchValue": {
            "type": "string",
            "nullable": true
          },
          "isIntakeCommittedExp": {
            "type": "string",
            "nullable": true
          },
          "isIntakeCommittedValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.HoldReasonModel": {
        "type": "object",
        "properties": {
          "holdReasonId": {
            "type": "integer",
            "description": "HoldReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.InsuranceCompanyModel": {
        "type": "object",
        "properties": {
          "insuranceCompanyId": {
            "type": "integer",
            "description": "InsuranceCompanyId\r\n",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.IntakeCategoryModel": {
        "type": "object",
        "properties": {
          "intakeCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "hexValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.InventoryAdjustmentReasonModel": {
        "type": "object",
        "properties": {
          "inventoryAdjustmentReasonId": {
            "type": "integer",
            "description": "InventoryAdjustmentReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.InventoryTransferReasonModel": {
        "type": "object",
        "properties": {
          "inventoryTransferReasonId": {
            "type": "integer",
            "description": "InventoryTransferReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.MaintainModal": {
        "type": "object",
        "properties": {
          "maintainModalId": {
            "type": "integer",
            "description": "MaintainModalId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ManufactureModel": {
        "type": "object",
        "properties": {
          "manufacturerId": {
            "type": "integer",
            "description": "ManufactureId\r\n",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "description": "CompanyName\r\n",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "description": "ContactName\r\n",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "primaryNumber": {
            "type": "string",
            "description": "PrimaryNumber\r\n",
            "nullable": true
          },
          "secondaryNumber": {
            "type": "string",
            "description": "PrimaryNumber\r\n",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax\r\n",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email\r\n",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "description": "BankName\r\n",
            "nullable": true
          },
          "bankAccountNo": {
            "type": "string",
            "description": "BankAccountNo\r\n",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.MessageSaveModel": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "clientIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.Client"
            },
            "nullable": true
          },
          "userAcknowledgementRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isKnownIssue": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.MultipleDiagnosisMode": {
        "type": "object",
        "properties": {
          "diagnosisList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.DiagnosisModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.NoteReasonModel": {
        "type": "object",
        "properties": {
          "noteReasonId": {
            "type": "integer",
            "description": "SupplierId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "noteType": {
            "type": "string",
            "description": "NoteType\r\n",
            "nullable": true
          },
          "assignNotesToCreater": {
            "type": "boolean",
            "description": "AssignNotesToCreater\r\n",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Severity\r\n",
            "nullable": true
          },
          "noteStatus": {
            "type": "string",
            "description": "NoteStatus\r\n",
            "nullable": true
          },
          "noteLockState": {
            "type": "string",
            "description": "NoteLockState\r\n",
            "nullable": true
          },
          "acknowledgementRequired": {
            "type": "boolean",
            "description": "AcknowledgementRequired\r\n",
            "nullable": true
          },
          "autoDueDate": {
            "type": "boolean",
            "description": "AutoDueDate\r\n",
            "nullable": true
          },
          "daysAfterCreation": {
            "type": "integer",
            "description": "DaysAfterCreation\r\n",
            "format": "int32",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Subject\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "NoteReasonModel\r\n"
      },
      "WebAPI.Areas.Master.Models.PartnerClientSetting": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "partnerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PartnerClientSettingModel": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "partnerClientSetting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PartnerClientSetting"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PartnerSetting": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PatientAccessModel": {
        "type": "object",
        "properties": {
          "patientAccessId": {
            "type": "integer",
            "description": "PatientAccessId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PatientTypeModel": {
        "type": "object",
        "properties": {
          "patientTypeId": {
            "type": "integer",
            "description": "PatientTypeId\r\n",
            "format": "int64"
          },
          "patientType": {
            "type": "string",
            "description": "PatientType\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PayReasonModel": {
        "type": "object",
        "properties": {
          "paymentReasonId": {
            "type": "integer",
            "description": "PayReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "paymentTypeId": {
            "type": "integer",
            "description": "PaymentType\r\n",
            "format": "int32",
            "nullable": true
          },
          "deductiblePayment": {
            "type": "boolean",
            "description": "DeductiblePayment\r\n",
            "nullable": true
          },
          "defaultForSystemCreatedAppliedPayments": {
            "type": "boolean",
            "description": "DefaultForSystemCreatedAppliedPayments\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PayReasonModel\r\n"
      },
      "WebAPI.Areas.Master.Models.PaymentDetailReasonModel": {
        "type": "object",
        "properties": {
          "paymentDetailReasonId": {
            "type": "integer",
            "description": "PaymentDetailReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "branchGroup": {
            "type": "string",
            "description": "BranchGroup\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PickupReasonModel": {
        "type": "object",
        "properties": {
          "pickupReasonId": {
            "type": "integer",
            "description": "PickupReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "pickupReasonValidationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PickupReasonValidation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PickupReasonValidation": {
        "type": "object",
        "properties": {
          "fieldValidationFirst": {
            "type": "string",
            "nullable": true
          },
          "fieldValidationType": {
            "type": "string",
            "nullable": true
          },
          "fieldValidationSecond": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PickupWorkInProgressStateModel": {
        "type": "object",
        "properties": {
          "pickupWorkInProgressStateId": {
            "type": "integer",
            "description": "WorkInProgressStateId\r\n",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "fromPickupWorkInProgressStateId": {
            "type": "integer",
            "format": "int32"
          },
          "toPickupWorkInProgressStateId": {
            "type": "integer",
            "format": "int32"
          },
          "fromOrderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "toOrderNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PlaceOfServiceModel": {
        "type": "object",
        "properties": {
          "placeOfServiceId": {
            "type": "integer",
            "description": "PlaceOfServiceId\r\n",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "isDefault": {
            "type": "string",
            "description": "IsDefault\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PlaceOfServiceModel\r\n"
      },
      "WebAPI.Areas.Master.Models.PrintPurchaseOrderModel": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProcedureCodeModel": {
        "type": "object",
        "properties": {
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dmeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "feeInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.FeeInfo"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductCategoriesModel": {
        "type": "object",
        "properties": {
          "productCategoryId": {
            "type": "integer",
            "description": "ProductCategoryId\r\n",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowGeneralSaveModel": {
        "type": "object",
        "properties": {
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productWorkFlowStepId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "productWorkFlowStep": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStep"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowProductUpdate": {
        "type": "object",
        "properties": {
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productWorkFlowProductIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStep": {
        "type": "object",
        "properties": {
          "productWorkFlowStepId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isResupplyProductSteps": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductWorkFlow.ProductWorkFlowStepDelete": {
        "type": "object",
        "properties": {
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productWorkFlowStepId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isAllDelete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ProductWorkFlow.WorkFlowProductAdd": {
        "type": "object",
        "properties": {
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64"
          },
          "productIteamId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseOrderModels.CopyPurchaseOrderModel": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderBulkUpdateModel": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderProductList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProduct": {
        "type": "object",
        "properties": {
          "purchaseOrderProductId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "unitAmount": {
            "type": "number",
            "format": "double"
          },
          "extAmount": {
            "type": "number",
            "format": "double"
          },
          "redRockTypeId": {
            "type": "string",
            "nullable": true
          },
          "redRockOrderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderProductModel": {
        "type": "object",
        "properties": {
          "purchaseOrderProductId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "productQty": {
            "type": "integer",
            "format": "int64"
          },
          "receiveQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "canceledQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "unitAmount": {
            "type": "number",
            "format": "double"
          },
          "extendedAmount": {
            "type": "number",
            "format": "double"
          },
          "umo": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64"
          },
          "redRockTypeId": {
            "type": "string",
            "nullable": true
          },
          "redRockOrderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseOrderModels.PurchaseOrderSaveModel": {
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderTypeId": {
            "type": "string",
            "nullable": true
          },
          "dropShip": {
            "type": "boolean"
          },
          "signatureRequired": {
            "type": "boolean"
          },
          "requestShipDate": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "supplierId": {
            "type": "integer",
            "format": "int64"
          },
          "billingAddress1": {
            "type": "string",
            "nullable": true
          },
          "billingAddress2": {
            "type": "string",
            "nullable": true
          },
          "billingCity": {
            "type": "string",
            "nullable": true
          },
          "billingStateCode": {
            "type": "string",
            "nullable": true
          },
          "billingZipCode": {
            "type": "string",
            "nullable": true
          },
          "billingLatitude": {
            "type": "string",
            "nullable": true
          },
          "billingLongitude": {
            "type": "string",
            "nullable": true
          },
          "deliveryAddress1": {
            "type": "string",
            "nullable": true
          },
          "deliveryAddress2": {
            "type": "string",
            "nullable": true
          },
          "deliveryCity": {
            "type": "string",
            "nullable": true
          },
          "deliveryStateCode": {
            "type": "string",
            "nullable": true
          },
          "deliveryZipCode": {
            "type": "string",
            "nullable": true
          },
          "deliveryLatitude": {
            "type": "string",
            "nullable": true
          },
          "deliveryLongitude": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "internalNote": {
            "type": "string",
            "nullable": true
          },
          "useAddressFromBranch": {
            "type": "string",
            "nullable": true
          },
          "sameAsBillingAddress": {
            "type": "string",
            "nullable": true
          },
          "referenceIdentificationId": {
            "type": "string",
            "nullable": true
          },
          "isSamePatientVerified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.BillingAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "useAddressFromBranch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.CopyPurchaseRequestModel": {
        "type": "object",
        "properties": {
          "purchaseRequestId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.DeliveryAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "sameAsBillingAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestBulkUpdateModel": {
        "type": "object",
        "properties": {
          "purchaseRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseRequestProductList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestProduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel": {
        "type": "object",
        "properties": {
          "purchaseRequestProductId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "dropShip": {
            "type": "boolean"
          },
          "supplierId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "productQty": {
            "type": "integer",
            "format": "int64"
          },
          "unitAmount": {
            "type": "number",
            "format": "double"
          },
          "extendedAmount": {
            "type": "number",
            "format": "double"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "patientAddressId": {
            "type": "integer",
            "format": "int64"
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64"
          },
          "redRockTypeId": {
            "type": "string",
            "nullable": true
          },
          "redRockOrderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel": {
        "type": "object",
        "properties": {
          "purchaseRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.BillingAddress"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.DeliveryAddress"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestProduct": {
        "type": "object",
        "properties": {
          "purchaseRequestProductId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "unitAmount": {
            "type": "number",
            "format": "double"
          },
          "extAmount": {
            "type": "number",
            "format": "double"
          },
          "redRockTypeId": {
            "type": "string",
            "nullable": true
          },
          "redRockOrderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.PurchaseRequestModels.SalesOrderPurchaseRequestModel": {
        "type": "object",
        "properties": {
          "purchaseRequestSave": {
            "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestModel"
          },
          "purchaseRequestItemList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Master.Models.PurchaseRequestModels.PurchaseRequestItemModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.ResupplySaveModel": {
        "type": "object",
        "properties": {
          "resupplyTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resupplyTemplateName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "runScheduledInterval": {
            "type": "integer",
            "format": "int32"
          },
          "leadTimePlacement": {
            "type": "integer",
            "format": "int32"
          },
          "contactByInterval": {
            "type": "integer",
            "format": "int32"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "surveyId": {
            "type": "integer",
            "format": "int64"
          },
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.SalesOrderVoidReasonModel": {
        "type": "object",
        "properties": {
          "salesOrderVoidReasonId": {
            "type": "integer",
            "description": "SalesOrderVoidReasonId\r\n",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.SerialNumberSave": {
        "type": "object",
        "properties": {
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "assetNumber": {
            "type": "string",
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.SizeModel": {
        "type": "object",
        "properties": {
          "sizeId": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.SpecialtyPracticeModel": {
        "type": "object",
        "properties": {
          "specialtyId": {
            "type": "integer",
            "description": "SpecialtyId\r\n",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "specialtyType": {
            "type": "string",
            "description": "SpecialtyType\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "taxonomyCode": {
            "type": "string",
            "description": "TaxonomyCode\r\n",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "IsSystem\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.StyleModel": {
        "type": "object",
        "properties": {
          "styleId": {
            "type": "integer",
            "format": "int64"
          },
          "style": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.SupplierModel": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "SupplierId\r\n",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "description": "CompanyName\r\n",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "description": "ContactName\r\n",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Models.AddressModel"
          },
          "primaryNumber": {
            "type": "string",
            "description": "PrimaryNumber\r\n",
            "nullable": true
          },
          "secondaryNumber": {
            "type": "string",
            "description": "PrimaryNumber\r\n",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "description": "Fax\r\n",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email\r\n",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "BankAccountNo\r\n",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          },
          "purchaseOrderTypeId": {
            "type": "string",
            "nullable": true
          },
          "senderId": {
            "type": "string",
            "nullable": true
          },
          "receiverId": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "SupplierModel\r\n"
      },
      "WebAPI.Areas.Master.Models.TaskViewModel": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int64"
          },
          "taskName": {
            "type": "string",
            "nullable": true
          },
          "followUpDays": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.TaxZoneModel": {
        "type": "object",
        "properties": {
          "taxZoneId": {
            "type": "integer",
            "description": "TaxCodeId\r\n",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "Rate\r\n",
            "format": "double"
          },
          "effectiveFrom": {
            "type": "string",
            "description": "EffectiveFrom\r\n",
            "nullable": true
          },
          "effectiveTo": {
            "type": "string",
            "description": "EffectiveTo\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "TaxZoneModel\r\n"
      },
      "WebAPI.Areas.Master.Models.TeamViewModel": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "teamName": {
            "type": "string",
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "routines": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.UpdateLotInformationModel": {
        "type": "object",
        "properties": {
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Master.Models.WorkInProgressStateModel": {
        "type": "object",
        "properties": {
          "workInProgressStateId": {
            "type": "integer",
            "description": "WorkInProgressStateId\r\n",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          },
          "fromWorkInProgressStateId": {
            "type": "integer",
            "format": "int32"
          },
          "toWorkInProgressStateId": {
            "type": "integer",
            "format": "int32"
          },
          "fromOrderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "toOrderNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Notification_message.Model.MessageModel": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "toUserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "userAcknowledgementRequired": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Onboarding.Models.BusinessQuestionnaireModel": {
        "type": "object",
        "properties": {
          "businessQuestionnaireId": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "ownerName": {
            "type": "string",
            "nullable": true
          },
          "ownerEmail": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "contactPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "directLinePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "taxId": {
            "type": "string",
            "nullable": true
          },
          "npi": {
            "type": "string",
            "nullable": true
          },
          "webSiteAddress": {
            "type": "string",
            "nullable": true
          },
          "existingDMSoftware": {
            "type": "string",
            "nullable": true
          },
          "clearingHouseCompany": {
            "type": "string",
            "nullable": true
          },
          "clearingHouseClientUserId": {
            "type": "string",
            "nullable": true
          },
          "clearingHouseClientPassword": {
            "type": "string",
            "nullable": true
          },
          "branches": {
            "type": "integer",
            "format": "int32"
          },
          "employees": {
            "type": "integer",
            "format": "int32"
          },
          "patients": {
            "type": "integer",
            "format": "int32"
          },
          "doctors": {
            "type": "integer",
            "format": "int32"
          },
          "products": {
            "type": "integer",
            "format": "int32"
          },
          "salesOrderPerMonth": {
            "type": "integer",
            "format": "int32"
          },
          "claimPerMonth": {
            "type": "integer",
            "format": "int32"
          },
          "enableAutoPostERA": {
            "type": "boolean",
            "nullable": true
          },
          "enableAutoCreateClaimBatch": {
            "type": "boolean",
            "nullable": true
          },
          "pTAN": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Onboarding.Models.TaskModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARDignosisCodesInfo": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARGeneralInfo": {
        "type": "object",
        "properties": {
          "parStatus": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "doctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "excludeFromclaim": {
            "type": "boolean",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "parTypeId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARGeneralModel": {
        "type": "object",
        "properties": {
          "parId": {
            "type": "integer",
            "description": "PARId\r\n",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "description": "PARId\r\n",
            "format": "int64",
            "nullable": true
          },
          "generalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARGeneralInfo"
          },
          "sharingInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARSharingInfo"
          },
          "insurance": {
            "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARInsuranceInfo"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.PAR.Models.PARDignosisCodesInfo"
            },
            "description": "PARDignosisCodes\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARInsuranceInfo": {
        "type": "object",
        "properties": {
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parNumber": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "initialDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parTime": {
            "type": "string",
            "nullable": true
          },
          "parTimeInterval": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARProductsInfo": {
        "type": "object",
        "properties": {
          "parProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "priceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "feeScheduleRef": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARSharingInfo": {
        "type": "object",
        "properties": {
          "faxRecipient": {
            "type": "string",
            "nullable": true
          },
          "sharingContactName": {
            "type": "string",
            "nullable": true
          },
          "attention": {
            "type": "string",
            "nullable": true
          },
          "sharingPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "sharingFaxNumber": {
            "type": "string",
            "nullable": true
          },
          "printPAR": {
            "type": "boolean",
            "nullable": true
          },
          "faxPAR": {
            "type": "boolean",
            "nullable": true
          },
          "includeFaxCoverSheet": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARTaskCommentModel": {
        "type": "object",
        "properties": {
          "parTaskCommentId": {
            "type": "integer",
            "description": "PARTaskCommentId\r\n",
            "format": "int64"
          },
          "parTaskId": {
            "type": "integer",
            "description": "PARTaskId\r\n",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Comment\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PARTaskModel": {
        "type": "object",
        "properties": {
          "parTaskId": {
            "type": "integer",
            "description": "PARTaskId\r\n",
            "format": "int32"
          },
          "parId": {
            "type": "integer",
            "description": "PARId\r\n",
            "format": "int64"
          },
          "taskReasonId": {
            "type": "string",
            "description": "SupplierId\r\n",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64"
          },
          "severity": {
            "type": "string",
            "description": "Severity\r\n",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "description": "CompletedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "description": "TaskStatus\r\n",
            "nullable": true
          },
          "reminderRequired": {
            "type": "boolean",
            "description": "ReminderRequired\r\n"
          },
          "active": {
            "type": "boolean",
            "description": "Active\r\n"
          },
          "isLocked": {
            "type": "string",
            "description": "TaskLockState\r\n",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Subject\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "isNotifyAssignedTo": {
            "type": "boolean",
            "description": "IsNotifyAssignedTo\r\n"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.PrintPARModel": {
        "type": "object",
        "properties": {
          "parId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PAR.Models.SalesOrderPARProductGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "cptCodeExp": {
            "type": "string",
            "nullable": true
          },
          "cptCodeValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.AddressInfo": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.BathSafetyOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.BlankRXOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hcpcCode": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "monthlyQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.CancelCardModel": {
        "type": "object",
        "properties": {
          "patientCreditCardInfoId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.CathOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hcpcCode": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "monthlyQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.CopyAddressToInsured": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.CopyPatientModel": {
        "type": "object",
        "properties": {
          "patientId_From": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "generalTab": {
            "type": "boolean",
            "nullable": true
          },
          "contactsTab": {
            "type": "boolean",
            "nullable": true
          },
          "clinicalTab": {
            "type": "boolean",
            "nullable": true
          },
          "insuranceTab": {
            "type": "boolean",
            "nullable": true
          },
          "eligibilityHistoryTab": {
            "type": "boolean",
            "nullable": true
          },
          "noteTab": {
            "type": "boolean",
            "nullable": true
          },
          "efileTab": {
            "type": "boolean",
            "nullable": true
          },
          "patientSignatureTab": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.EmailPatientEFilesModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "toEmailId": {
            "type": "string",
            "nullable": true
          },
          "patientFileIds": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.FileModel": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "fileExt": {
            "type": "string",
            "nullable": true
          },
          "originalFileName": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayFileName": {
            "type": "string",
            "nullable": true
          },
          "fileInByte": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "clientKey": {
            "type": "string",
            "nullable": true
          },
          "fileSizeInKB": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.FormGetModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "formId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.FormModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "nameExp": {
            "type": "string",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "createdByExp": {
            "type": "string",
            "nullable": true
          },
          "createdByValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.HhServicesDmeMedicalSuppliesOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hcpcCode": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "monthlyQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "isParRequired": {
            "type": "string",
            "nullable": true
          },
          "isByondQtyLimit": {
            "type": "string",
            "nullable": true
          },
          "isCustomQty": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.HospitalBedOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.IncontinenceSupplyOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hcpcCode": {
            "type": "string",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "nullable": true
          },
          "monthlyQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.IsPaymentOnFileModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "isPaymentOnFile": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.MoveIntakeDocumentToPatientEFiles": {
        "type": "object",
        "properties": {
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "preFaxScanId": {
            "type": "integer",
            "format": "int64"
          },
          "faxScanId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.NoteMassUpdateModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "nullable": true
          },
          "selectedPatientNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientBasicInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "alsoKnownAs": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "nullable": true
          },
          "primaryFacilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientFileNumber": {
            "type": "string",
            "nullable": true
          },
          "isPaymentOnFile": {
            "type": "boolean",
            "nullable": true
          },
          "isPatientIntakeForm": {
            "type": "boolean",
            "nullable": true
          },
          "mbiNumber": {
            "type": "string",
            "nullable": true
          },
          "costCenter": {
            "type": "string",
            "nullable": true
          },
          "patientStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientClinicalBiometrics": {
        "type": "object",
        "properties": {
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "functionalAbilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "infectiousCondition": {
            "type": "boolean",
            "nullable": true
          },
          "dod": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientClinicalDiagnosis": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientClinicalModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalDiagnosis"
            },
            "nullable": true
          },
          "providerReferringDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerReferringFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorIds": {
            "type": "string",
            "nullable": true
          },
          "primaryDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralPatientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingRepEmployeeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "referralFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "biometrics": {
            "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientClinicalBiometrics"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientContactModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "emergencyContactInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientEmergencyContactInfoModel"
          },
          "responsiblePartyInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientResponsibleContactInfoModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientDeliveryNoteModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64"
          },
          "deliveryNote": {
            "type": "string",
            "description": "DeliveryNote\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PatientDeliveryNoteModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientDigitalSignatureModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "digitalSignature": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientEmergencyContactInfoModel": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "emergencyContactPersonId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientExtendedInfo": {
        "type": "object",
        "properties": {
          "accountTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientAccessId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxCode": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxZoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "primaryLanguageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "placeOfServiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateOfAdmission": {
            "type": "string",
            "nullable": true
          },
          "dateOfDischarge": {
            "type": "string",
            "nullable": true
          },
          "dateOfSurgery": {
            "type": "string",
            "nullable": true
          },
          "holdBillingStatement": {
            "type": "boolean",
            "nullable": true
          },
          "holdAccount": {
            "type": "boolean",
            "nullable": true
          },
          "hipaaSignature": {
            "type": "boolean",
            "nullable": true
          },
          "csrUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isDeniedCase": {
            "type": "boolean",
            "nullable": true
          },
          "followUpDate": {
            "type": "string",
            "nullable": true
          },
          "providerNPI": {
            "type": "string",
            "nullable": true
          },
          "patientsExtendedInfoId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientFileModel": {
        "type": "object",
        "properties": {
          "documentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "patientFilesId": {
            "type": "integer",
            "format": "int64"
          },
          "destinationPatientId": {
            "type": "integer",
            "format": "int64"
          },
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientFormQuestionAnswer": {
        "type": "object",
        "properties": {
          "patientFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "formId": {
            "type": "integer",
            "format": "int64"
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "incontinenceSupplyOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.IncontinenceSupplyOrderForm"
            },
            "nullable": true
          },
          "bathSafetyOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.BathSafetyOrderForm"
            },
            "nullable": true
          },
          "wheelChairOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.WheelChairOrderForm"
            },
            "nullable": true
          },
          "blankRXOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.BlankRXOrderForm"
            },
            "nullable": true
          },
          "cathOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.CathOrderForm"
            },
            "nullable": true
          },
          "hhServicesDmeMedicalSuppliesOrderForm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.HhServicesDmeMedicalSuppliesOrderForm"
            },
            "nullable": true
          },
          "hospitalBedOrderFormQuestionAnswer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.HospitalBedOrderForm"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientGeneralInfoModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "basicInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientBasicInfo"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PatientExtendedInfo"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.AddressInfo"
            },
            "nullable": true
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PhoneInfo"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "isGenerateRetailPOS": {
            "type": "boolean",
            "nullable": true
          },
          "updatePatientInsurance": {
            "type": "boolean",
            "nullable": true
          },
          "hasOptOutOfSMS": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientImportModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "accountTypeId": {
            "type": "string",
            "nullable": true
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "questionAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.QuestionAnswers"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientInsuranceAdjustorModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "patientInsuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "insurancePersonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PatientInsuranceAdjustorModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientInsuranceModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "paymentDateExp": {
            "type": "string",
            "nullable": true
          },
          "paymentDateValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "paymentIdValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodExp": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "contractAmountExp": {
            "type": "string",
            "nullable": true
          },
          "contractAmountValue": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountExp": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountValue": {
            "type": "string",
            "nullable": true
          },
          "balanceExp": {
            "type": "string",
            "nullable": true
          },
          "balanceValue": {
            "type": "string",
            "nullable": true
          },
          "insuranceNameValue": {
            "type": "string",
            "nullable": true
          },
          "paymentIdExp": {
            "type": "string",
            "nullable": true
          },
          "patientInsuranceId": {
            "type": "integer",
            "description": "PatientInsuranceId\r\n",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PatientInsurancePolicyModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "patientInsuranceId": {
            "type": "integer",
            "description": "PatientInsuranceId\r\n",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "description": "InsuranceId\r\n",
            "format": "int64",
            "nullable": true
          },
          "payorLevelId": {
            "type": "integer",
            "description": "PayorLevelId\r\n",
            "format": "int32",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "description": "PolicyNumber\r\n",
            "nullable": true
          },
          "groupNumber": {
            "type": "string",
            "description": "GroupNumber\r\n",
            "nullable": true
          },
          "medicaidId": {
            "type": "string",
            "description": "MedicaidId\r\n",
            "nullable": true
          },
          "coverageStartDate": {
            "type": "string",
            "description": "CoverageStartDate\r\n",
            "nullable": true
          },
          "coverageEndDate": {
            "type": "string",
            "description": "CoverageEndDate\r\n",
            "nullable": true
          },
          "insurancePlanTypeId": {
            "type": "integer",
            "description": "InsurancePlanTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "insuranceTypeCodeId": {
            "type": "integer",
            "description": "InsuranceTypeCodeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "in_Copay": {
            "type": "number",
            "description": "In_Copay\r\n",
            "format": "double",
            "nullable": true
          },
          "in_Coinsurance": {
            "type": "number",
            "description": "In_Coinsurance\r\n",
            "format": "double",
            "nullable": true
          },
          "in_Deductable": {
            "type": "number",
            "description": "In_Deductable\r\n",
            "format": "double",
            "nullable": true
          },
          "out_Copay": {
            "type": "number",
            "description": "Out_Copay\r\n",
            "format": "double",
            "nullable": true
          },
          "out_Coinsurance": {
            "type": "number",
            "description": "In_Coinsurance\r\n",
            "format": "double",
            "nullable": true
          },
          "out_Deductable": {
            "type": "number",
            "description": "In_Deductable\r\n",
            "format": "double",
            "nullable": true
          },
          "relationshipToInsuredId": {
            "type": "integer",
            "description": "RelationshipToInsuredId\r\n",
            "format": "int32",
            "nullable": true
          },
          "claimFilingIndicatorId": {
            "type": "integer",
            "description": "ClaimFilingIndicatorId\r\n",
            "format": "int32",
            "nullable": true
          },
          "insuredFirstName": {
            "type": "string",
            "description": "InsuredFirstName\r\n",
            "nullable": true
          },
          "insuredMiddleName": {
            "type": "string",
            "description": "InsuredMiddleName\r\n",
            "nullable": true
          },
          "insuredLastName": {
            "type": "string",
            "description": "InsuredLastName\r\n",
            "nullable": true
          },
          "insuredBirthDate": {
            "type": "string",
            "description": "InsuredBirthDate\r\n",
            "nullable": true
          },
          "insuredPhone": {
            "type": "string",
            "description": "InsuredPhone\r\n",
            "nullable": true
          },
          "insuredEmail": {
            "type": "string",
            "description": "InsuredEmail\r\n",
            "nullable": true
          },
          "insuredAddress1": {
            "type": "string",
            "description": "InsuredAddress1\r\n",
            "nullable": true
          },
          "insuredAddress2": {
            "type": "string",
            "description": "InsuredAddress2\r\n",
            "nullable": true
          },
          "insuredCity": {
            "type": "string",
            "description": "InsuredCity\r\n",
            "nullable": true
          },
          "insuredStateCode": {
            "type": "string",
            "description": "InsuredStateCode\r\n",
            "nullable": true
          },
          "insuredZipCode": {
            "type": "string",
            "description": "InsuredZipCode\r\n",
            "nullable": true
          },
          "insuredGender": {
            "type": "string",
            "description": "InsuredGender\r\n",
            "nullable": true
          },
          "employerName": {
            "type": "string",
            "description": "EmployerName\r\n",
            "nullable": true
          },
          "employerAddress1": {
            "type": "string",
            "description": "EmployerAddress1\r\n",
            "nullable": true
          },
          "employerAddress2": {
            "type": "string",
            "description": "EmployerAddress2\r\n",
            "nullable": true
          },
          "employerCity": {
            "type": "string",
            "description": "EmployerCity\r\n",
            "nullable": true
          },
          "employerStateCode": {
            "type": "string",
            "description": "EmployerStateCode\r\n",
            "nullable": true
          },
          "employerZipCode": {
            "type": "string",
            "description": "EmployerZipCode\r\n",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes\r\n",
            "nullable": true
          },
          "box_10_d": {
            "type": "string",
            "description": "Box_10_d\r\n",
            "nullable": true
          },
          "box_19": {
            "type": "string",
            "description": "Box_19\r\n",
            "nullable": true
          },
          "isInsuranceVerified": {
            "type": "boolean",
            "description": "IsVerified\r\n",
            "nullable": true
          },
          "eligibilityStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eligibilityEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "patientBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "claimSubmitterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "PatientInsuranceModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientInsuranceSettingModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64"
          },
          "maritalStatusId": {
            "type": "string",
            "description": "MaritalStatusId\r\n",
            "nullable": true
          },
          "employmentStatusId": {
            "type": "string",
            "description": "EmploymentStatusId\r\n",
            "nullable": true
          },
          "printPriceOnDeliveryTickets": {
            "type": "boolean",
            "description": "PrintPriceOnDeliveryTickets\r\n",
            "nullable": true
          },
          "enableMedicareDeductibleHold": {
            "type": "boolean",
            "description": "EnableMedicareDeductibleHold\r\n",
            "nullable": true
          },
          "injuryRelatedToEmployment": {
            "type": "boolean",
            "description": "InjuryRelatedToEmployment\r\n",
            "nullable": true
          },
          "injuryRelatedToAutoAccident": {
            "type": "boolean",
            "description": "InjuryRelatedToAutoAccident\r\n",
            "nullable": true
          },
          "injuryRelatedToNonAutoAccident": {
            "type": "boolean",
            "description": "InjuryRelatedToNonAutoAccident\r\n",
            "nullable": true
          },
          "stateInjuryOccured": {
            "type": "string",
            "description": "StateInjuryOccured\r\n",
            "nullable": true
          },
          "dateOfInjury": {
            "type": "string",
            "description": "DateOfInjury\r\n",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PatientInsuranceSettingModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientNoteCommentModel": {
        "type": "object",
        "properties": {
          "patientNoteCommentId": {
            "type": "integer",
            "description": "PatientNoteCommentId\r\n",
            "format": "int64"
          },
          "patientNoteId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Comment\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PatientNoteCommentModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientNoteModel": {
        "type": "object",
        "properties": {
          "patientNoteId": {
            "type": "integer",
            "description": "PatientNoteId\r\n",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64"
          },
          "noteReasonId": {
            "type": "integer",
            "description": "SupplierId\r\n",
            "format": "int32",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Severity\r\n",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "description": "CompletedDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "noteStatus": {
            "type": "string",
            "description": "NoteStatus\r\n",
            "nullable": true
          },
          "reminderRequired": {
            "type": "boolean",
            "description": "ReminderRequired\r\n"
          },
          "active": {
            "type": "boolean",
            "description": "Active\r\n"
          },
          "isLocked": {
            "type": "string",
            "description": "NoteLockState\r\n",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Subject\r\n",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description\r\n",
            "nullable": true
          },
          "patientNoteType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PatientNoteModel\r\n"
      },
      "WebAPI.Areas.Patient.Models.PatientResponsibleContactInfoModel": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "responsiblePartyPersonId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PhoneInfo": {
        "type": "object",
        "properties": {
          "phoneTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PrintPatientForm": {
        "type": "object",
        "properties": {
          "patientFormId": {
            "type": "integer",
            "format": "int32"
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.PrintPatientNoteModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "patientNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.QuestionAnswers": {
        "type": "object",
        "properties": {
          "questionText": {
            "type": "string",
            "nullable": true
          },
          "questionAnswerValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.SalesOrderProductPriceOptionsModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "feeClassId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isRetailPOS": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.SaveCardModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "ccMonth": {
            "type": "string",
            "nullable": true
          },
          "ccYear": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "maskedNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Patient.Models.WheelChairOrderForm": {
        "type": "object",
        "properties": {
          "formQuestionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "formQuestionAnswerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.BalanceTransferModel": {
        "type": "object",
        "properties": {
          "fromInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "toInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "payerOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "adjustmentActionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentDetailReasonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.CancelBillingPlanModel": {
        "type": "object",
        "properties": {
          "billingPlanId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.CancelBillingPlanSchedulePaymentModel": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "billingPlanScheduleId": {
            "type": "string",
            "nullable": true
          },
          "billingPlanId": {
            "type": "string",
            "nullable": true
          },
          "merchId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.MarkAsPaidModel": {
        "type": "object",
        "properties": {
          "billingPlanId": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "billingPlanScheduleId": {
            "type": "string",
            "nullable": true
          },
          "retref": {
            "type": "string",
            "nullable": true
          },
          "merchId": {
            "type": "string",
            "nullable": true
          },
          "selectedMarkAsPaidFilter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.MassPaymentDetailViewModel": {
        "type": "object",
        "properties": {
          "invoiceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.PaymentAllocateModel": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentType": {
            "type": "string",
            "nullable": true
          },
          "paymentDetailReasonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.PaymentBatchGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentBatchIdExp": {
            "type": "string",
            "nullable": true
          },
          "paymentBatchIdValue": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentResponsibleTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amountExp": {
            "type": "string",
            "nullable": true
          },
          "amountValue": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "paymentDateExp": {
            "type": "string",
            "nullable": true
          },
          "paymentDateValue": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteExp": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteValue": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "createdByNameExp": {
            "type": "string",
            "nullable": true
          },
          "createdByNameValue": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.PaymentListGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentResponsibleTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "payerId": {
            "type": "integer",
            "format": "int64"
          },
          "includeDepositedOnly": {
            "type": "boolean"
          },
          "hideZeroBalance": {
            "type": "boolean"
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "sortDirection": {
            "type": "string",
            "nullable": true
          },
          "filterExpression": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paymentIdExp": {
            "type": "string",
            "nullable": true
          },
          "paymentIdValue": {
            "type": "string",
            "nullable": true
          },
          "allocatedPaymentsExp": {
            "type": "string",
            "nullable": true
          },
          "allocatedPaymentsValue": {
            "type": "string",
            "nullable": true
          },
          "amountExp": {
            "type": "string",
            "nullable": true
          },
          "amountValue": {
            "type": "string",
            "nullable": true
          },
          "paymentDateExp": {
            "type": "string",
            "nullable": true
          },
          "paymentDateValue": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodNameExp": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodNameValue": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "isRefund": {
            "type": "boolean"
          },
          "isPaymentAutoApply": {
            "type": "boolean"
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "createdByNameExp": {
            "type": "string",
            "nullable": true
          },
          "createdByNameValue": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteExp": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.PaymentMasterGetModel": {
        "type": "object",
        "properties": {
          "paymentIdExp": {
            "type": "string",
            "nullable": true
          },
          "paymentIdValue": {
            "type": "string",
            "nullable": true
          },
          "mode": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "paymentDateExp": {
            "type": "string",
            "nullable": true
          },
          "paymentDateValue": {
            "type": "string",
            "nullable": true
          },
          "patientExp": {
            "type": "string",
            "nullable": true
          },
          "patientValue": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodExp": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodValue": {
            "type": "string",
            "nullable": true
          },
          "amountExp": {
            "type": "string",
            "nullable": true
          },
          "amountValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountExp": {
            "type": "string",
            "nullable": true
          },
          "allocatedAmountValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "receivedFromExp": {
            "type": "string",
            "nullable": true
          },
          "receivedFromValue": {
            "type": "string",
            "nullable": true
          },
          "createdOnExp": {
            "type": "string",
            "nullable": true
          },
          "createdOnValue": {
            "type": "string",
            "nullable": true
          },
          "createdByExp": {
            "type": "string",
            "nullable": true
          },
          "createdByValue": {
            "type": "string",
            "nullable": true
          },
          "allocationStatusExp": {
            "type": "string",
            "nullable": true
          },
          "allocationStatusValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeExp": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeValue": {
            "type": "string",
            "nullable": true
          },
          "paymentTypeNameExp": {
            "type": "string",
            "nullable": true
          },
          "paymentTypeNameValue": {
            "type": "string",
            "nullable": true
          },
          "isRefundExp": {
            "type": "string",
            "nullable": true
          },
          "isRefundValue": {
            "type": "boolean",
            "nullable": true
          },
          "responseStatusExp": {
            "type": "string",
            "nullable": true
          },
          "responseStatusValue": {
            "type": "string",
            "nullable": true
          },
          "cardTypeExp": {
            "type": "string",
            "nullable": true
          },
          "cardTypeValue": {
            "type": "string",
            "nullable": true
          },
          "ccAccountExp": {
            "type": "string",
            "nullable": true
          },
          "ccAccountValue": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteExp": {
            "type": "string",
            "nullable": true
          },
          "paymentNoteValue": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hideZeroBalance": {
            "type": "boolean",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.RecurringBillingCreateModel": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          },
          "billEvery": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "ofPayments": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "planName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "timeSpan": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "until": {
            "type": "string",
            "nullable": true
          },
          "ccMonth": {
            "type": "string",
            "nullable": true
          },
          "ccYear": {
            "type": "string",
            "nullable": true
          },
          "isRememberCard": {
            "type": "boolean"
          },
          "isTokenCard": {
            "type": "boolean"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "isPaymentAutoApply": {
            "type": "boolean",
            "nullable": true
          },
          "maskedNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.RefundPaymentModel": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "depositId": {
            "type": "integer",
            "format": "int64"
          },
          "refNumber": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "payerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "payer": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "refundReason": {
            "type": "string",
            "nullable": true
          },
          "refundCompleteTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Payment.Models.TransactionResponse": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "nameonCard": {
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "retRef": {
            "type": "string",
            "nullable": true
          },
          "cardType": {
            "type": "string",
            "nullable": true
          },
          "authCode": {
            "type": "string",
            "nullable": true
          },
          "configType": {
            "type": "string",
            "nullable": true
          },
          "configRefNumber": {
            "type": "string",
            "nullable": true
          },
          "requestUrl": {
            "type": "string",
            "nullable": true
          },
          "requestData": {
            "nullable": true
          },
          "responseData": {
            "nullable": true
          },
          "responseStatus": {
            "type": "string",
            "nullable": true
          },
          "expireMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expireYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deliveryOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPaymentAutoApply": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PickupTicket.Models.ExchangeToSerialNumberDetailGetModel": {
        "type": "object",
        "properties": {
          "productSerialNumberIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PickupTicket.Models.PickupTicketGeneralInfo": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "pickupReasonId": {
            "type": "integer",
            "description": "PickupReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "finalBillingDate": {
            "type": "string",
            "description": "FinalBillingDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "dateOfAdmission": {
            "type": "string",
            "nullable": true
          },
          "dateOfDischarge": {
            "type": "string",
            "nullable": true
          },
          "dateOfDeath": {
            "type": "string",
            "description": "DateOfDeat\r\n",
            "format": "date-time",
            "nullable": true
          },
          "pickupTicketOrderType": {
            "type": "string",
            "nullable": true
          },
          "pickupStatusCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PickupTicketGeneralInfoModel\r\n"
      },
      "WebAPI.Areas.PickupTicket.Models.PickupTicketModel": {
        "type": "object",
        "properties": {
          "pickupTicketId": {
            "type": "integer",
            "description": "PickupTicketId\r\n",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "string",
            "description": "PatientId\r\n",
            "nullable": true
          },
          "generalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketGeneralInfo"
          },
          "pickupInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketPickupInfo"
          },
          "pickupProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel"
            },
            "description": "PickupTicketProduct\r\n",
            "nullable": true
          },
          "workFlowState": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inactivetedPatient": {
            "type": "boolean",
            "nullable": true
          },
          "isFromSalesOrder": {
            "type": "boolean",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PickupTicketGeneralModel\r\n"
      },
      "WebAPI.Areas.PickupTicket.Models.PickupTicketPickupInfo": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "requesterName": {
            "type": "string",
            "description": "RequestingName\r\n",
            "nullable": true
          },
          "pickupDate": {
            "type": "string",
            "description": "PickupDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "actualDate": {
            "type": "string",
            "description": "ActualDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "MobileNumber\r\n",
            "nullable": true
          },
          "homeNumber": {
            "type": "string",
            "description": "HomeNumber\r\n",
            "nullable": true
          },
          "pickupNote": {
            "type": "string",
            "description": "PickupNote\r\n",
            "nullable": true
          },
          "isAutoAssignDriver": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryDriverId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PickupTicketDeliveryInfoModel\r\n"
      },
      "WebAPI.Areas.PickupTicket.Models.PickupTicketProductModel": {
        "type": "object",
        "properties": {
          "pickupTicketDetailId": {
            "type": "integer",
            "description": "PickupTicketDetailId\r\n",
            "format": "int64",
            "nullable": true
          },
          "pickupTicketId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int32",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "description": "SalesOrderDetailId\r\n",
            "format": "int32",
            "nullable": true
          },
          "posLocationId": {
            "type": "integer",
            "description": "PosLocationId\r\n",
            "format": "int64",
            "nullable": true
          },
          "oldQuantity": {
            "type": "integer",
            "description": "OldQuantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "pickupType": {
            "type": "string",
            "description": "PickupTypeId\r\n",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "ProductId\r\n",
            "format": "int32",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "ProductNumber\r\n",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "ProductName\r\n",
            "nullable": true
          },
          "productUpc": {
            "type": "string",
            "description": "ProductUpc\r\n",
            "nullable": true
          },
          "productDescription": {
            "type": "string",
            "description": "ProductDescription\r\n",
            "nullable": true
          },
          "productNote": {
            "type": "string",
            "description": "ProductNote\r\n",
            "nullable": true
          },
          "serialNumbers": {
            "type": "string",
            "nullable": true
          },
          "isAdjustOldInventory": {
            "type": "boolean",
            "nullable": true
          },
          "inventoryAdjustmentReasonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inventoryAdjustmentComment": {
            "type": "string",
            "nullable": true
          },
          "pickupTicketDetailInventoryBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PickupTicketProductModel\r\n"
      },
      "WebAPI.Areas.PickupTicket.Models.PickupTicketUpdateStatusModel": {
        "type": "object",
        "properties": {
          "pickupTicketId": {
            "type": "integer",
            "description": "PickupTicketId\r\n",
            "format": "int64",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "deleteFutureInvoice": {
            "type": "boolean"
          },
          "cancelledReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "serviceCompleteTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PickupTicket.Models.PrintPickupTicketModel": {
        "type": "object",
        "properties": {
          "pickupTicketId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PickupTicket.Models.SalesOrderProductGetModel": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "salesOrderList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Portal.Models.PortalIntakeFormAdminModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "formHTML": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdatedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.PriceTable.Models.CopyFeeClassInfoModel": {
        "type": "object",
        "properties": {
          "feeClassId_Source": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "feeClassName_Destination": {
            "type": "string",
            "nullable": true
          },
          "feeClassType_Destination": {
            "type": "string",
            "nullable": true
          },
          "stateCode_Destination": {
            "type": "string",
            "nullable": true
          },
          "regionPricingType_Destination": {
            "type": "string",
            "nullable": true
          },
          "allowAmount_Destination": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allowAmount_Operation": {
            "type": "string",
            "nullable": true
          },
          "chargeAmount_Destination": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargeAmount_Operation": {
            "type": "string",
            "nullable": true
          },
          "convertAllowAmount_Destination": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "convertAllowAmount_Operation": {
            "type": "string",
            "nullable": true
          },
          "convertChargeAmount_Destination": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "convertChargeAmount_Operation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleProcedureModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassInfoModel": {
        "type": "object",
        "properties": {
          "feeClassId": {
            "type": "integer",
            "description": "FeeClassId",
            "format": "int32"
          },
          "copyFromFeeClassId": {
            "type": "integer",
            "description": "CopyFromFeeClassId",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "procedureCodeGroup": {
            "type": "string",
            "description": "ProcedureCodeGroup",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active",
            "nullable": true
          },
          "regionPricingType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassInfoModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassScheduleAdditionalSettingModel": {
        "type": "object",
        "properties": {
          "useBillingCodesWhenSecondary": {
            "type": "boolean",
            "description": "UseBillingCodesWhenSecondary",
            "nullable": true
          },
          "cmnRequiredToBill": {
            "type": "boolean",
            "description": "CmnRequiredToBill",
            "nullable": true
          },
          "cmnFormId": {
            "type": "integer",
            "description": "CmnFormId",
            "format": "int32",
            "nullable": true
          },
          "priorAuthorizationRequired": {
            "type": "boolean",
            "description": "PriorAuthorizationRequired",
            "nullable": true
          },
          "functionalAbilityRequired": {
            "type": "boolean",
            "description": "FunctionalAbilityRequired",
            "nullable": true
          },
          "parRequestOn": {
            "type": "string",
            "description": "ParRequestOn",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleAdditionalSettingModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingAmountModel": {
        "type": "object",
        "properties": {
          "billAmount": {
            "type": "number",
            "description": "BillAmount",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount",
            "format": "double",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4",
            "format": "int32",
            "nullable": true
          },
          "acceptAssignment": {
            "type": "boolean",
            "description": "AcceptAssignment",
            "nullable": true
          },
          "taxable": {
            "type": "boolean",
            "description": "Taxable",
            "nullable": true
          },
          "nonTaxType": {
            "type": "string",
            "description": "NonTaxType",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingModel": {
        "type": "object",
        "properties": {
          "billingPeriodId": {
            "type": "integer",
            "description": "BillingPeriodId",
            "format": "int32",
            "nullable": true
          },
          "billingInterval": {
            "type": "integer",
            "description": "BillingInterval",
            "format": "int32",
            "nullable": true
          },
          "billAfterPeriodIsCompleted": {
            "type": "boolean",
            "description": "BillAfterPeriodIsCompleted",
            "nullable": true
          },
          "prorate": {
            "type": "boolean",
            "description": "Prorate",
            "nullable": true
          },
          "syncToCalendar": {
            "type": "boolean",
            "description": "SyncToCalendar",
            "nullable": true
          },
          "syncToCalendarDays": {
            "type": "integer",
            "description": "Days",
            "format": "int32",
            "nullable": true
          },
          "invoiceFrequencyId": {
            "type": "integer",
            "description": "InvoiceFrequencyId",
            "format": "int32",
            "nullable": true
          },
          "invoiceInterval": {
            "type": "integer",
            "description": "InvoiceInterval",
            "format": "int32",
            "nullable": true
          },
          "multipleQuantityByDays": {
            "type": "boolean",
            "description": "MultipleQuantityByDays",
            "nullable": true
          },
          "enforceMinimumDays": {
            "type": "boolean",
            "description": "EnforceMinimumDays",
            "nullable": true
          },
          "enforceMaximumDays": {
            "type": "boolean",
            "description": "EnforceMaximumDays",
            "nullable": true
          },
          "minimumDays": {
            "type": "integer",
            "description": "MinimumDays",
            "format": "int32",
            "nullable": true
          },
          "maximumDays": {
            "type": "integer",
            "description": "MaximumDays",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingPurchaseConvertModel": {
        "type": "object",
        "properties": {
          "convertToPurchaseOnLastPeriod": {
            "type": "boolean",
            "description": "ConvertToPurchaseOnLastPeriod",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "description": "BillAmount",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount",
            "format": "double",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingPurchaseConvertModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassScheduleModel": {
        "type": "object",
        "properties": {
          "copyFromFeeClassScheduleId": {
            "type": "integer",
            "description": "CopyFromFeeClassScheduleId",
            "format": "int32",
            "nullable": true
          },
          "feeClassScheduleId": {
            "type": "integer",
            "description": "FeeClassScheduleId",
            "format": "int32",
            "nullable": true
          },
          "feeClassId": {
            "type": "integer",
            "description": "FeeClassId",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "effectiveFrom": {
            "type": "string",
            "description": "EffectiveFrom",
            "nullable": true
          },
          "effectiveTo": {
            "type": "string",
            "description": "EffectiveTo",
            "nullable": true
          },
          "applyProcedureCodeBasedPricing": {
            "type": "boolean",
            "description": "ApplyProcedureCodeBasedPricing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeClassSchedulePricingModel": {
        "type": "object",
        "properties": {
          "periodStart": {
            "type": "integer",
            "description": "PeriodStart",
            "format": "int64",
            "nullable": true
          },
          "periodEnd": {
            "type": "integer",
            "description": "PeriodEnd",
            "format": "int64",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName",
            "nullable": true
          },
          "isDefaultOption": {
            "type": "boolean",
            "description": "IsDefaultOption",
            "nullable": true
          },
          "priceOptionLetterTypeId": {
            "type": "integer",
            "description": "PriceOptionLetterTypeId",
            "format": "int32",
            "nullable": true
          },
          "hasOptionLetterOnLastPeriod": {
            "type": "boolean",
            "description": "HasOptionLetterOnLastPeriod",
            "nullable": true
          },
          "canPrintInvoiceOnly": {
            "type": "boolean",
            "description": "CanPrintInvoiceOnly",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassSchedulePricingModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeScheduleModel": {
        "type": "object",
        "properties": {
          "feeScheduleId": {
            "type": "integer",
            "description": "FeeScheduleId",
            "format": "int32"
          },
          "feeClassScheduleId": {
            "type": "integer",
            "description": "FeeClassScheduleId",
            "format": "int32",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId",
            "format": "int32",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "description": "ProductTypeId",
            "format": "int32",
            "nullable": true
          },
          "pricing": {
            "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassSchedulePricingModel"
          },
          "billingSettingAmount": {
            "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingAmountModel"
          },
          "billingSettingPurchaseConvert": {
            "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingPurchaseConvertModel"
          },
          "billingSetting": {
            "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleBillingSettingModel"
          },
          "additionalSetting": {
            "$ref": "#/components/schemas/WebAPI.Areas.PriceTable.Models.FeeClassScheduleAdditionalSettingModel"
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleProcedureModel"
      },
      "WebAPI.Areas.PriceTable.Models.FeeScheduleProcedureModel": {
        "type": "object",
        "properties": {
          "feeScheduleId": {
            "type": "integer",
            "description": "FeeScheduleId",
            "format": "int32"
          },
          "feeClassScheduleId": {
            "type": "integer",
            "description": "FeeClassScheduleId",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId",
            "format": "int32"
          },
          "productTypeId": {
            "type": "integer",
            "description": "ProductTypeId",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "FeeScheduleProcedureModel"
      },
      "WebAPI.Areas.PriceTable.Models.PriceTableBulkUpdate": {
        "type": "object",
        "properties": {
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "priceTableList": {
            "type": "string",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentalMod1": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentalMod2": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentalMod3": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentalMod4": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productType": {
            "type": "integer",
            "format": "int32"
          },
          "rentAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "purchaseAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "rentAllowAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "purchaseAllowAmount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "fromPeriod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "toPeriod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.AdditionalSettingInfo": {
        "type": "object",
        "properties": {
          "useBillingCodesWhenSecondary": {
            "type": "boolean",
            "description": "UseBillingCodesWhenSecondary",
            "nullable": true
          },
          "cmnRequiredToBill": {
            "type": "boolean",
            "description": "CmnRequiredToBill",
            "nullable": true
          },
          "cmnFormId": {
            "type": "integer",
            "description": "CmnFormId",
            "format": "int32",
            "nullable": true
          },
          "priorAuthorizationRequired": {
            "type": "boolean",
            "description": "PriorAuthorizationRequired",
            "nullable": true
          },
          "functionalAbilityRequired": {
            "type": "boolean",
            "description": "FunctionalAbilityRequired",
            "nullable": true
          },
          "isSpanDateRequired": {
            "type": "boolean",
            "description": "IsSpanDateRequired",
            "nullable": true
          },
          "feeScheduleIntervalTypeId": {
            "type": "integer",
            "description": "FeeScheduleIntervalTypeId",
            "format": "int32",
            "nullable": true
          },
          "spanDateInterval": {
            "type": "integer",
            "description": "SpanDateInterval",
            "format": "int32",
            "nullable": true
          },
          "parRequestOn": {
            "type": "string",
            "description": "ParRequestOn",
            "nullable": true
          },
          "abnRequired": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleAdditionalSettingModel"
      },
      "WebAPI.Areas.Product.Models.BillingSettingAmountInfo": {
        "type": "object",
        "properties": {
          "billAmount": {
            "type": "number",
            "description": "BillAmount",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount",
            "format": "double",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4",
            "format": "int32",
            "nullable": true
          },
          "acceptAssignment": {
            "type": "boolean",
            "description": "AcceptAssignment",
            "nullable": true
          },
          "taxable": {
            "type": "boolean",
            "description": "Taxable",
            "nullable": true
          },
          "nonTaxType": {
            "type": "string",
            "description": "NonTaxType",
            "nullable": true
          },
          "isNonBillableItem": {
            "type": "boolean",
            "description": "IsNonBillableItem",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingModel"
      },
      "WebAPI.Areas.Product.Models.BillingSettingInfo": {
        "type": "object",
        "properties": {
          "billingPeriodId": {
            "type": "integer",
            "description": "BillingPeriodId",
            "format": "int32",
            "nullable": true
          },
          "billingInterval": {
            "type": "integer",
            "description": "BillingInterval",
            "format": "int32",
            "nullable": true
          },
          "billAfterPeriodIsCompleted": {
            "type": "boolean",
            "description": "BillAfterPeriodIsCompleted",
            "nullable": true
          },
          "prorate": {
            "type": "boolean",
            "description": "Prorate",
            "nullable": true
          },
          "syncToCalendar": {
            "type": "boolean",
            "description": "SyncToCalendar",
            "nullable": true
          },
          "syncToCalendarDays": {
            "type": "integer",
            "description": "Days",
            "format": "int32",
            "nullable": true
          },
          "invoiceFrequencyId": {
            "type": "integer",
            "description": "InvoiceFrequencyId",
            "format": "int32",
            "nullable": true
          },
          "invoiceInterval": {
            "type": "integer",
            "description": "InvoiceInterval",
            "format": "int32",
            "nullable": true
          },
          "multipleQuantityByDays": {
            "type": "boolean",
            "description": "MultipleQuantityByDays",
            "nullable": true
          },
          "enforceMinimumDays": {
            "type": "boolean",
            "description": "EnforceMinimumDays",
            "nullable": true
          },
          "enforceMaximumDays": {
            "type": "boolean",
            "description": "EnforceMaximumDays",
            "nullable": true
          },
          "minimumDays": {
            "type": "integer",
            "description": "MinimumDays",
            "format": "int32",
            "nullable": true
          },
          "maximumDays": {
            "type": "integer",
            "description": "MaximumDays",
            "format": "int32",
            "nullable": true
          },
          "unitsMultiplier": {
            "type": "number",
            "description": "UnitsMultiplier",
            "format": "double",
            "nullable": true
          },
          "billEachQtyPerMonth": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingModel"
      },
      "WebAPI.Areas.Product.Models.BillingSettingPurchaseConvertInfo": {
        "type": "object",
        "properties": {
          "convertToPurchaseOnLastPeriod": {
            "type": "boolean",
            "description": "ConvertToPurchaseOnLastPeriod",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "description": "BillAmount",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount",
            "format": "double",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassScheduleBillingSettingPurchaseConvertModel"
      },
      "WebAPI.Areas.Product.Models.CopyProductModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "CopyProductModel\r\n"
      },
      "WebAPI.Areas.Product.Models.FeeClassScheduleModel": {
        "type": "object",
        "properties": {
          "feeClassId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.FutureFeeSchedule": {
        "type": "object",
        "properties": {
          "feeClassId": {
            "type": "integer",
            "format": "int32"
          },
          "feeClassScheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "newFeeClassScheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "optionTypeBillAmount": {
            "type": "string",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "optionTypeAllowAmount": {
            "type": "string",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "optionTypeConvertToPurchaseBillAmount": {
            "type": "string",
            "nullable": true
          },
          "convertToPurchaseBillAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "optionTypeConvertToPurchaseAllowAmount": {
            "type": "string",
            "nullable": true
          },
          "convertToPurchaseAllowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.FutureFeeScheduleSaveModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int32"
          },
          "updateAlredyExistFutureSchedule": {
            "type": "boolean"
          },
          "futureFeeSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.FutureFeeSchedule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.GetInventoryTransactionsListModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "inventoryTransactionAction": {
            "type": "string",
            "nullable": true
          },
          "inventoryTransactionIdExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryTransactionIdValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryActionExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryActionValue": {
            "type": "string",
            "nullable": true
          },
          "purchaseDateExp": {
            "type": "string",
            "nullable": true
          },
          "purchaseDateValue": {
            "type": "string",
            "nullable": true
          },
          "expiryDateExp": {
            "type": "string",
            "nullable": true
          },
          "expiryDateValue": {
            "type": "string",
            "nullable": true
          },
          "supplierNameExp": {
            "type": "string",
            "nullable": true
          },
          "supplierNameValue": {
            "type": "string",
            "nullable": true
          },
          "lotNumberExp": {
            "type": "string",
            "nullable": true
          },
          "lotNumberValue": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.GetProductSerialNumberModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "excludeInUse": {
            "type": "boolean"
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderTemplateDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "pageName": {
            "type": "string",
            "nullable": true
          },
          "inventoryReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hasPageFilter": {
            "type": "boolean",
            "nullable": true
          },
          "searchKey": {
            "type": "string",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "assetNumberExp": {
            "type": "string",
            "nullable": true
          },
          "assetNumberValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryReceivedDateExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryReceivedDateValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryReceivedDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryReceivedDateToValue": {
            "type": "string",
            "nullable": true
          },
          "serialNumberFilterExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberFilterValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.PatientProductGetModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serviceDateStartExp": {
            "type": "string",
            "nullable": true
          },
          "serviceDateStartValue": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeExp": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeValue": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "facilityNameExp": {
            "type": "string",
            "nullable": true
          },
          "facilityNameValue": {
            "type": "string",
            "nullable": true
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.PricingGetModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int32"
          },
          "showFutureSchedule": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.PricingInfo": {
        "type": "object",
        "properties": {
          "effectiveStartDate": {
            "type": "string",
            "description": "EffectiveStartDate",
            "format": "date-time",
            "nullable": true
          },
          "effectiveEndDate": {
            "type": "string",
            "description": "EffectiveEndDate",
            "format": "date-time",
            "nullable": true
          },
          "periodStart": {
            "type": "integer",
            "description": "PeriodStart",
            "format": "int64",
            "nullable": true
          },
          "periodEnd": {
            "type": "integer",
            "description": "PeriodEnd",
            "format": "int64",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName",
            "nullable": true
          },
          "isDefaultOption": {
            "type": "boolean",
            "description": "IsDefaultOption",
            "nullable": true
          },
          "priceOptionLetterTypeId": {
            "type": "integer",
            "description": "PriceOptionLetterTypeId",
            "format": "int32",
            "nullable": true
          },
          "hasOptionLetterOnLastPeriod": {
            "type": "boolean",
            "description": "HasOptionLetterOnLastPeriod",
            "nullable": true
          },
          "canPrintInvoiceOnly": {
            "type": "boolean",
            "description": "CanPrintInvoiceOnly",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FeeClassSchedulePricingModel"
      },
      "WebAPI.Areas.Product.Models.ProductFileModel": {
        "type": "object",
        "properties": {
          "documentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "productFilesId": {
            "type": "integer",
            "format": "int64"
          },
          "destinationProductId": {
            "type": "integer",
            "format": "int64"
          },
          "fileId": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "actionType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.ProductGeneralBarcodeInfo": {
        "type": "object",
        "properties": {
          "pageLayout": {
            "type": "string",
            "nullable": true
          },
          "labelTemplate": {
            "type": "string",
            "nullable": true
          },
          "copies": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "printCurrentAmountAvailable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductGeneralBarcodeInfo\r\n"
      },
      "WebAPI.Areas.Product.Models.ProductGeneralModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productGroup": {
            "type": "string",
            "nullable": true
          },
          "weight": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "upnCodeTypeQualifier": {
            "type": "string",
            "nullable": true
          },
          "upnProductId": {
            "type": "string",
            "nullable": true
          },
          "claimNoteTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "claimNote": {
            "type": "string",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "upC_EAN_ISBN": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "saleType": {
            "type": "string",
            "nullable": true
          },
          "stockingUOM": {
            "type": "string",
            "nullable": true
          },
          "ndc": {
            "type": "string",
            "nullable": true
          },
          "ndcuom": {
            "type": "string",
            "nullable": true
          },
          "colorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productCategoryIds": {
            "type": "string",
            "nullable": true
          },
          "sizeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "manufacturerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "standardPricing": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralStandardPricingInfo"
          },
          "barcode": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductGeneralBarcodeInfo"
          },
          "pricesIncludeTax": {
            "type": "boolean"
          },
          "overrideDefaultTax": {
            "type": "boolean"
          },
          "stateTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "countryTaxRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "productStyleId": {
            "type": "string",
            "nullable": true
          },
          "productSizeId": {
            "type": "string",
            "nullable": true
          },
          "reorderPoint": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replenishmentQty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultSupplierId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "defaultStockingUOMId": {
            "type": "string",
            "nullable": true
          },
          "suppliersList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.Suppliers"
            },
            "nullable": true
          },
          "stockingUOMList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.ProductStockingUOM"
            },
            "nullable": true
          },
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isUpdateWorkFlow": {
            "type": "boolean",
            "nullable": true
          },
          "isByPassQtyCheck": {
            "type": "boolean"
          },
          "isResupply": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductGeneralModel\r\n"
      },
      "WebAPI.Areas.Product.Models.ProductGeneralStandardPricingInfo": {
        "type": "object",
        "properties": {
          "excludeFromStandardPricing": {
            "type": "boolean",
            "nullable": true
          },
          "standardPricingProcedures": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductGeneralStandardPricingInfo\r\n"
      },
      "WebAPI.Areas.Product.Models.ProductItemScheduleModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "procedureCodeDMECategoryScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "feeId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "billingPeriod": {
            "type": "string",
            "nullable": true
          },
          "billingEvery": {
            "type": "integer",
            "format": "int32"
          },
          "billingUntil": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "productItemScheduleIdExp": {
            "type": "string",
            "nullable": true
          },
          "productItemScheduleIdValue": {
            "type": "string",
            "nullable": true
          },
          "billingPeriodExp": {
            "type": "string",
            "nullable": true
          },
          "billingPeriodValue": {
            "type": "string",
            "nullable": true
          },
          "billingUntilExp": {
            "type": "string",
            "nullable": true
          },
          "billingUntilValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.ProductLocationsGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "typeFilter": {
            "type": "string",
            "nullable": true
          },
          "branchNameExp": {
            "type": "string",
            "nullable": true
          },
          "branchNameValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductLocationsGetModel \r\n"
      },
      "WebAPI.Areas.Product.Models.ProductMedicarePricingModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rentalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "purchaseAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "saleType": {
            "type": "string",
            "nullable": true
          },
          "isGenerateMedicareOnly": {
            "type": "boolean"
          },
          "rentMod1": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentMod2": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentMod3": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "rentMod4": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseMod1": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseMod2": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseMod3": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseMod4": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.ProductPricingModel": {
        "type": "object",
        "properties": {
          "feeScheduleId": {
            "type": "integer",
            "description": "FeeScheduleId",
            "format": "int32"
          },
          "feeClassScheduleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "description": "ProductItemId",
            "format": "int64"
          },
          "feeClassId": {
            "type": "integer",
            "description": "FeeClassId",
            "format": "int32"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId",
            "format": "int32",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "description": "ProductTypeId",
            "format": "int32",
            "nullable": true
          },
          "pricing": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.PricingInfo"
          },
          "billingSettingAmount": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.BillingSettingAmountInfo"
          },
          "billingSettingPurchaseConvert": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.BillingSettingPurchaseConvertInfo"
          },
          "billingSetting": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.BillingSettingInfo"
          },
          "additionalSetting": {
            "$ref": "#/components/schemas/WebAPI.Areas.Product.Models.AdditionalSettingInfo"
          },
          "fromSalesOrderProductPage": {
            "type": "boolean",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductPricingModel"
      },
      "WebAPI.Areas.Product.Models.ProductSerialNumberDeleteModel": {
        "type": "object",
        "properties": {
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.ProductSerialNumberModel": {
        "type": "object",
        "properties": {
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryTransactionId": {
            "type": "integer",
            "format": "int64"
          },
          "lotNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.ProductStockingUOM": {
        "type": "object",
        "properties": {
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stockingUOMId": {
            "type": "string",
            "nullable": true
          },
          "quantityPerUOM": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.Suppliers": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int64"
          },
          "cost": {
            "type": "string",
            "nullable": true
          },
          "supplierItemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Product.Models.UpdateProductPricingModel": {
        "type": "object",
        "properties": {
          "feeClassScheduleIds": {
            "type": "string",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64"
          },
          "selectedPricingTypeToUpdate": {
            "type": "string",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RCM.Models.RCMClaimGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RCM.Models.RCMClaimTrackerDetailGetModel": {
        "type": "object",
        "properties": {
          "invoiceIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RCM.Models.RCMClaimTrackerGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "claimStatusId": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceId": {
            "type": "string",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "accountTypes": {
            "type": "string",
            "nullable": true
          },
          "tileNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasServiceEndDateFilter": {
            "type": "boolean",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceExp": {
            "type": "string",
            "nullable": true
          },
          "dateOfServiceValue": {
            "type": "string",
            "nullable": true
          },
          "payerNameExp": {
            "type": "string",
            "nullable": true
          },
          "payerNameValue": {
            "type": "string",
            "nullable": true
          },
          "chargesExp": {
            "type": "string",
            "nullable": true
          },
          "chargesValue": {
            "type": "string",
            "nullable": true
          },
          "taxExp": {
            "type": "string",
            "nullable": true
          },
          "taxValue": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceExp": {
            "type": "string",
            "nullable": true
          },
          "remainingBalanceValue": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionExp": {
            "type": "string",
            "nullable": true
          },
          "lastEventDescriptionValue": {
            "type": "string",
            "nullable": true
          },
          "batchIdExp": {
            "type": "string",
            "nullable": true
          },
          "batchIdValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RedRock.Models.AuthenticationTokenRequestModel": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "nullable": true
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "client_secret": {
            "type": "string",
            "nullable": true
          },
          "apiUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RedRock.Models.SubmitOrderRequestDetailsModel": {
        "type": "object",
        "properties": {
          "hcpcs": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.RedRock.Models.SubmitOrderRequestModel": {
        "type": "object",
        "properties": {
          "acctNum": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.RedRock.Models.SubmitOrderRequestDetailsModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ReportPermission.Model.GetReportLog": {
        "type": "object",
        "properties": {
          "reportHistoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cmnId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "abnProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "pickupTicketId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "depositId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientNoteId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "displayAsExp": {
            "type": "string",
            "nullable": true
          },
          "displayAsValue": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdExp": {
            "type": "string",
            "nullable": true
          },
          "invoiceIdValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ReportPermission.Model.ReportModel": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int64"
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "reportGroupName": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "agingBy": {
            "type": "string",
            "nullable": true
          },
          "arEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "noOfDaysInEachARBucket": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "clientKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.ReportPermission.Model.SaveReportLog": {
        "type": "object",
        "properties": {
          "reportHistoryId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "cmnId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "parId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "abnProductId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "pickupTicketId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "depositId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchaseOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientNoteId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientFormId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.AddSalesOrderInsurance": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "patientInsuranceIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.AddressInfo": {
        "type": "object",
        "properties": {
          "addressTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.BundleProductDefaultValueGetModel": {
        "type": "object",
        "properties": {
          "bundleId": {
            "type": "integer",
            "format": "int32"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.CopySalesOrderModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderDetailIds": {
            "type": "string",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.EmailDeliveryTicketModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "savePrimaryEmail": {
            "type": "boolean"
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.PARProductLinkModel": {
        "type": "object",
        "properties": {
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "parId": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.PatientBasicInfo": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.PatientClinicalDiagnosis": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.PhoneInfo": {
        "type": "object",
        "properties": {
          "phoneTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.PrintDeliveryTicketModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderActiveRentalsModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "productNameExp": {
            "type": "string",
            "nullable": true
          },
          "productNameValue": {
            "type": "string",
            "nullable": true
          },
          "actualDeliveryDateExp": {
            "type": "string",
            "nullable": true
          },
          "actualDeliveryDateValue": {
            "type": "string",
            "nullable": true
          },
          "actualDeliveryFromValue": {
            "type": "string",
            "nullable": true
          },
          "actualDeliveryToValue": {
            "type": "string",
            "nullable": true
          },
          "qtyExp": {
            "type": "string",
            "nullable": true
          },
          "qtyValue": {
            "type": "string",
            "nullable": true
          },
          "productTypeExp": {
            "type": "string",
            "nullable": true
          },
          "productTypeValue": {
            "type": "string",
            "nullable": true
          },
          "previousBillingDateExp": {
            "type": "string",
            "nullable": true
          },
          "previousBillingDateValue": {
            "type": "string",
            "nullable": true
          },
          "previousBillingDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "previousBillingDateToValue": {
            "type": "string",
            "nullable": true
          },
          "nextBillingDateExp": {
            "type": "string",
            "nullable": true
          },
          "nextBillingDateValue": {
            "type": "string",
            "nullable": true
          },
          "nextBillingDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "nextBillingDateToValue": {
            "type": "string",
            "nullable": true
          },
          "nextPeriodExp": {
            "type": "string",
            "nullable": true
          },
          "nextPeriodValue": {
            "type": "string",
            "nullable": true
          },
          "chargeExp": {
            "type": "string",
            "nullable": true
          },
          "chargeValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameValue": {
            "type": "string",
            "nullable": true
          },
          "patientIdExp": {
            "type": "string",
            "nullable": true
          },
          "patientIdValue": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeExp": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeValue": {
            "type": "string",
            "nullable": true
          },
          "primaryPayorExp": {
            "type": "string",
            "nullable": true
          },
          "primaryPayorValue": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "inventoryBranchNameExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryBranchNameValue": {
            "type": "string",
            "nullable": true
          },
          "serialNumberExp": {
            "type": "string",
            "nullable": true
          },
          "serialNumberValue": {
            "type": "string",
            "nullable": true
          },
          "homePhoneExp": {
            "type": "string",
            "nullable": true
          },
          "homePhoneValue": {
            "type": "string",
            "nullable": true
          },
          "mobilePhoneExp": {
            "type": "string",
            "nullable": true
          },
          "mobilePhoneValue": {
            "type": "string",
            "nullable": true
          },
          "marketingRepExp": {
            "type": "string",
            "nullable": true
          },
          "marketingRepValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderClinicalModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int64"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDiagnosis"
            },
            "nullable": true
          },
          "providerReferringDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerReferringFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorIds": {
            "type": "string",
            "nullable": true
          },
          "primaryDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralPatientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingRepEmployeeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isUpdatePatient": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderClinicalModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderCustomFormsModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "formName": {
            "type": "string",
            "nullable": true
          },
          "documentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "documentTypeName": {
            "type": "string",
            "nullable": true
          },
          "patientBucketFolderUrl": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderDeliveryInfoModel": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "patientAssessmentDate": {
            "type": "string",
            "description": "patientAssessmentDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "actualDate": {
            "type": "string",
            "description": "ActualDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "MobileNumber\r\n",
            "nullable": true
          },
          "homeNumber": {
            "type": "string",
            "description": "HomeNumber\r\n",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "description": "FacilityId\r\n",
            "format": "int64",
            "nullable": true
          },
          "taxZoneId": {
            "type": "integer",
            "description": "TaxZoneId\r\n",
            "format": "int64",
            "nullable": true
          },
          "deliveryNote": {
            "type": "string",
            "description": "DeliveryNote\r\n",
            "nullable": true
          },
          "isAutoAssignDriver": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryDriverId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "updatePatienShippingAddress": {
            "type": "boolean"
          },
          "billingAddress1": {
            "type": "string",
            "nullable": true
          },
          "billingAddress2": {
            "type": "string",
            "nullable": true
          },
          "billingCity": {
            "type": "string",
            "nullable": true
          },
          "billingStateCode": {
            "type": "string",
            "nullable": true
          },
          "billingZipCode": {
            "type": "string",
            "nullable": true
          },
          "billingLatitude": {
            "type": "string",
            "nullable": true
          },
          "billingLongitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderDeliveryInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderDiagnosis": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderDigitalSignatureModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "digitalSignature": {
            "type": "string",
            "nullable": true
          },
          "isPatientEducationPerformed": {
            "type": "boolean",
            "nullable": true
          },
          "isPrivacyNoticeReceived": {
            "type": "boolean",
            "nullable": true
          },
          "isSafetyAssitantPerformed": {
            "type": "boolean",
            "nullable": true
          },
          "instruction_Settings": {
            "type": "string",
            "nullable": true
          },
          "instructionSettingsOtherValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralInfoModel": {
        "type": "object",
        "properties": {
          "holdSalesOrder": {
            "type": "boolean",
            "description": "HoldSalesOrder\r\n",
            "nullable": true
          },
          "holdReasonId": {
            "type": "integer",
            "description": "HoldReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "inventoryBranchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "description": "OrderType\r\n",
            "nullable": true
          },
          "placeOfServiceId": {
            "type": "integer",
            "description": "PlaceOfServiceId\r\n",
            "format": "int32",
            "nullable": true
          },
          "dateOfAdmission": {
            "type": "string",
            "description": "DateOfAdmission\r\n",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDischarge": {
            "type": "string",
            "description": "DateOfDischarge\r\n",
            "format": "date-time",
            "nullable": true
          },
          "dateOfSurgery": {
            "type": "string",
            "description": "DateOfSurgery",
            "format": "date-time",
            "nullable": true
          },
          "dateOfOrderReceive": {
            "type": "string",
            "description": "DateOfOrderReceive",
            "format": "date-time",
            "nullable": true
          },
          "previousBillingDate": {
            "type": "string",
            "description": "PreviousBillingDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "nextBillingDate": {
            "type": "string",
            "description": "NextBillingDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "salesOrderNote": {
            "type": "string",
            "description": "SalesOrderNote\r\n",
            "nullable": true
          },
          "isPatientAssessmentRequired": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryNote": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "facilityDeliveryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderGeneralInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64"
          },
          "intakeId": {
            "type": "integer",
            "description": "IntakeId\r\n",
            "format": "int64",
            "nullable": true
          },
          "workFlowTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "generalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderGeneralInfoModel"
          },
          "deliveryInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderDeliveryInfoModel"
          },
          "courierTrackingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingInfoModel"
            },
            "description": "CourierTrackingList\r\n",
            "nullable": true
          },
          "workFlow": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderWorkFlowInfoModel"
          },
          "productWorkFlow": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowInfoModel"
          },
          "salesOrderProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel"
            },
            "nullable": true
          },
          "isUpdatePatientLevel": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderGeneralModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderGetModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderIdExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderIdValue": {
            "type": "string",
            "nullable": true
          },
          "statusExp": {
            "type": "string",
            "nullable": true
          },
          "statusValue": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "patientNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "wipStateExp": {
            "type": "string",
            "nullable": true
          },
          "wipStateValue": {
            "type": "string",
            "nullable": true
          },
          "assignedCSRId": {
            "type": "integer",
            "format": "int64"
          },
          "assignToNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "assignToNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "facilityNameExp": {
            "type": "string",
            "nullable": true
          },
          "facilityNameValue": {
            "type": "string",
            "nullable": true
          },
          "dueDateExp": {
            "type": "string",
            "nullable": true
          },
          "dueDateValue": {
            "type": "string",
            "nullable": true
          },
          "isHold": {
            "type": "boolean",
            "nullable": true
          },
          "isVoid": {
            "type": "boolean",
            "nullable": true
          },
          "isConfirmed": {
            "type": "boolean",
            "nullable": true
          },
          "createdByNameIdExp": {
            "type": "string",
            "nullable": true
          },
          "createdByNameIdValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateExp": {
            "type": "string",
            "nullable": true
          },
          "createdDateValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "createdDateToValue": {
            "type": "string",
            "nullable": true
          },
          "deliveryDateExp": {
            "type": "string",
            "nullable": true
          },
          "deliveryDateValue": {
            "type": "string",
            "nullable": true
          },
          "deliveryDateFromValue": {
            "type": "string",
            "nullable": true
          },
          "deliveryDateToValue": {
            "type": "string",
            "nullable": true
          },
          "isCmnExist": {
            "type": "boolean",
            "nullable": true
          },
          "statusTypeExp": {
            "type": "string",
            "nullable": true
          },
          "statusTypeValue": {
            "type": "string",
            "nullable": true
          },
          "salesOrderTypeNameExp": {
            "type": "string",
            "nullable": true
          },
          "salesOrderTypeNameValue": {
            "type": "string",
            "nullable": true
          },
          "marketingRepExp": {
            "type": "string",
            "nullable": true
          },
          "marketingRepValue": {
            "type": "string",
            "nullable": true
          },
          "inventoryBranchNameExp": {
            "type": "string",
            "nullable": true
          },
          "inventoryBranchNameValue": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "isRentalPickupOnly": {
            "type": "boolean",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "hasReturnOrExchange": {
            "type": "boolean",
            "nullable": true
          },
          "referenceNumberExp": {
            "type": "string",
            "nullable": true
          },
          "referenceNumberValue": {
            "type": "string",
            "nullable": true
          },
          "addressExp": {
            "type": "string",
            "nullable": true
          },
          "addressValue": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientInsuranceNameExp": {
            "type": "string",
            "nullable": true
          },
          "patientInsuranceNameValue": {
            "type": "string",
            "nullable": true
          },
          "parStatusExp": {
            "type": "string",
            "nullable": true
          },
          "parStatusValue": {
            "type": "string",
            "nullable": true
          },
          "parNumberExp": {
            "type": "string",
            "nullable": true
          },
          "parNumberValue": {
            "type": "string",
            "nullable": true
          },
          "voidReasonExp": {
            "type": "string",
            "nullable": true
          },
          "voidReasonValue": {
            "type": "string",
            "nullable": true
          },
          "holdReasonExp": {
            "type": "string",
            "nullable": true
          },
          "holdReasonValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceAdjustorModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "patientInsuranceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "insurancePersonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderInsuranceAdjustorModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceInfoModel": {
        "type": "object",
        "properties": {
          "patientInsuranceId": {
            "type": "integer",
            "description": "PatientInsuranceId\r\n",
            "format": "int64",
            "nullable": true
          },
          "box_10d": {
            "type": "string",
            "description": "Box_10d\r\n",
            "nullable": true
          },
          "box_19": {
            "type": "string",
            "description": "Box_19\r\n",
            "nullable": true
          },
          "isResponsible": {
            "type": "boolean",
            "description": "IsResponsible\r\n",
            "nullable": true
          },
          "eligibilityCheckFrequencyValue": {
            "type": "string",
            "description": "EligibilityCheckFrequencyValue\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderInsuranceInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int64"
          },
          "isCoverageVerified": {
            "type": "boolean",
            "description": "IsCoverageVerified\r\n",
            "nullable": true
          },
          "isInjuryRelatedToEmployment": {
            "type": "boolean",
            "description": "IsInjuryRelatedToEmployment\r\n",
            "nullable": true
          },
          "isInjuryRelatedToAutoAccident": {
            "type": "boolean",
            "description": "IsInjuryRelatedToAutoAccident\r\n",
            "nullable": true
          },
          "isInjuryRelatedToNonAutoAccident": {
            "type": "boolean",
            "description": "IsInjuryRelatedToNonAutoAccident\r\n",
            "nullable": true
          },
          "stateInjuryOccured": {
            "type": "string",
            "description": "StateInjuryOccured\r\n",
            "nullable": true
          },
          "dateOfInjury": {
            "type": "string",
            "description": "DateOfInjury\r\n",
            "format": "date-time",
            "nullable": true
          },
          "claimNoteTypeId": {
            "type": "integer",
            "description": "ClaimNoteTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "claimNote": {
            "type": "string",
            "description": "ClaimNote\r\n",
            "nullable": true
          },
          "isPatientResponsible": {
            "type": "boolean",
            "description": "IsPatientResponsible\r\n",
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderInsuranceInfoModel"
            },
            "description": "Insurances\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderInsuranceModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderPatientModel": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int64"
          },
          "basicInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PatientBasicInfo"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.AddressInfo"
            },
            "nullable": true
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PhoneInfo"
            },
            "nullable": true
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.PatientClinicalDiagnosis"
            },
            "nullable": true
          },
          "orderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderPricingUpdateModel": {
        "type": "object",
        "properties": {
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "feeScheduleId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemScheduleModel": {
        "type": "object",
        "properties": {
          "salesOrderProductItemScheduleId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productItemScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "salesOrderProductItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemSchedulerDetailModel"
            },
            "nullable": true
          },
          "salesOrderTemplateDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductItemSchedulerDetailModel": {
        "type": "object",
        "properties": {
          "salesOrderProductItemScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int32"
          },
          "salesOrderDetailId": {
            "type": "integer",
            "description": "SalesOrderDetailId\r\n",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "description": "PosLocationId\r\n",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "description": "ProductId\r\n",
            "format": "int64"
          },
          "productName": {
            "type": "string",
            "description": "ProductName\r\n",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId\r\n",
            "format": "int32",
            "nullable": true
          },
          "dateOfService": {
            "type": "string",
            "description": "DateOfService\r\n",
            "format": "date-time",
            "nullable": true
          },
          "oldQuantity": {
            "type": "integer",
            "description": "To track how many Quantity user entered previously OldQuantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "oldBillQuantity": {
            "type": "number",
            "description": "To track how many BillQuantity user entered previously\r\n",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "billQuantity": {
            "type": "number",
            "description": "BillQuantity\r\n",
            "format": "double",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName\r\n",
            "nullable": true
          },
          "priceTypeId": {
            "type": "integer",
            "description": "PriceTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "diagnosisPointer1": {
            "type": "string",
            "description": "DiagnosisPointer1\r\n",
            "nullable": true
          },
          "diagnosisPointer2": {
            "type": "string",
            "description": "DiagnosisPointer2\r\n",
            "nullable": true
          },
          "diagnosisPointer3": {
            "type": "string",
            "description": "DiagnosisPointer3\r\n",
            "nullable": true
          },
          "diagnosisPointer4": {
            "type": "string",
            "description": "DiagnosisPointer4\r\n",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4\r\n",
            "format": "int32",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "description": "BillAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "additionalMod1": {
            "type": "integer",
            "description": "AdditionalMod1\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod2": {
            "type": "integer",
            "description": "AdditionalMod2\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod3": {
            "type": "integer",
            "description": "AdditionalMod3\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod4": {
            "type": "integer",
            "description": "AdditionalMod4\r\n",
            "format": "int32",
            "nullable": true
          },
          "acceptAssignment": {
            "type": "boolean",
            "description": "AcceptAssignment\r\n",
            "nullable": true
          },
          "pricingOverride": {
            "type": "boolean",
            "description": "PricingOverride\r\n",
            "nullable": true
          },
          "modifiersOverride": {
            "type": "boolean",
            "description": "ModifiersOverride\r\n",
            "nullable": true
          },
          "taxable": {
            "type": "boolean",
            "description": "Taxable\r\n",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note\r\n",
            "nullable": true
          },
          "isInsuranceFlagsPrimary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsPrimary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsSecondary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsSecondary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsTertiary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsTertiary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsQuaternary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsQuaternary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsQuinary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsQuinary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsSenary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsSenary\r\n",
            "nullable": true
          },
          "claimNoteTypeId": {
            "type": "integer",
            "description": "ClaimNoteTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "claimNote": {
            "type": "string",
            "description": "ClaimNote\r\n",
            "nullable": true
          },
          "createCmn": {
            "type": "boolean",
            "description": "CreateCmn\r\n",
            "nullable": true
          },
          "createPar": {
            "type": "boolean",
            "description": "CreateCmn\r\n",
            "nullable": true
          },
          "createAbn": {
            "type": "boolean",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "requireReplace": {
            "type": "boolean",
            "nullable": true
          },
          "serialNumbers": {
            "type": "string",
            "nullable": true
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "feeScheduleCMNFormId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "taxableAddressId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxableAddressType": {
            "type": "string",
            "nullable": true
          },
          "invoiceSplitType": {
            "type": "string",
            "nullable": true
          },
          "nextPeriod": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isFetchNextPeriod": {
            "type": "boolean",
            "nullable": true
          },
          "isManualConvertToPurchase": {
            "type": "boolean",
            "nullable": true
          },
          "manualConvertToPurchaseAmount": {
            "type": "number",
            "description": "ManualConvertToPurchaseAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "manualConvertToPurchaseContractAmount": {
            "type": "number",
            "description": "ManualConvertToPurchaseContractAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "manualConvertToPurchaseMod1": {
            "type": "integer",
            "description": "ManualConvertToPurchaseMod1\r\n",
            "format": "int32",
            "nullable": true
          },
          "manualConvertToPurchaseMod2": {
            "type": "integer",
            "description": "ManualConvertToPurchaseMod2\r\n",
            "format": "int32",
            "nullable": true
          },
          "manualConvertToPurchaseMod3": {
            "type": "integer",
            "description": "ManualConvertToPurchaseMod3\r\n",
            "format": "int32",
            "nullable": true
          },
          "manualConvertToPurchaseMod4": {
            "type": "integer",
            "description": "ManualConvertToPurchaseMod4\r\n",
            "format": "int32",
            "nullable": true
          },
          "manualConvertToPurchaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "feeScheduleId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isNonBillableItem": {
            "type": "boolean",
            "description": "IsNonBillableItem\r\n",
            "nullable": true
          },
          "editNextBillingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isByPassQtyCheck": {
            "type": "boolean",
            "nullable": true
          },
          "isOverrideBillQty": {
            "type": "boolean",
            "nullable": true
          },
          "isParNotAutoLink": {
            "type": "boolean",
            "nullable": true
          },
          "isResupply": {
            "type": "boolean",
            "nullable": true
          },
          "resupplyTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactMethodIds": {
            "type": "string",
            "nullable": true
          },
          "intakeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderProductModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductPricingParameterModel": {
        "type": "object",
        "properties": {
          "keyParameter": {
            "type": "string",
            "description": "Posible Values: PROCEDURE_CODE, OPTION_NAME, INSURANCE \r\n",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "description": "SalesOrderDetailId\r\n",
            "format": "int32",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId\r\n",
            "format": "int32",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName\r\n",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "description": "InsuranceId\r\n",
            "format": "int32",
            "nullable": true
          },
          "activeInsuranceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOnlyCoveredByPatient": {
            "type": "boolean",
            "description": "IsOnlyCoveredByPatient\r\n",
            "nullable": true
          },
          "pricingOverride": {
            "type": "boolean",
            "nullable": true
          },
          "isOverrideBillQty": {
            "type": "boolean",
            "nullable": true
          },
          "overrideBillQty": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isModifiersOverride": {
            "type": "boolean",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductSerialNumberModel": {
        "type": "object",
        "properties": {
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "serialNumbers": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowGetModel": {
        "type": "object",
        "properties": {
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderProductWorkFlowInfoModel": {
        "type": "object",
        "properties": {
          "salesOrderProductWorkFlowId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productWorkFlowGeneralId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productWorkFlowStepId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isWorkFlowCompleted": {
            "type": "boolean"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderResetByStatusModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderResupplyTemplateUpdate": {
        "type": "object",
        "properties": {
          "salesOrderDetailId": {
            "type": "integer",
            "format": "int32"
          },
          "resupplyTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "contactMethodIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingInfoModel": {
        "type": "object",
        "properties": {
          "courier": {
            "type": "string",
            "description": "Courier\r\n",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "TrackingId\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderTrackingInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderTrackingShipment": {
        "type": "object",
        "properties": {
          "trackingShipment": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.TrackingShipmentModel"
          },
          "ratingsModel": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UpsShipmentModel"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderUpdateStatusModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int32",
            "nullable": true
          },
          "orderTypeId": {
            "type": "string",
            "description": "OrderTypeId\r\n",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "cancelledReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderVoidModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int32"
          },
          "isVoid": {
            "type": "boolean",
            "description": "IsVoid\r\n"
          },
          "salesOrderVoidReasonId": {
            "type": "integer",
            "description": "SalesOrderVoidReasonId\r\n",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.SalesOrderWorkFlowInfoModel": {
        "type": "object",
        "properties": {
          "workflowStateId": {
            "type": "integer",
            "description": "WorkflowStateId\r\n",
            "format": "int32",
            "nullable": true
          },
          "isNotifyAssignedTo": {
            "type": "boolean",
            "description": "IsNotifyAssignedTo\r\n"
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "isWorkFlowCompleted": {
            "type": "boolean",
            "description": "IsWorkFlowCompleted\r\n"
          },
          "workflowStatusValue": {
            "type": "string",
            "description": "WorkflowStatusValue\r\n",
            "nullable": true
          },
          "isWorkflowChanged": {
            "type": "boolean",
            "description": "IsWorkFlowCompleted\r\n"
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderWorkFlowInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.SerialNumberUpdateStatusModel": {
        "type": "object",
        "properties": {
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Setting": {
        "type": "object",
        "properties": {
          "settingCode": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.TrackingShipmentDetails": {
        "type": "object",
        "properties": {
          "packageDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "trackingId": {
            "type": "integer",
            "format": "int64"
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "graphicImage": {
            "type": "string",
            "nullable": true
          },
          "packingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "packageDetailAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.TrackingShipmentModel": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "integer",
            "format": "int64"
          },
          "shipmentIdentificationNumber": {
            "type": "string",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "courierId": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "packageTotal": {
            "type": "number",
            "format": "double"
          },
          "trackingShipmentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.TrackingShipmentDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.UpdateProductSerialNumberByStatusModel": {
        "type": "object",
        "properties": {
          "productSerialNumberId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.UpdateSalesOrderByInputModel": {
        "type": "object",
        "properties": {
          "scheduleDeliveryDate": {
            "type": "string",
            "description": "ScheduleDeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "actualDeliveryDate": {
            "type": "string",
            "description": "ActualDeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "inventoryBranchId": {
            "type": "integer",
            "description": "InventoryBranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderId\r\n",
            "format": "int64"
          },
          "updateInput": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "UpdateSalesOrderByInputModel\r\n"
      },
      "WebAPI.Areas.SalesOrder.Models.Void.Request": {
        "type": "object",
        "properties": {
          "transactionReference": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.TransactionReference"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.ServiceAccessToken": {
        "type": "object",
        "properties": {
          "accessLicenseNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.TransactionReference": {
        "type": "object",
        "properties": {
          "customerContext": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.UPSSecurity": {
        "type": "object",
        "properties": {
          "usernameToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.UsernameToken"
          },
          "serviceAccessToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.ServiceAccessToken"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.UsernameToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.VoidModel": {
        "type": "object",
        "properties": {
          "upsSecurity": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.UPSSecurity"
          },
          "voidShipmentRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidShipmentRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.VoidShipment": {
        "type": "object",
        "properties": {
          "shipmentIdentificationNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrder.Models.Void.VoidShipmentRequest": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shipmentIdentificationNumber": {
            "type": "string",
            "nullable": true
          },
          "request": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.Request"
          },
          "voidShipment": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrder.Models.Void.VoidShipment"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.ProcedureScheduleModel": {
        "type": "object",
        "properties": {
          "sortColumn": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentGroupTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "procedureCodeDMECategoryScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "feeId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "billingPeriod": {
            "type": "string",
            "nullable": true
          },
          "billingEvery": {
            "type": "integer",
            "format": "int32"
          },
          "billingUntil": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "procedureCodeDMECategoryScheduleIdExp": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeDMECategoryScheduleIdValue": {
            "type": "string",
            "nullable": true
          },
          "billingPeriodExp": {
            "type": "string",
            "nullable": true
          },
          "billingPeriodValue": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeExp": {
            "type": "string",
            "nullable": true
          },
          "procedureCodeValue": {
            "type": "string",
            "nullable": true
          },
          "billingUntilExp": {
            "type": "string",
            "nullable": true
          },
          "billingUntilValue": {
            "type": "string",
            "nullable": true
          },
          "billingEveryExp": {
            "type": "string",
            "nullable": true
          },
          "billingEveryValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderDiagnosis": {
        "type": "object",
        "properties": {
          "diagnosisId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateClinicalModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "diagnosisCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderDiagnosis"
            },
            "nullable": true
          },
          "providerReferringDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerReferringFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerRenderingFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderingDoctorIds": {
            "type": "string",
            "nullable": true
          },
          "primaryDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralDoctorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralFacilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "marketingReferralPatientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateDeliveryInfoModel": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          },
          "patientAssessmentDate": {
            "type": "string",
            "description": "patientAssessmentDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "description": "DeliveryDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "actualDate": {
            "type": "string",
            "description": "ActualDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "MobileNumber\r\n",
            "nullable": true
          },
          "homeNumber": {
            "type": "string",
            "description": "HomeNumber\r\n",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "description": "FacilityId\r\n",
            "format": "int64",
            "nullable": true
          },
          "taxZoneId": {
            "type": "integer",
            "description": "TaxZoneId\r\n",
            "format": "int64",
            "nullable": true
          },
          "deliveryNote": {
            "type": "string",
            "description": "DeliveryNote\r\n",
            "nullable": true
          },
          "autoDeliveryDate": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryDateDaysAfterCreation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAutoAssignDriver": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryDriverId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderDeliveryInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralInfoModel": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "description": "TemplateName\r\n",
            "nullable": true
          },
          "holdSalesOrder": {
            "type": "boolean",
            "description": "HoldSalesOrder\r\n",
            "nullable": true
          },
          "holdReasonId": {
            "type": "integer",
            "description": "HoldReasonId\r\n",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "BranchId\r\n",
            "format": "int64",
            "nullable": true
          },
          "inventoryBranchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "description": "OrderType\r\n",
            "nullable": true
          },
          "placeOfServiceId": {
            "type": "integer",
            "description": "PlaceOfServiceId\r\n",
            "format": "int32",
            "nullable": true
          },
          "dateOfAdmission": {
            "type": "string",
            "description": "DateOfAdmission\r\n",
            "format": "date-time",
            "nullable": true
          },
          "dateOfDischarge": {
            "type": "string",
            "description": "DateOfDischarge\r\n",
            "format": "date-time",
            "nullable": true
          },
          "previousBillingDate": {
            "type": "string",
            "description": "PreviousBillingDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "nextBillingDate": {
            "type": "string",
            "description": "NextBillingDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "salesOrderNote": {
            "type": "string",
            "description": "SalesOrderNote\r\n",
            "nullable": true
          },
          "isPatientAssessmentRequired": {
            "type": "boolean",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "dateOfSurgery": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderGeneralInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "description": "SalesOrderTemplateId\r\n",
            "format": "int64"
          },
          "patientId": {
            "type": "integer",
            "description": "PatientId\r\n",
            "format": "int64"
          },
          "generalInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateGeneralInfoModel"
          },
          "deliveryInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateDeliveryInfoModel"
          },
          "courierTrackingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateTrackingInfoModel"
            },
            "description": "CourierTrackingList\r\n",
            "nullable": true
          },
          "workFlow": {
            "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateWorkFlowInfoModel"
          },
          "salesOrderId": {
            "type": "integer",
            "description": "SalesOrderd\r\n",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceInfoModel": {
        "type": "object",
        "properties": {
          "patientInsuranceId": {
            "type": "integer",
            "description": "PatientInsuranceId\r\n",
            "format": "int64",
            "nullable": true
          },
          "box_10d": {
            "type": "string",
            "description": "Box_10d\r\n",
            "nullable": true
          },
          "box_19": {
            "type": "string",
            "description": "Box_19\r\n",
            "nullable": true
          },
          "isResponsible": {
            "type": "boolean",
            "description": "IsResponsible\r\n",
            "nullable": true
          },
          "eligibilityCheckFrequencyValue": {
            "type": "string",
            "description": "EligibilityCheckFrequencyValue\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderInsuranceInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "description": "SalesOrderTemplateId\r\n",
            "format": "int64"
          },
          "isCoverageVerified": {
            "type": "boolean",
            "description": "IsCoverageVerified\r\n",
            "nullable": true
          },
          "isInjuryRelatedToEmployment": {
            "type": "boolean",
            "description": "IsInjuryRelatedToEmployment\r\n",
            "nullable": true
          },
          "isInjuryRelatedToAutoAccident": {
            "type": "boolean",
            "description": "IsInjuryRelatedToAutoAccident\r\n",
            "nullable": true
          },
          "isInjuryRelatedToNonAutoAccident": {
            "type": "boolean",
            "description": "IsInjuryRelatedToNonAutoAccident\r\n",
            "nullable": true
          },
          "stateInjuryOccured": {
            "type": "string",
            "description": "StateInjuryOccured\r\n",
            "nullable": true
          },
          "dateOfInjury": {
            "type": "string",
            "description": "DateOfInjury\r\n",
            "format": "date-time",
            "nullable": true
          },
          "claimNoteTypeId": {
            "type": "integer",
            "description": "ClaimNoteTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "claimNote": {
            "type": "string",
            "description": "ClaimNote\r\n",
            "nullable": true
          },
          "isPatientResponsible": {
            "type": "boolean",
            "description": "IsPatientResponsible\r\n",
            "nullable": true
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateInsuranceInfoModel"
            },
            "description": "Insurances\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "description": "SalesOrderTemplateId\r\n",
            "format": "int32"
          },
          "salesOrderTemplateDetailId": {
            "type": "integer",
            "description": "SalesOrderTemplateDetailId\r\n",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "description": "PosLocationId\r\n",
            "format": "int64"
          },
          "productItemId": {
            "type": "integer",
            "description": "ProductId\r\n",
            "format": "int64"
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId\r\n",
            "format": "int32",
            "nullable": true
          },
          "dateOfService": {
            "type": "string",
            "description": "DateOfService\r\n",
            "format": "date-time",
            "nullable": true
          },
          "oldQuantity": {
            "type": "integer",
            "description": "To track how many Quantity user entered previously OldQuantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "oldBillQuantity": {
            "type": "number",
            "description": "To track how many BillQuantity user entered previously\r\n",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity\r\n",
            "format": "int32",
            "nullable": true
          },
          "billQuantity": {
            "type": "number",
            "description": "BillQuantity\r\n",
            "format": "double",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName\r\n",
            "nullable": true
          },
          "priceTypeId": {
            "type": "integer",
            "description": "PriceTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "diagnosisPointer1": {
            "type": "string",
            "description": "DiagnosisPointer1\r\n",
            "nullable": true
          },
          "diagnosisPointer2": {
            "type": "string",
            "description": "DiagnosisPointer2\r\n",
            "nullable": true
          },
          "diagnosisPointer3": {
            "type": "string",
            "description": "DiagnosisPointer3\r\n",
            "nullable": true
          },
          "diagnosisPointer4": {
            "type": "string",
            "description": "DiagnosisPointer4\r\n",
            "nullable": true
          },
          "mod1": {
            "type": "integer",
            "description": "Mod1\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod2": {
            "type": "integer",
            "description": "Mod2\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod3": {
            "type": "integer",
            "description": "Mod3\r\n",
            "format": "int32",
            "nullable": true
          },
          "mod4": {
            "type": "integer",
            "description": "Mod4\r\n",
            "format": "int32",
            "nullable": true
          },
          "billAmount": {
            "type": "number",
            "description": "BillAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "allowAmount": {
            "type": "number",
            "description": "AllowAmount\r\n",
            "format": "double",
            "nullable": true
          },
          "additionalMod1": {
            "type": "integer",
            "description": "AdditionalMod1\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod2": {
            "type": "integer",
            "description": "AdditionalMod2\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod3": {
            "type": "integer",
            "description": "AdditionalMod3\r\n",
            "format": "int32",
            "nullable": true
          },
          "additionalMod4": {
            "type": "integer",
            "description": "AdditionalMod4\r\n",
            "format": "int32",
            "nullable": true
          },
          "acceptAssignment": {
            "type": "boolean",
            "description": "AcceptAssignment\r\n",
            "nullable": true
          },
          "pricingOverride": {
            "type": "boolean",
            "description": "PricingOverride\r\n",
            "nullable": true
          },
          "modifiersOverride": {
            "type": "boolean",
            "description": "ModifiersOverride\r\n",
            "nullable": true
          },
          "taxable": {
            "type": "boolean",
            "description": "Taxable\r\n",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note\r\n",
            "nullable": true
          },
          "isInsuranceFlagsPrimary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsPrimary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsSecondary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsSecondary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsTertiary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsTertiary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsQuaternary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsQuaternary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsQuinary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsQuinary\r\n",
            "nullable": true
          },
          "isInsuranceFlagsSenary": {
            "type": "boolean",
            "description": "IsInsuranceFlagsSenary\r\n",
            "nullable": true
          },
          "claimNoteTypeId": {
            "type": "integer",
            "description": "ClaimNoteTypeId\r\n",
            "format": "int32",
            "nullable": true
          },
          "claimNote": {
            "type": "string",
            "description": "ClaimNote\r\n",
            "nullable": true
          },
          "createCmn": {
            "type": "boolean",
            "description": "CreateCmn\r\n",
            "nullable": true
          },
          "createPar": {
            "type": "boolean",
            "description": "CreateCmn\r\n",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "requireReplace": {
            "type": "boolean",
            "nullable": true
          },
          "serialNumbers": {
            "type": "string",
            "nullable": true
          },
          "productStockingUOMId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "taxableAddressId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "taxableAddressType": {
            "type": "string",
            "nullable": true
          },
          "invoiceSplitType": {
            "type": "string",
            "nullable": true
          },
          "isNonBillableItem": {
            "type": "boolean",
            "nullable": true
          },
          "isHold": {
            "type": "boolean",
            "nullable": true
          },
          "holdUntilDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "holdReasonNote": {
            "type": "string",
            "nullable": true
          },
          "isByPassQtyCheck": {
            "type": "boolean",
            "nullable": true
          },
          "isResupply": {
            "type": "boolean",
            "nullable": true
          },
          "resupplyTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactMethodIds": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isSkipNextSchedule": {
            "type": "boolean",
            "nullable": true
          },
          "skipReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateProductPricingParameterModel": {
        "type": "object",
        "properties": {
          "keyParameter": {
            "type": "string",
            "description": "Posible Values: PROCEDURE_CODE, OPTION_NAME, INSURANCE \r\n",
            "nullable": true
          },
          "salesOrderTemplateDetailId": {
            "type": "integer",
            "description": "SalesOrderDetailId\r\n",
            "format": "int32",
            "nullable": true
          },
          "procedureCodeDMECategoryId": {
            "type": "integer",
            "description": "ProcedureCodeDMECategoryId\r\n",
            "format": "int32",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "description": "OptionName\r\n",
            "nullable": true
          },
          "insuranceId": {
            "type": "integer",
            "description": "InsuranceId\r\n",
            "format": "int32",
            "nullable": true
          },
          "activeInsuranceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isOnlyCoveredByPatient": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSaveModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderDetailIds": {
            "type": "string",
            "nullable": true
          },
          "isProductBaseTemplate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateSettingModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateSettingId": {
            "type": "integer",
            "format": "int64"
          },
          "salesOrderTemplateId": {
            "type": "integer",
            "format": "int64"
          },
          "intervalType": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "lastRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextRun": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodsRun": {
            "type": "integer",
            "format": "int32"
          },
          "repeatEveryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weekValues": {
            "type": "string",
            "nullable": true
          },
          "monthValues": {
            "type": "string",
            "nullable": true
          },
          "monthCondition": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "isUpdated": {
            "type": "boolean"
          },
          "selectedMonths": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateTrackingInfoModel": {
        "type": "object",
        "properties": {
          "courier": {
            "type": "string",
            "description": "Courier\r\n",
            "nullable": true
          },
          "trackingId": {
            "type": "string",
            "description": "TrackingId\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderTrackingInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateVoidModel": {
        "type": "object",
        "properties": {
          "salesOrderTemplateId": {
            "type": "integer",
            "description": "SalesOrderTemplateId\r\n",
            "format": "int32"
          },
          "isVoid": {
            "type": "boolean",
            "description": "IsVoid\r\n"
          },
          "salesOrderVoidReasonId": {
            "type": "integer",
            "description": "SalesOrderVoidReasonId\r\n",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SalesOrderTemplate.Models.SalesOrderTemplateWorkFlowInfoModel": {
        "type": "object",
        "properties": {
          "workflowStateId": {
            "type": "integer",
            "description": "WorkflowStateId\r\n",
            "format": "int32",
            "nullable": true
          },
          "isNotifyAssignedTo": {
            "type": "boolean",
            "description": "IsNotifyAssignedTo\r\n"
          },
          "assignTo": {
            "type": "integer",
            "description": "AssignTo\r\n",
            "format": "int64",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "DueDate\r\n",
            "format": "date-time",
            "nullable": true
          },
          "isWorkFlowCompleted": {
            "type": "boolean",
            "description": "IsWorkFlowCompleted\r\n"
          },
          "workflowStatusValue": {
            "type": "string",
            "description": "WorkflowStatusValue\r\n",
            "nullable": true
          },
          "isWorkflowChanged": {
            "type": "boolean",
            "description": "IsWorkFlowCompleted\r\n"
          },
          "autoDueDate": {
            "type": "boolean",
            "nullable": true
          },
          "daysAfterCreation": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "SalesOrderWorkFlowInfoModel\r\n"
      },
      "WebAPI.Areas.SalesOrderWorkList.Models.SalesOrderOwerShipModel": {
        "type": "object",
        "properties": {
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "assignTo": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "workFlowStateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Schedule.Models.ScheduleAppointmentFilterModel": {
        "type": "object",
        "properties": {
          "appointmentStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "appointmentEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "appointmentStatusId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "appointmentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "branchUser": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Schedule.Models.ScheduleAppointmentModel": {
        "type": "object",
        "properties": {
          "scheduleAppointmentId": {
            "type": "integer",
            "format": "int64"
          },
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "appointmentTypeId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "appointmentStatusId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "appointmentCancellationReasonId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "allDay": {
            "type": "boolean"
          },
          "isParent": {
            "type": "boolean"
          },
          "parentScheduleAppointmentId": {
            "type": "integer",
            "format": "int64"
          },
          "repeatRecurrence": {
            "type": "string",
            "nullable": true
          },
          "repeatEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blockTimeOf": {
            "type": "string",
            "nullable": true
          },
          "scheduleType": {
            "type": "string",
            "nullable": true
          },
          "customValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Schedule.Models.ScheduleAppointmentModelList": {
        "type": "object",
        "properties": {
          "scheduleAppointmentModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Schedule.Models.ScheduleAppointmentModel"
            },
            "nullable": true
          },
          "event": {
            "type": "string",
            "nullable": true
          },
          "currentId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.SupplierProduct.Models.SupplierProductSaveModel": {
        "type": "object",
        "properties": {
          "productitemid": {
            "type": "integer",
            "format": "int64"
          },
          "supplierid": {
            "type": "integer",
            "format": "int64"
          },
          "supplieritemid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.TwoWaySms.Controllers.TwoWaySmsController+SmsOnDemandModel": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Address": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateProvinceCode": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.AddressKeyFormat": {
        "type": "object",
        "properties": {
          "ConsigneeName": {
            "type": "string",
            "nullable": true
          },
          "BuildingName": {
            "type": "string",
            "nullable": true
          },
          "AddressLine": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "PoliticalDivision2": {
            "type": "string",
            "nullable": true
          },
          "PoliticalDivision1": {
            "type": "string",
            "nullable": true
          },
          "PostcodePrimaryLow": {
            "type": "string",
            "nullable": true
          },
          "PostcodeExtendedLow": {
            "type": "string",
            "nullable": true
          },
          "Urbanization": {
            "type": "string",
            "nullable": true
          },
          "CountryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.BillShipper": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Package": {
        "type": "object",
        "properties": {
          "packageWeight": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PackageWeight"
          },
          "packagingType": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PackagingType"
          },
          "packaging": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PackagingType"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.PackageWeight": {
        "type": "object",
        "properties": {
          "unitOfMeasurement": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.UnitOfMeasurement"
          },
          "weight": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.PackagingType": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.PaymentDetails": {
        "type": "object",
        "properties": {
          "shipmentCharge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.ShipmentCharge"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.PickupType": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.RateRequest": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Request"
          },
          "shipment": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Shipment"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.RatingsModel": {
        "type": "object",
        "properties": {
          "rateRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RateRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Request": {
        "type": "object",
        "properties": {
          "requestOption": {
            "type": "string",
            "nullable": true
          },
          "transactionReference": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TransactionReference"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Service": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.ShipFrom": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.ShipTo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Shipment": {
        "type": "object",
        "properties": {
          "numOfPieces": {
            "type": "integer",
            "format": "int32"
          },
          "package": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Package"
            },
            "nullable": true
          },
          "paymentDetails": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PaymentDetails"
          },
          "paymentInformation": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PaymentDetails"
          },
          "pickupType": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.PickupType"
          },
          "service": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Service"
          },
          "shipFrom": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.ShipFrom"
          },
          "shipper": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Shipper"
          },
          "shipTo": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.ShipTo"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.ShipmentCharge": {
        "type": "object",
        "properties": {
          "billShipper": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.BillShipper"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.Shipper": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "shipperNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.Address"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackRequest": {
        "type": "object",
        "properties": {
          "inquiryNumber": {
            "type": "string",
            "nullable": true
          },
          "request": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingModel": {
        "type": "object",
        "properties": {
          "upsSecurity": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingUPSSecurity"
          },
          "trackRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingRequest": {
        "type": "object",
        "properties": {
          "requestOption": {
            "type": "string",
            "nullable": true
          },
          "transactionReference": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingTransactionReference"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingServiceAccessToken": {
        "type": "object",
        "properties": {
          "accessLicenseNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingTransactionReference": {
        "type": "object",
        "properties": {
          "customerContext": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingUPSSecurity": {
        "type": "object",
        "properties": {
          "usernameToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingUsernameToken"
          },
          "serviceAccessToken": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.TrackingServiceAccessToken"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TrackingUsernameToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.TransactionReference": {
        "type": "object",
        "properties": {
          "customerContext": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.UnitOfMeasurement": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.UpsShipmentModel": {
        "type": "object",
        "properties": {
          "shipmentRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.RateRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.XavRequest": {
        "type": "object",
        "properties": {
          "AddressKeyFormat": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.AddressKeyFormat"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UPS.Models.XavRequestModel": {
        "type": "object",
        "properties": {
          "XAVRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.UPS.Models.XavRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.AddressValidateRequest": {
        "type": "object",
        "properties": {
          "revision": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.USPSAddress"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.AddressViewModel": {
        "type": "object",
        "properties": {
          "addressValidateRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.AddressValidateRequest"
          },
          "userid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.CarrierPickupAvailabilityRequest": {
        "type": "object",
        "properties": {
          "firmName": {
            "type": "string",
            "nullable": true
          },
          "suiteOrApt": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "urbanization": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "ziP5": {
            "type": "string",
            "nullable": true
          },
          "ziP4": {
            "type": "string",
            "nullable": true
          },
          "userid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.DomesticMailServiceStandardModel": {
        "type": "object",
        "properties": {
          "priorityMailRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.PriorityMailRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.EVSCertifyRequest": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string",
            "nullable": true
          },
          "option": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "imageParameters": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.ImageParameters"
          },
          "fromName": {
            "type": "string",
            "nullable": true
          },
          "fromFirm": {
            "type": "string",
            "nullable": true
          },
          "fromAddress1": {
            "type": "string",
            "nullable": true
          },
          "fromAddress2": {
            "type": "string",
            "nullable": true
          },
          "fromCity": {
            "type": "string",
            "nullable": true
          },
          "fromState": {
            "type": "string",
            "nullable": true
          },
          "fromZip5": {
            "type": "string",
            "nullable": true
          },
          "fromZip4": {
            "type": "string",
            "nullable": true
          },
          "fromPhone": {
            "type": "string",
            "nullable": true
          },
          "poZipCode": {
            "type": "string",
            "nullable": true
          },
          "allowNonCleansedOriginAddr": {
            "type": "string",
            "nullable": true
          },
          "toName": {
            "type": "string",
            "nullable": true
          },
          "toFirm": {
            "type": "string",
            "nullable": true
          },
          "toAddress1": {
            "type": "string",
            "nullable": true
          },
          "toAddress2": {
            "type": "string",
            "nullable": true
          },
          "toCity": {
            "type": "string",
            "nullable": true
          },
          "toState": {
            "type": "string",
            "nullable": true
          },
          "toZip5": {
            "type": "string",
            "nullable": true
          },
          "toZip4": {
            "type": "string",
            "nullable": true
          },
          "toPhone": {
            "type": "string",
            "nullable": true
          },
          "poBox": {
            "type": "string",
            "nullable": true
          },
          "allowNonCleansedDestAddr": {
            "type": "string",
            "nullable": true
          },
          "weightInOunces": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          },
          "machinable": {
            "type": "string",
            "nullable": true
          },
          "processingCategory": {
            "type": "string",
            "nullable": true
          },
          "priceOptions": {
            "type": "string",
            "nullable": true
          },
          "insuredAmount": {
            "type": "string",
            "nullable": true
          },
          "addressServiceRequested": {
            "type": "string",
            "nullable": true
          },
          "expressMailOptions": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.ExpressMailOptions"
          },
          "shipDate": {
            "type": "string",
            "nullable": true
          },
          "customerRefNo": {
            "type": "string",
            "nullable": true
          },
          "extraServices": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.ExtraServices"
          },
          "holdForPickup": {
            "type": "string",
            "nullable": true
          },
          "openDistribute": {
            "type": "string",
            "nullable": true
          },
          "permitNumber": {
            "type": "string",
            "nullable": true
          },
          "permitZIPCode": {
            "type": "string",
            "nullable": true
          },
          "permitHolderName": {
            "type": "string",
            "nullable": true
          },
          "crid": {
            "type": "string",
            "nullable": true
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderEMail": {
            "type": "string",
            "nullable": true
          },
          "recipientName": {
            "type": "string",
            "nullable": true
          },
          "recipientEMail": {
            "type": "string",
            "nullable": true
          },
          "receiptOption": {
            "type": "string",
            "nullable": true
          },
          "imageType": {
            "type": "string",
            "nullable": true
          },
          "holdForManifest": {
            "type": "string",
            "nullable": true
          },
          "nineDigitRoutingZip": {
            "type": "string",
            "nullable": true
          },
          "labelSequence": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.LabelSequence"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.EvsLabelModel": {
        "type": "object",
        "properties": {
          "evsCertifyRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.EVSCertifyRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.ExpressMailOptions": {
        "type": "object",
        "properties": {
          "deliveryOption": {
            "type": "string",
            "nullable": true
          },
          "waiverOfSignature": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.ExtraServices": {
        "type": "object",
        "properties": {
          "extraService": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.HFPFacilityModel": {
        "type": "object",
        "properties": {
          "hfpFacilityInfoRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.HFPFacilityRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.HFPFacilityRequest": {
        "type": "object",
        "properties": {
          "pickupCity": {
            "type": "string",
            "nullable": true
          },
          "pickupState": {
            "type": "string",
            "nullable": true
          },
          "pickupZIP": {
            "type": "string",
            "nullable": true
          },
          "pickupZIP4": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "userid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.ImageParameters": {
        "type": "object",
        "properties": {
          "labelSequence": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.LabelSequence"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.LabelSequence": {
        "type": "object",
        "properties": {
          "packageNumber": {
            "type": "string",
            "nullable": true
          },
          "totalPackages": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.PackagePickUpModel": {
        "type": "object",
        "properties": {
          "carrierPickupAvailabilityRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.CarrierPickupAvailabilityRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.PriorityMailRequest": {
        "type": "object",
        "properties": {
          "originZip": {
            "type": "string",
            "nullable": true
          },
          "destinationZip": {
            "type": "string",
            "nullable": true
          },
          "userid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.RateCalculator": {
        "type": "object",
        "properties": {
          "rateV4Request": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.RateV4Request"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.RateV4Request": {
        "type": "object",
        "properties": {
          "revision": {
            "type": "string",
            "nullable": true
          },
          "package": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.USPSPackage"
            },
            "nullable": true
          },
          "userid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.SpecialServices": {
        "type": "object",
        "properties": {
          "specialService": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.TrackID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.TrackerRequestModel": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "string",
            "nullable": true
          },
          "trackRequest": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.USPSTrackRequest"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.USPSAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip5": {
            "type": "string",
            "nullable": true
          },
          "zip4": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.USPSPackage": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "nullable": true
          },
          "firstClassMailType": {
            "type": "string",
            "nullable": true
          },
          "zipOrigination": {
            "type": "string",
            "nullable": true
          },
          "zipDestination": {
            "type": "string",
            "nullable": true
          },
          "pounds": {
            "type": "string",
            "nullable": true
          },
          "ounces": {
            "type": "string",
            "nullable": true
          },
          "container": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "machinable": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          },
          "girth": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "specialServices": {
            "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.SpecialServices"
          },
          "dropOffTime": {
            "type": "string",
            "nullable": true
          },
          "shipDate": {
            "type": "string",
            "nullable": true
          },
          "ratePriceType": {
            "type": "string",
            "nullable": true
          },
          "ratePaymentType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.USPS.Models.USPSTrackRequest": {
        "type": "object",
        "properties": {
          "trackID": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.USPS.Models.TrackID"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.EmployeeBasicInfoModel": {
        "type": "object",
        "properties": {
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "nullable": true
          },
          "ssn": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "vehicleName": {
            "type": "string",
            "nullable": true
          },
          "branchIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.EmployeeBranchWiseModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.EmployeeModel": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "format": "int64"
          },
          "basicInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmployeeBasicInfoModel"
          },
          "userInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserInfoModel"
          },
          "employmentInfo": {
            "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.EmploymentInfoModel"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.AddressInfo"
            },
            "nullable": true
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.Patient.Models.PhoneInfo"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "teamDetailsToAdd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TeamDetailsToAddDelete"
            },
            "nullable": true
          },
          "teamDetailsToDelete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.TeamDetailsToAddDelete"
            },
            "nullable": true
          },
          "assignCurrentEmployeeTaskToOtherEmployee": {
            "type": "boolean"
          },
          "updatedEmployeeAssignedToDetails": {
            "type": "string",
            "nullable": true
          },
          "reportingMarketingRepresentativeIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.EmployeeTypeModel": {
        "type": "object",
        "properties": {
          "employeeTypeId": {
            "type": "integer",
            "description": "EmployeeTypeId\r\n",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Code\r\n",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.EmploymentInfoModel": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "positionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "specialtyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hireDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "possibleAppointments": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.MenuPermissionModel": {
        "type": "object",
        "properties": {
          "accessPermissionId": {
            "type": "integer",
            "description": "AccessPermissionId\r\n",
            "format": "int64"
          },
          "menuId": {
            "type": "integer",
            "description": "MenuId\r\n",
            "format": "int32"
          },
          "isAllow": {
            "type": "boolean",
            "description": "IsAllow\r\n"
          }
        },
        "additionalProperties": false,
        "description": "RolePermissionToggleModel\r\n"
      },
      "WebAPI.Areas.UserManagement.Models.OtpSendRequest": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.ResendOTPRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.RoleMenuPermissionModel": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "RoleId\r\n",
            "format": "int64"
          },
          "menuPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.MenuPermissionModel"
            },
            "description": "PermissionId\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "RoleMenuPermissionModel\r\n"
      },
      "WebAPI.Areas.UserManagement.Models.RoleModel": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "RoleId\r\n",
            "format": "int64"
          },
          "roleName": {
            "type": "string",
            "description": "RoleName\r\n",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean",
            "description": "IsAdminRole\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "RoleModel\r\n"
      },
      "WebAPI.Areas.UserManagement.Models.SaveProfileReq": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "UserId\r\n",
            "format": "int64"
          },
          "fullName": {
            "type": "string",
            "description": "FullName\r\n",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email\r\n",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone\r\n",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "BirthDate\r\n",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "description": "Gender\r\n",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State\r\n",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "description": "Zipcode\r\n",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "CountryId\r\n",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "SaveProfileReq\r\n"
      },
      "WebAPI.Areas.UserManagement.Models.TeamDetailsToAddDelete": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "personId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.TwoFactorTokenModel": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "deliveryChannel": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time"
          },
          "rememberDevice": {
            "type": "boolean"
          },
          "rememberTokenId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "rememberTokenHash": {
            "type": "string",
            "nullable": true
          },
          "rememberExpiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.UserAuth": {
        "type": "object",
        "properties": {
          "p1": {
            "type": "string",
            "nullable": true
          },
          "p2": {
            "type": "string",
            "nullable": true
          },
          "fireBaseToken": {
            "type": "string",
            "nullable": true
          },
          "deviceInfo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.UserInfoModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "zenSync": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.UserSettingModel": {
        "type": "object",
        "properties": {
          "settingCode": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userSettingValueModel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebAPI.Areas.UserManagement.Models.UserSettingValueModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.UserManagement.Models.UserSettingValueModel": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Areas.Zendesk.Models.RequestBody": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "requesterName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.CardConnect.CardconnectProfileRequestBody": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "merchid": {
            "type": "string",
            "nullable": true
          },
          "accttype": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "account": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "postal": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "cof": {
            "type": "string",
            "nullable": true
          },
          "cofscheduled": {
            "type": "string",
            "nullable": true
          },
          "ecomind": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.AddressModel": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address1\r\n",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Address2\r\n",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City\r\n",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "description": "StateCode\r\n",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode\r\n",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude\r\n",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AddressModel\r\n"
      },
      "WebAPI.Models.DataboardFilterModel": {
        "type": "object",
        "properties": {
          "dateOfServiceFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfServiceTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dayDiff": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "tilesName": {
            "type": "string",
            "nullable": true
          },
          "lowQualityIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "expiryIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "accountTypeIds": {
            "type": "string",
            "nullable": true
          },
          "productItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.PasswordChangeModel": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.PasswordInfoModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseException": {
        "type": "object",
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseNotFound": {
        "type": "object",
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseOk": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseResult`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseUnauthorizeAccess": {
        "type": "object",
        "additionalProperties": false
      },
      "WebAPI.Models.ResponseUnprocessableEntity": {
        "type": "object",
        "additionalProperties": false
      },
      "WebAPI.Zendesk.UpdateZenUser": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "newPwd": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebAPI.Zendesk.UpdateZenUserNew": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "newPwd": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put **_ONLY_** your JWT Bearer token on textbox below!",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}